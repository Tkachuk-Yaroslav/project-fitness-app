{"version":3,"file":"static/js/138.cc4afd28.chunk.js","mappings":"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","sources":["Forms/styled.js","schemas/LoginSchema/index.jsx","Forms/Authentication/FormLogin/index.jsx","pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const AuthCont = styled('div')(() => {\n  return {\n    marginTop: '66px',\n    h1: {\n      fontFamily: 'RobotoBold',\n      fontSize: '24px',\n      lineHeight: 1.17,\n      marginBottom: '14px',\n    },\n    '.main-descr': {\n      fontFamily: 'RobotoRegular',\n      fontSize: '14px',\n      lineHeight: 1.29,\n      marginBottom: '28px',\n      opacity: '0.3',\n    },\n    input: {\n      fontFamily: 'RobotoRegular',\n      fontSize: '14px',\n      lineHeight: 1.29,\n      width: '100%',\n      height: '46px',\n      border: '1px solid rgba(239, 237, 232, 0.3)',\n      borderRadius: '12px',\n      backgroundColor: 'transparent',\n      color: 'var(--white-color)',\n      textIndent: '12px',\n      outline: 'none',\n      paddingTop: '2px',\n      transition: 'border-color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        borderColor: 'var(--orange-color)',\n      },\n    },\n    '.inputs-cont': {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '18px',\n      marginBottom: '28px',\n    },\n    '.input-error': {\n      borderColor: 'var(--error-color)',\n    },\n    '.input-success': {\n      borderColor: 'var(--success-color)',\n    },\n    '.notify-cont': {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '4px',\n      marginTop: '4px',\n    },\n    '.notify-descr': {\n      fontFamily: 'RobotoRegular',\n      fontSize: '12px',\n      letterSpacing: '0.01em',\n    },\n    '.error': {\n      color: 'var(--error-color)',\n    },\n    '.success': {\n      color: 'var(--success-color)',\n    },\n    button: {\n      fontSize: '16px',\n      lineHeight: 1.12,\n      padding: '12px 40px',\n      color: 'var(--white-color)',\n      borderRadius: '12px',\n\n      marginBottom: '12px',\n      backgroundColor: 'var(--orange-color)',\n      transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        backgroundColor: 'var(--light-orange-color)',\n      },\n      '&:disabled': {\n        color: 'rgba(239, 237, 232, 0.6)',\n        cursor: 'not-allowed',\n      },\n    },\n    '.navigate-cont': {\n      display: 'flex',\n      fontSize: '12px',\n    },\n    '.navigate-descr': {\n      opacity: 0.6,\n    },\n    '.navigate-link': {\n      textDecoration: 'underline',\n    },\n    '@media screen and (min-width: 768px)': {\n      marginTop: '105px',\n      h1: {\n        fontSize: '32px',\n        lineHeight: 1.375,\n        marginBottom: '16px',\n      },\n      '.main-descr': {\n        width: '496px',\n        fontSize: '16px',\n        lineHeight: 1.5,\n        marginBottom: '32px',\n      },\n      input: {\n        fontSize: '16px',\n        lineHeight: 1.5,\n        width: '364px',\n        height: '52px',\n      },\n      '.inputs-cont': {\n        gap: '20px',\n        marginBottom: '64px',\n      },\n      button: {\n        fontSize: '20px',\n        lineHeight: 1.2,\n        padding: '16px 60px',\n      },\n      '.navigate-cont': {\n        marginLeft: '5px',\n      },\n    },\n    '@media screen and (min-width: 1440px)': {\n      marginTop: '116px',\n    },\n  };\n});\n","import * as yup from \"yup\"\n\nconst emailPattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n\nexport const loginSchema = yup.object().shape({\n  email: yup.string().matches(emailPattern, 'Error email. Example: test@gmail.com').required('Required'),\n  password: yup\n    .string()\n    .min(6, 'Must be 6 or more characters')\n    .required('Required'),\n});","import { useFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { loginSchema } from '../../../schemas/LoginSchema/index';\nimport { AuthCont } from '../../styled';\nimport sprite from '../../../images/sprite.svg';\n\nconst FormLogin = ({ login }) => {\n  const onSubmit = async ({ email, password }, actions) => {\n    login({\n      email: email,\n      password: password,\n    });\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    // actions.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: loginSchema,\n    onSubmit,\n  });\n\n  return (\n    <AuthCont>\n      <div>\n        <h1>Sign In</h1>\n        <p className=\"main-descr\">\n          Welcome! Please enter your credentials to login to the platform:\n        </p>\n        <form onSubmit={formik.handleSubmit}>\n          <div className=\"inputs-cont\">\n            <div>\n              <input\n                autoComplete=\"off\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.email && formik.touched.email\n                    ? 'input-error'\n                    : formik.touched.email\n                    ? 'input-success'\n                    : ''\n                }\n              />\n              {!formik.errors.email && formik.touched.email && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success email</p>\n                </div>\n              )}\n              {formik.errors.email && formik.touched.email && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.email}</p>\n                </div>\n              )}\n            </div>\n            <div>\n              <input\n                autoComplete=\"off\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.password && formik.touched.password\n                    ? 'input-error'\n                    : formik.touched.password\n                    ? 'input-success'\n                    : ''\n                }\n              />\n              {!formik.errors.password && formik.touched.password && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success password</p>\n                </div>\n              )}\n              {formik.errors.password && formik.touched.password && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.password}</p>\n                </div>\n              )}\n            </div>\n          </div>\n          <button type=\"submit\" disabled={formik.isSubmitting}>\n            Sign In\n          </button>\n          <div className=\"navigate-cont\">\n            <p className=\"navigate-descr\">Don’t have an account?{'\\u00a0'}</p>\n            <Link to=\"/signup\" className=\"navigate-link\">\n              Sign Up\n            </Link>\n          </div>\n        </form>\n      </div>\n    </AuthCont>\n  );\n};\n\nexport default FormLogin;\n","import { Container } from 'components/styles/Container/Container';\nimport FormLogin from 'Forms/Authentication/FormLogin';\nimport toast from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from '../../redux/auth/thunks';\nimport { TrainingBgWrapperCont } from 'components/TrainingBgWrapper/TrainingBgWrapper.styled';\n\nconst SignInPage = () => {\n  const dispatch = useDispatch();\n\n  const login = async body => {\n    try {\n      await dispatch(loginThunk(body)).unwrap();\n      toast.success('Login successful', {\n        duration: 3000,\n        position: 'top-center',\n      });\n    } catch (error) {\n      toast.error(error.message, {\n        duration: 3000,\n        position: 'top-center',\n      });\n    }\n  };\n\n  return (\n    <TrainingBgWrapperCont className=\"pageSign\">\n      <Container>\n        <FormLogin login={login} />\n      </Container>\n    </TrainingBgWrapperCont>\n  );\n};\n\nexport default SignInPage;\n"],"names":["AuthCont","styled","marginTop","h1","fontFamily","fontSize","lineHeight","marginBottom","opacity","input","width","height","border","borderRadius","backgroundColor","color","textIndent","outline","paddingTop","transition","borderColor","display","flexDirection","gap","alignItems","letterSpacing","button","padding","cursor","textDecoration","marginLeft","loginSchema","yup","shape","email","matches","required","password","min","_ref","login","formik","useFormik","initialValues","validationSchema","onSubmit","async","_ref2","actions","Promise","resolve","setTimeout","_jsx","children","_jsxs","className","handleSubmit","autoComplete","name","type","placeholder","value","values","onChange","handleChange","onBlur","handleBlur","errors","touched","viewBox","href","concat","sprite","disabled","isSubmitting","Link","to","SignInPage","dispatch","useDispatch","TrainingBgWrapperCont","Container","FormLogin","loginThunk","body","unwrap","toast","duration","position","error","message"],"sourceRoot":""}