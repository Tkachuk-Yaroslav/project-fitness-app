{"version":3,"file":"static/js/388.e4221894.chunk.js","mappings":"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","sources":["components/Calendar/Calendar.styled.jsx","components/styles/Container/Container.jsx","components/DayDashboard/DayDashboard.styled.js","components/DayDashboard/DayDashboard.jsx","components/DayProducts/DayProducts.styled.js","components/DayProductsItem/DayProductsItem.styled.js","components/DayProductsItem/DayProductsItem.jsx","components/DayProducts/DayProducts.jsx","components/DayExercises/DayExercises.styled.js","components/DayExercisesItem/DayExercisesItem.styled.js","components/DayExercisesItem/DayExercisesItem.jsx","components/DayExercises/DayExercises.jsx","pages/DiaryPage/DiaryPage.styled.js","HOC/HocRedirect.js","components/Calendar/CalendarForDairy.jsx","pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["// import { createGlobalStyle, styled } from 'styled-components';\n\n// export const IconSvg = styled.svg`\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n// `;\n\n// // export const CalendarGlobalStyles = createGlobalStyle`\n// //  .react-datepicker__wrapper {\n// //     position: relative;\n\n// //   }\n// //   .react-datepicker {\n// //     position: absolute;\n// //     left: -20px;\n// //     top: 50%;\n// //     transform: translate(-15%, 0%);\n// //     display: flex;\n// //     flex-direction: column;\n// //     align-items: center;\n// //     padding: 14px;\n// //     background-color: #ef8964;\n// //     font-family: 'Roboto', sans-serif;\n// //     border-radius: 8px;\n// //   }\n// //   .react-datepicker__month-container {\n// //     float: inherit;\n// //     box-sizing: border-box;\n// //   }\n// //   .react-datepicker__day-names {\n// //     display: flex;\n// //     justify-content: space-between;\n// //     align-items: center;\n// //     padding-top: 14px;\n// //     margin-bottom: 8px;\n// //     border-top: 1px solid rgba(239, 237, 232, 0.2);\n// //   }\n// //   .react-datepicker__header {\n// //     position: relative;\n// //     background-color: #ef8964;\n// //   }\n\n// //   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n// //     border-bottom: 0px;\n// //     padding: 0;\n// //   }\n// //   .react-datepicker__day\n// //     react-datepicker__day--018.react-datepicker__day--selected\n// //     react-datepicker__day--today {\n// //     outline: none;\n// //     border: none;\n// //   }\n// //   .react-datepicker__current-month {\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 16px;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //     margin-bottom: 14px;\n// //   }\n// //   .react-datepicker__day-name {\n// //     margin: 0;\n// //     color: rgba(239, 237, 232, 0.5);\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-style: normal;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //   }\n\n// //   .react-datepicker__day--disabled {\n// //     opacity: 25%;\n// //   }\n// //   .react-datepicker__navigation {\n// //     margin-top: 14px;\n// //     color: white;\n// //   }\n// //   .react-datepicker__navigation--previous {\n// //     left: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation--next {\n// //     right: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation-icon::before:hover:focus {\n// //     border-color: white;\n// //   }\n// //   .react-datepicker__week {\n// //     display: flex;\n// //     align-items: center;\n// //     justify-content: space-between;\n// //     color: white;\n// //   }\n// //   .react-datepicker__day {\n// //     display: flex;\n// //     flex-direction: column;\n// //     justify-content: center;\n// //     align-items: center;\n// //     flex-shrink: 0;\n// //     margin: 0;\n// //     border-radius: 50%;\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-weight: 400;\n// //     line-height: 18px;\n// //     text-align: center;\n// //     width: 24px;\n// //     height: 24px;\n// //   }\n// //   .react-datepicker__month {\n// //     display: flex;\n// //     gap: 5px;\n// //     flex-direction: column;\n// //     justify-content: space-between;\n// //     margin: 0;\n// //   }\n// //   .react-datepicker__day--selected {\n// //     background-color: #040404;\n// //     color: #efede8;\n// //     font-size: 14px;\n// //   }\n// //   .react-datepicker__day--selected:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //   }\n// //   .react-datepicker__day:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--keyboard-selected {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--outside-month {\n// //     opacity: 50%;\n// //   }\n// //   .react-datepicker__triangle {\n// //     display: none;\n// //   }\n// // `;\n// export const CalendarGlobalStyles = createGlobalStyle`\n//   .react-datepicker__wrapper {\n//     position: relative;\n\n//   }\n//   .react-datepicker {\n//     position: absolute;\n//     left: 50%;\n//     top: 50%;\n//     transform: translate(-1%, 0%);\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     width: 327px;\n//     height: 354px;\n//     padding: 9px 18px;\n//   background-color: #3e85f3;\n//     font-family: Inter;\n//     border-radius: 16px;\n//   }\n//   .react-datepicker__month-container {\n//     float: inherit;\n//     box-sizing: border-box;\n//   }\n//   .react-datepicker__header {\n//     position: relative;\n//     background-color: #3e85f3;\n//   }\n//   .react-datepicker__day-names {\n//     display: flex;\n//     justify-content: space-between;\n//     align-items: center;\n//     padding: 8px 8px;\n//     border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n//   }\n//   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n//     border-bottom: 0px;\n//     padding: 0;\n//   }\n//   .react-datepicker__day react-datepicker__day--018.react-datepicker__day--selected react-datepicker__day--today{\n//     outline: none;\n//     border: none;\n// }\n//   .react-datepicker__current-month {\n//     font-family: Inter;\n//     font-size: 20px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 24px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__day-name {\n//     margin: 0;\n//    padding: 8px 8px;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 18px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__navigation {\n//     margin-top: 24px;\n//     color: white;\n//   }\n//   .react-datepicker__navigation--previous {\n//     left: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation--next {\n//     right: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation-icon::before:hover:focus {\n//     border-color: white;\n//   }\n//   .react-datepicker__week {\n//     display: flex;\n//     align-items: center;\n//     justify-content: space-between;\n//     color: white;\n//   }\n//   .react-datepicker__day {\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: center;\n//     align-items: center;\n//     gap: 8px;\n//     flex-shrink: 0;\n//     margin: 0;\n//     width: 32px;\n//     height: 32px;\n//     border-radius: 50%;\n//     color: white;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 400;\n//     line-height: 18px;\n//     text-align: center;\n//   }\n//   .react-datepicker__month {\n//     display: flex;\n//     gap: 7px;\n//     flex-direction: column;\n//     justify-content: space-between;\n//     padding-top: 16px;\n//     margin: 0;\n//   }\n//   .react-datepicker__day--selected {\n//     background-color:white;\n//     color:#3e85f3;\n//     font-size: 14px;\n//   }\n//   .react-datepicker__day--selected:hover {\n//     border-radius: 50%;\n//   background-color:white;\n//   }\n//   .react-datepicker__day:hover {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--keyboard-selected {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--weekend {\n//     opacity: 50%;\n//   }\n// .react-datepicker__day--outside-month {\n//     background-color: transparent;\n//     pointer-events: none;\n//     opacity: 0;\n//   }\n//   .react-datepicker__view-calendar-icon input {\n//     padding: 6px 10px 5px 13px;\n//   }\n//   .react-datepicker__triangle {\n//     visibility: hidden;\n//   }\n// `;\n\n// export const TitleWrapper = styled.button`\n//   width: 195px;\n//   color: #ffffff;\n//   background: #3e85f3;\n//   border-radius: 8px;\n//   font-weight: 700;\n//   line-height: 18px;\n//   text-align: center;\n//   text-transform: uppercase;\n//   padding: 8px 12px;\n//   font-size: 16px;\n//   justify-content: space-around;\n//   align-items: center;\n// `;\n\n//-------------------------------\nimport { createGlobalStyle, styled } from 'styled-components';\n\nexport const IconSvg = styled.svg`\n  position: absolute;\n  top: 36px;\n  right: 14px;\n`;\n\nexport const CalendarGlobalStyles = createGlobalStyle`\n .react-datepicker__wrapper {\n    position: relative;\n    \n  }\n  .react-datepicker {\n    position: absolute;\n    left: -20px;\n    top: 50%;\n    transform: translate(-15%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;    \n    padding: 14px;\n    background-color: #ef8964;\n    font-family: 'Roboto', sans-serif;\n    border-radius: 8px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 14px;\n    margin-bottom: 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;    \n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: normal;\n    margin-bottom: 14px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    color: rgba(239, 237, 232, 0.5);\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n\n  .react-datepicker__day--disabled {\n    opacity: 25%;\n  }\n  .react-datepicker__navigation {\n    margin-top: 14px;\n    color: white;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: white;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin: 0;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n    width: 24px;\n    height: 24px;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efede8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: white;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--outside-month {\n    opacity: 50%;\n  }\n  .react-datepicker__triangle {\n    display: none;\n  }\n`;\n\nexport const InputField = styled.input`\n  width: 100%;\n  padding: 14px;\n  align-items: center;\n  gap: 10px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  background-color: transparent;\n  color: #efede8;\n\n  &:hover {\n    border-color: #e6533c; /* Змінюємо колір бордера на червоний при ховері */\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 96px;\n    padding-right: 96px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DashboardSection = styled.section`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  width: 100%;\n  width: 335px;\n  /* padding-bottom: 40px; */\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n    width: 593px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 48px;\n    width: 390px;\n  }\n`;\n\nexport const DashboardList = styled.ul`\n  display: flex;\n  column-gap: 13px;\n  row-gap: 20px;\n  flex-wrap: wrap;\n  li:nth-child(1),\n  li:nth-child(2) {\n    background-color: var(--orange-color);\n  }\n  @media screen and (max-width: 767px) {\n    li:nth-child(1),\n    li:nth-child(3),\n    li:nth-child(5) {\n      width: 157px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 593px;\n    height: 248px;\n    flex-direction: column;\n    gap: 16px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 390px;\n    height: 380px;\n    flex-direction: row;\n  }\n`;\n\n// export const DashboardItems = styled.li`\n//   /* position: relative; */\n//   width: 165px;\n//   height: 96px;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-between;\n//   border-radius: 12px;\n//   border: 1px solid rgba(239, 237, 232, 0.2);\n//   background-color: rgba(239, 237, 232, 0.05);\n//   padding: 14px;\n//   font-size: 12px;\n//   line-height: calc(16 / 12);\n//   && > h3 {\n//       color: ${props => {\n//         if (props.index === 0 || props.index === 1)\n//           return 'rgba(239, 237, 232, 0.8)';\n//         if (props.index === 2) return 'rgba(239, 237, 232, 0.4)';\n//       }};\n//   /* flex-basis: calc((100% - 1 * 45px) / 2); */\n//   @media screen and (min-width: 768px) {\n//     flex-basis: auto;\n//     width: 187px;\n//     height: 116px;\n//     padding: 18px;\n//   };\n// `;\n// export const DashboardItems = styled.li`\n//   /* position: relative; */\n//   width: 165px;\n//   height: 96px;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-between;\n//   border-radius: 12px;\n//   border: 1px solid rgba(239, 237, 232, 0.2);\n//   background-color: rgba(239, 237, 232, 0.05);\n//   padding: 14px;\n//   font-size: 12px;\n//   line-height: calc(16 / 12);\n//   && > h3 {\n//     color: ${props => {\n//       if (props.$index === 1) return 'rgba(239, 237, 232, 0.8)';\n//       return 'rgba(239, 237, 232, 0.4)';\n//     }};\n//   }\n\n//   @media screen and (min-width: 768px) {\n//     flex-basis: auto;\n//     width: 187px;\n//     height: 116px;\n//     padding: 18px;\n//   }\n// `;\n\nexport const DashboardItems = styled.li`\n  /* position: relative; */\n  width: 165px;\n  height: 96px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 12px;\n  border: 1px solid ${props =>\n    props.$sportsRemaining < 0 ? '#3CBF61' : props.$caloriesRemaining < 0 ? '#E9101D' : 'rgba(239, 237, 232, 0.2)'};\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 14px;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n\n  && > h3 {\n    color: ${props => {\n      if (props.$index === 1) return 'rgba(239, 237, 232, 0.8)';\n      return 'rgba(239, 237, 232, 0.4)';\n    }};\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-basis: auto;\n    width: 187px;\n    height: 116px;\n    padding: 18px;\n  }\n`;\n\n\nexport const DashboardTitle = styled.h3`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  /* color: rgba(239, 237, 232, 0.4); */\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(16 / 12);\n  @media screen and (min-width: 768px) {\n    line-height: calc(18 / 12);\n  }\n`;\n\nexport const DashboardData = styled.p`\n  color: var(--white-color);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: calc(20 / 18);\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: calc(32 / 24);\n  }\n`;\n\nexport const DashboardTextContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const DashboardText = styled.p`\n  display: flex;\n  max-width: 300px;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n    max-width: 558px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 358px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid var(--beige-color);\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: var(--beige-color);\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  DashboardSection,\n  DashboardList,\n  DashboardItems,\n  DashboardTitle,\n  DashboardData,\n  DashboardText,\n  IconWrap,\n  DashboardTextContainer,\n} from './DayDashboard.styled';\nimport sprite from '../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\n\nimport { getDiaryData } from 'api/dairy';\n\nconst DayDashboard = ({ calendarData }) => {\n  const { user } = useSelector(state => state.auth);\n  const [dashboardData, setDashboardData] = useState(null);\n  const dailyPhysicalActivity = 110;\n  const caloriesRemaining = Math.round(\n    user.bmr - (dashboardData && dashboardData.consumedCalories)\n  );\n  const sportsRemaining = Math.round(\n    dailyPhysicalActivity - (dashboardData && dashboardData.consumedBurned / 60)\n  );\n\n  // user.bmr - (dashboardData && dashboardData.consumedCalories)\n  // (dashboardData && dashboardData.consumedBurned)\n  //   const params = {\n  //     // date: '2024-01-17T13:57:32.000Z',\n  //     date: '24/01/2024',\n  //   };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // const response = await axios.get(apiUrl, { params });\n        const response = await getDiaryData(calendarData);\n        setDashboardData(response);\n        // console.log(response.data);\n      } catch (error) {\n        console.error('error:', error);\n      }\n    };\n\n    fetchData();\n  }, [calendarData]);\n\n  return (\n    <div>\n      <DashboardSection>\n        <DashboardList>\n          <DashboardItems $index={1}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-fork-knife`} />\n              </svg>\n              Daily calorie intake\n            </DashboardTitle>\n            <DashboardData>{user.bmr}</DashboardData>\n          </DashboardItems>\n          <DashboardItems $index={1}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-dumbbell`} />\n              </svg>\n              Daily physical activity\n            </DashboardTitle>\n            <DashboardData>{dailyPhysicalActivity} min</DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-apple`} />\n              </svg>\n              Сalories consumed\n            </DashboardTitle>\n            <DashboardData>\n              {Math.round(dashboardData && dashboardData.consumedCalories)}\n            </DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-fire`} />\n              </svg>\n              Сalories burned\n            </DashboardTitle>\n            <DashboardData>\n              {dashboardData && dashboardData.consumedBurned}\n            </DashboardData>\n          </DashboardItems>\n          <DashboardItems $caloriesRemaining={caloriesRemaining}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-bubble`} />\n              </svg>\n              Calories remaining\n            </DashboardTitle>\n            <DashboardData $index={1}>{caloriesRemaining}</DashboardData>\n          </DashboardItems>\n          <DashboardItems $sportsRemaining={sportsRemaining}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-running-figure`} />\n              </svg>\n              Sports remaining\n            </DashboardTitle>\n            <DashboardData>\n              {sportsRemaining < 0 ? `+${-sportsRemaining}` : sportsRemaining}{' '}\n              min\n            </DashboardData>{' '}\n          </DashboardItems>\n        </DashboardList>\n        <DashboardTextContainer>\n          <IconWrap>\n            <svg width={20} height={20}>\n              <use xlinkHref={`${sprite}#icon-attention`} />\n            </svg>\n          </IconWrap>\n          <DashboardText>\n            Record all your meals in the calorie diary every day. This will help\n            you be aware of your nutrition and make informed choices.\n          </DashboardText>\n        </DashboardTextContainer>\n      </DashboardSection>\n    </div>\n  );\n};\n\nexport default DayDashboard;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ProductsSection = styled.section`\n  width: 335px;\n  max-height: 842px;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 4px 16px 16px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  overflow: auto;\n  @media screen and (max-width: 767px) {\n    min-height: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 238px;\n    /* gap: 19px; */\n  }\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n    height: 238px;\n  }\n`;\n\nexport const SvgExercise = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--orange-color);\n  margin-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.5;\n  }\n`;\n\nexport const ProductsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 22px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 19px;\n  }\n`;\n\nexport const ProductsTitle = styled.h3`\n  color: rgba(239, 237, 232, 0.5);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n`;\n\nexport const ProductsLink = styled(Link)`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  color: var(--orange-color);\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(18 / 14);\n  margin-right: 12px;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n  &:hover,\n  &:focus {\n    color: var(--white-color);\n    ${SvgExercise} {\n      stroke: var(--white-color);\n    }\n  }\n`;\n\nexport const NoDataTitle = styled.p`\n  color: rgba(239, 237, 232, 0.3);\n  /* font-family: Roboto; */\n  font-size: 14px;\n  font-style: normal;\n  line-height: calc(18 / 14);\n`;\n\nexport const NoDataWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 94px;\n  @media screen and (min-width: 768px) {\n    padding: 50px;\n  }\n`;\n\nexport const ProductsTitleList = styled.ul`\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  display: flex;\n  @media screen and (min-width: 1440px) {\n    margin-left: 16px;\n  }\n`;\n\nexport const ProductsTitleItem = styled.li`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  margin-right: ${props => {\n    if (props.$index === 0) return '190px';\n    if (props.$index === 1) return '86px';\n    if (props.$index === 2) return '56px';\n    if (props.$index === 3) return '62px';\n  }};\n  @media screen and (min-width: 1440px) {\n    margin-right: ${props => {\n      if (props.$index === 0) return '198px';\n      if (props.$index === 1) return '124px';\n      if (props.$index === 2) return '70px';\n      if (props.$index === 3) return '74px';\n    }};\n  }\n`;\n","import styled from 'styled-components';\nexport const ProductsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  &:not(:last-child) {\n    margin-bottom: 40px;\n  }\n  @media screen and (min-width: 768px) {\n    &:not(:last-child) {\n      margin-bottom: 8px;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    margin-left: 16px;\n  }\n`;\n\nexport const ProductsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3 1fr);\n  gap: 16px;\n  :nth-child(1),\n  :nth-child(2) {\n    grid-column: span 5;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 8px;\n  }\n`;\n\nexport const ProductsItem = styled.li`\n  && > p {\n    width: ${props => {\n      if (props.$index === 0 || props.$index === 1) return '298px';\n      if (props.$index === 2) return '80px';\n      if (props.$index === 3) return '80px';\n      if (props.$index === 4) return '76px';\n    }};\n  }\n  @media screen and (min-width: 768px) {\n    && > p {\n      width: ${props => {\n        if (props.$index === 0) return '204px';\n        if (props.$index === 1) return '128px';\n        if (props.$index === 2 || props.$index === 3) return '90px';\n        if (props.$index === 4) return '80px';\n      }};\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    && > p {\n      width: ${props => {\n        if (props.$index === 0) return '212px';\n        if (props.$index === 1) return '166px';\n        if (props.$index === 2 || props.$index === 3) return '105px';\n        if (props.$index === 4) return '110px';\n      }};\n    }\n  }\n  && > p {\n    display: ${props => {\n      if (props.$index === 4) return 'flex';\n    }};\n    gap: ${props => {\n      if (props.$index === 4) return '8px';\n    }};\n  }\n`;\n\nexport const ProductsTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n  @media screen and (max-width: 1439px) {\n    max-width: 78px;\n  }\n  @media screen and (max-width: 767px) {\n    max-width: 80px;\n  }\n`;\n\nexport const ProductsData = styled.p`\n  align-items: center;\n  padding: 10px 14px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  color: var(--white-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  &::first-letter {\n    text-transform: uppercase;\n  }\n\n`;\n\nexport const IndicatorIcon = styled.span`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background: var(--success-color);\n`;\n\nexport const TrashBtn = styled.button`\n  background-color: transparent;\n  position: absolute;\n  top: 198px;\n  right: 6px;\n  @media screen and (min-width: 768px) {\n    top: 10px;\n    right: 16px;\n  }\n  @media screen and (min-width: 1440px) {\n    right: 20px;\n  }\n`;\n","import 'overlayscrollbars/overlayscrollbars.css';\nimport React, { useContext } from 'react';\n\nimport {\n  ProductsContainer,\n  ProductsList,\n  ProductsItem,\n  ProductsTitle,\n  ProductsData,\n  TrashBtn,\n  IndicatorIcon,\n} from './DayProductsItem.styled';\nimport sprite from '../../images/sprite.svg';\nimport axios from 'axios';\nimport { getDiaryData } from 'api/dairy';\nimport { ParentContext } from '../DayProducts/DayProducts';\n\nconst DayProductsItem = (product, calendarData) => {\n  console.log(product.calendarData, 'calendarData in DayProductsItem');\n  console.log(product, 'пропс в DayProductsItem');\n\n  const { setDiaryProdData } = useContext(ParentContext);\n  const handleDelete = async () => {\n    try {\n      // Викликаємо API для видалення вправи\n      await axios.delete(\n        `https://project-fitness-app-back.onrender.com/api/dairy/delProduct/${product.product._id}`\n      );\n      // Викликаємо функцію оновлення стану в компоненті, що містить список продуктів\n      const data = await getDiaryData(product.calendarData);\n      // const data = await testData();\n      setDiaryProdData(data.consumedProducts);\n    } catch (error) {\n      console.error('Error deleting produts:', error);\n    }\n  };\n  return (\n    <ProductsContainer>\n      <ProductsList>\n        <ProductsItem $index={0}>\n          <ProductsTitle>Title</ProductsTitle>\n          <ProductsData>{product.product.product.title}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={1}>\n          <ProductsTitle>Category</ProductsTitle>\n          <ProductsData>{product.product.product.category}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={2}>\n          <ProductsTitle>Calories</ProductsTitle>\n          <ProductsData>{Math.round(product.product.calories)}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={3}>\n          <ProductsTitle>Weight</ProductsTitle>\n          <ProductsData>{product.product.amount}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={4}>\n          <ProductsTitle>Recommend</ProductsTitle>\n          <ProductsData>\n            <IndicatorIcon />\n            Yes\n          </ProductsData>\n        </ProductsItem>\n      </ProductsList>\n      <TrashBtn onClick={handleDelete}>\n        <svg width={20} height={20}>\n          <use xlinkHref={`${sprite}#icon-trash`} />\n        </svg>\n      </TrashBtn>\n    </ProductsContainer>\n  );\n};\n\nexport default DayProductsItem;\n","import React, { useEffect, useState } from 'react';\nimport 'overlayscrollbars/overlayscrollbars.css';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport '../../components/styles/ScrollbarStyled/scrollbarStyled.css';\nimport {\n  ProductsSection,\n  ProductsTitle,\n  ProductsLink,\n  ProductsContainer,\n  SvgExercise,\n  NoDataTitle,\n  NoDataWrap,\n  ProductsTitleList,\n  ProductsTitleItem,\n} from './DayProducts.styled';\nimport DayProductsItem from 'components/DayProductsItem/DayProductsItem';\nimport sprite from '../../images/sprite.svg';\nimport { getDiaryData } from 'api/dairy';\n\nexport const ParentContext = React.createContext();\nconst DayProducts = ({ calendarData }) => {\n  const [diaryProdData, setDiaryProdData] = useState([]);\n  console.log(calendarData, 'calendarData');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getDiaryData(calendarData);\n        // const data = await testData();\n        setDiaryProdData(data.consumedProducts);\n      } catch (error) {}\n    };\n\n    fetchData();\n  }, [calendarData]);\n  console.log(diaryProdData, 'diareProdData');\n  return (\n    <>\n      <ProductsSection>\n        <ProductsContainer>\n          <ProductsTitle>Products</ProductsTitle>\n          <ProductsLink to={'/products'}>\n            Add product\n            <SvgExercise width={16} height={16}>\n              <use xlinkHref={`${sprite}#icon-arrow-right`} />\n            </SvgExercise>\n          </ProductsLink>\n        </ProductsContainer>\n        {diaryProdData.length > 0 ? (\n          <ProductsTitleList>\n            <ProductsTitleItem $index={0}>Title</ProductsTitleItem>\n            <ProductsTitleItem $index={1}>Category</ProductsTitleItem>\n            <ProductsTitleItem $index={2}>Calories</ProductsTitleItem>\n            <ProductsTitleItem $index={3}>Weight</ProductsTitleItem>\n            <ProductsTitleItem>Recommend</ProductsTitleItem>\n          </ProductsTitleList>\n        ) : null}\n        <OverlayScrollbarsComponent defer>\n          {diaryProdData.length > 0 ? (\n            diaryProdData.map(product => {\n              console.log(product, 'Один продукт');\n              return (\n                <ParentContext.Provider\n                  key={product._id}\n                  value={{ diaryProdData, setDiaryProdData }}\n                >\n                  <DayProductsItem\n                    product={product}\n                    calendarData={calendarData}\n                  />\n                </ParentContext.Provider>\n              );\n            })\n          ) : (\n            <NoDataWrap>\n              <NoDataTitle>Not found products</NoDataTitle>\n            </NoDataWrap>\n          )}\n        </OverlayScrollbarsComponent>\n      </ProductsSection>\n    </>\n  );\n};\n\nexport default DayProducts;\n","import { Link } from 'react-router-dom';\nimport { createGlobalStyle, styled } from 'styled-components';\n\nexport const ExercisesSection = styled.section`\n  width: 335px;\n  max-height: 1088px;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 4px 16px 16px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  overflow: auto;\n  @media screen and (max-width: 767px) {\n    min-height: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 238px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n    height: 238px;\n  }\n`;\n\nexport const ProductsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 22px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 19px;\n  }\n`;\n\nexport const ExercisesTitle = styled.h3`\n  color: rgba(239, 237, 232, 0.5);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n`;\n\nexport const SvgExercise = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--orange-color);\n  margin-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.5;\n  }\n`;\n\nexport const ExercisesLink = styled(Link)`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  color: var(--orange-color);\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(18 / 14);\n  margin-right: 12px;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n  &:hover,\n  &:focus {\n    color: var(--white-color);\n    ${SvgExercise} {\n      stroke: var(--white-color);\n    }\n  }\n`;\n\nexport const NoDataTitle = styled.p`\n  color: rgba(239, 237, 232, 0.3);\n  /* font-family: Roboto; */\n  font-size: 14px;\n  font-style: normal;\n  line-height: calc(18 / 14);\n`;\n\nexport const NoDataWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 94px;\n  @media screen and (min-width: 768px) {\n    padding: 50px;\n  }\n`;\n\nexport const StyledScrollbar = createGlobalStyle`\n.os-scrollbar {\n    --os-track-border-radius: 0;\n    --os-handle-bg: rgba(239, 237, 232, 0.10);\n    --os-handle-bg-hover: #EF8964;\n    --os-handle-bg-active: #E6533C;\n}`;\n\nexport const ExercisesTitleList = styled.ul`\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  display: flex;\n  @media screen and (min-width: 1440px) {\n    margin-left: 16px;\n  }\n`;\n\nexport const ExercisesTitleItem = styled.li`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  \n  margin-right: ${props => {\n    if (props.$index === 0) return '76px';\n    if (props.$index === 1) return '84px';\n    if (props.$index === 2) return '100px';\n    if (props.$index === 3) return '62px';\n    if (props.$index === 4) return '10px';\n    \n  }};\n  @media screen and (min-width: 1440px) {\n    margin-right: ${props => {\n      if (props.$index === 0) return '100px';\n      if (props.$index === 1) return '108px';\n      if (props.$index === 2) return '106px';\n      if (props.$index === 3) return '80px';\n      if (props.$index === 4) return '16px';\n    }};\n  }\n  @media screen and (max-width: 1439px) {\n    width: ${props => {\n    if (props.$index === 4) return '74px';\n  }};\n  }\n  `;\n","import styled from 'styled-components';\nexport const ProductsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  &:not(:last-child) {\n    margin-bottom: 40px; \n  }\n  @media screen and (min-width: 768px) {\n    &:not(:last-child) {\n    margin-bottom: 8px; \n  }\n  }\n  @media screen and (min-width: 1440px) {\n    margin-left: 16px;\n  }\n`;\n\nexport const ProductsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  :nth-child(1),\n  :nth-child(2),\n  :nth-child(3) {\n    grid-column: span 5;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 8px;\n  }\n`;\n\nexport const ProductsItem = styled.li`\n  && > p {\n    width: ${props => {\n      if (props.$index === 0 || props.$index === 1 || props.$index === 2) return '298px';\n      if (props.$index === 3) return '80px';\n      if (props.$index === 4) return '80px';\n      if (props.$index === 5) return '76px';\n    }};\n  }\n  @media screen and (min-width: 768px) {\n    && > p {\n      width: ${props => {\n        if (props.$index === 0) return '90px';\n        if (props.$index === 1) return '132px';\n        if (props.$index === 2) return '128px';\n        if (props.$index === 3) return '84px';\n        if (props.$index === 4) return '78px';\n        if (props.$index === 5) return '72px';\n      }};\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    && > p {\n      width: ${props => {\n        if (props.$index === 0) return '115px';\n        if (props.$index === 1) return '157px';\n        if (props.$index === 2) return '131px';\n        if (props.$index === 3) return '106px';\n        if (props.$index === 4) return '91px';\n        if (props.$index === 5) return '82px';\n      }};\n    }\n  }\n`;\n\nexport const ProductsTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  @media screen and (min-width: 768px) {\n    display:none;\n  }\n  @media screen and (max-width: 1439px) {\n    max-width: 78px;\n  }\n  @media screen and (max-width: 767px) {\n    max-width: 80px;\n  }\n`;\n\nexport const ProductsData = styled.p`\n  padding: 10px 14px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  color: var(--white-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n    &::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const TrashBtn = styled.button`\n  background-color: transparent;\n  position: absolute;\n  top: 280px;\n  right: 6px;\n  @media screen and (min-width: 768px) {\n    top: 10px;\n    right: 16px;\n  }\n  @media screen and (min-width: 1440px) {\n    right: 20px;\n  }\n`;\n","import React, { useContext } from 'react';\nimport './styles.css';\n\nimport {\n  ProductsContainer,\n  ProductsList,\n  ProductsItem,\n  ProductsTitle,\n  ProductsData,\n  TrashBtn,\n} from './DayExercisesItem.styled';\nimport sprite from '../../images/sprite.svg';\nimport axios from 'axios';\nimport { getDiaryData } from 'api/dairy';\n\nimport { Parent2Context } from '../DayExercises/DayExercises';\n\nconst DayExercisesItem = (exercise, calendarData) => {\n  console.log(exercise.exercise._id, 'exercse');\n  const { setDiaryData } = useContext(Parent2Context);\n  const handleDelete = async () => {\n    try {\n      // Викликаємо API для видалення вправи\n      await axios.delete(\n        `https://project-fitness-app-back.onrender.com/api/dairy/delExercise/${exercise.exercise._id}`\n      );\n      // Викликаємо функцію оновлення стану в компоненті, що містить список вправ\n      const data = await getDiaryData(exercise.calendarData);\n      // const data = await testData();\n      setDiaryData(data.exercisesDone);\n    } catch (error) {\n      console.error('Error deleting exercise:', error);\n    }\n  };\n\n  return (\n    <ProductsContainer>\n      <ProductsList>\n        <ProductsItem $index={0}>\n          <ProductsTitle>Part</ProductsTitle>\n          <ProductsData>{exercise.exercise.exercise.bodyPart}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={1}>\n          <ProductsTitle>Equipment</ProductsTitle>\n          <ProductsData>{exercise.exercise.exercise.equipment}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={2}>\n          <ProductsTitle>Name</ProductsTitle>\n          <ProductsData>{exercise.exercise.exercise.name}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={3}>\n          <ProductsTitle>Target</ProductsTitle>\n          <ProductsData>{exercise.exercise.exercise.target}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={4}>\n          <ProductsTitle>Burned Calories</ProductsTitle>\n          <ProductsData>{exercise.exercise.calories}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={5}>\n          <ProductsTitle>Time</ProductsTitle>\n          <ProductsData>{exercise.time}</ProductsData>\n        </ProductsItem>\n      </ProductsList>\n      <TrashBtn onClick={handleDelete}>\n        <svg width={20} height={20}>\n          <use xlinkHref={`${sprite}#icon-trash`} />\n        </svg>\n      </TrashBtn>\n    </ProductsContainer>\n  );\n};\n\nexport default DayExercisesItem;\n","import React, { useEffect, useState } from 'react';\nimport 'overlayscrollbars/overlayscrollbars.css';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport '../../components/styles/ScrollbarStyled/scrollbarStyled.css';\nimport {\n  ExercisesSection,\n  ExercisesTitle,\n  ExercisesLink,\n  ProductsContainer,\n  SvgExercise,\n  NoDataTitle,\n  NoDataWrap,\n  ExercisesTitleList,\n  ExercisesTitleItem,\n} from './DayExercises.styled';\nimport DayExercisesItem from 'components/DayExercisesItem/DayExercisesItem';\nimport sprite from '../../images/sprite.svg';\n\nimport { getDiaryData } from 'api/dairy';\n\nexport const Parent2Context = React.createContext();\n\nconst DayExercises = ({ calendarData }) => {\n  const [diaryData, setDiaryData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getDiaryData(calendarData);\n        // const data = await testData();\n        setDiaryData(data.exercisesDone);\n      } catch (error) {}\n    };\n\n    fetchData();\n  }, [calendarData]);\n\n  return (\n    <>\n      <ExercisesSection>\n        <ProductsContainer>\n          <ExercisesTitle>Exercises</ExercisesTitle>\n          <ExercisesLink to={'/exercises'}>\n            Add exercise\n            <SvgExercise width={16} height={16}>\n              <use xlinkHref={`${sprite}#icon-arrow-right`} />\n            </SvgExercise>\n          </ExercisesLink>\n        </ProductsContainer>\n        {diaryData.length > 0 ? (\n  <ExercisesTitleList>\n    <ExercisesTitleItem $index={0}>Part</ExercisesTitleItem>\n    <ExercisesTitleItem $index={1}>Equipment</ExercisesTitleItem>\n    <ExercisesTitleItem $index={2}>Name</ExercisesTitleItem>\n    <ExercisesTitleItem $index={3}>Target</ExercisesTitleItem>\n    <ExercisesTitleItem $index={4}>Burned Calories</ExercisesTitleItem>\n    <ExercisesTitleItem>Time</ExercisesTitleItem>\n  </ExercisesTitleList>\n) : null}\n        <OverlayScrollbarsComponent defer>\n          {diaryData.length > 0 ? (\n            diaryData.map(exercise => {\n              return (\n                <Parent2Context.Provider\n                  key={exercise._id}\n                  value={{ diaryData, setDiaryData }}\n                >\n                  <DayExercisesItem\n\n                    key={exercise._id}\n                    exercise={exercise}\n                    time={exercise.time}\n                    calendarData={calendarData}\n                  />\n                </Parent2Context.Provider>\n              );\n            })\n          ) : (\n            <NoDataWrap>\n              <NoDataTitle>Not found exercises</NoDataTitle>\n            </NoDataWrap>\n          )}\n        </OverlayScrollbarsComponent>\n      </ExercisesSection>\n    </>\n  );\n};\n\nexport default DayExercises;\n","import styled from 'styled-components';\n\nexport const DiaryContainer = styled.div`\n  /* width: 100%; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 40px;\n  @media screen and (min-width: 768px) {\n    flex-direction: column-reverse;\n    gap: 64px;\n  }\n  @media screen and (min-width: 1440px) {\n    flex-direction: row-reverse;\n    gap: 32px;\n  }\n`;\n\nexport const DiaryInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n  }\n`;\n","import { Navigate } from \"react-router-dom\"\n\nconst WithDataRedirect = (Component) => {\n    return (props) => {\n        const {user: {bmr}} = props\n    return bmr ? <Component {...props} /> : <Navigate to='/profile' />\n}} \nexport default WithDataRedirect","import DatePicker from 'react-datepicker';\nimport { CalendarGlobalStyles, IconSvg, InputField } from './Calendar.styled';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nimport sprite from '../../images/sprite.svg';\nimport { useState, useEffect } from 'react';\nimport { format } from 'date-fns';\n\nconst CalendarForDiary = ({ name, onChangeData }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  console.log('selectedDate', selectedDate);\n\n  const formatDate = format(new Date(selectedDate), 'dd/MM/yyyy');\n  // console.log('formatDate', formatDate);\n  // const formatDateString = String(formatDate);\n  // console.log('formatDateString', formatDateString.toisosstring);\n\n  useEffect(() => {\n    const params = { date: formatDate };\n    console.log(params, 'params');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDateChange = async date => {\n    console.log(date, 'date');\n    setSelectedDate(date);\n    onChangeData(date);\n  };\n  return (\n    <>\n      <div style={{ width: 150, position: 'relative', paddingTop: 22 }}>\n        <IconSvg width=\"18\" height=\"18\">\n          <use href={`${sprite}#icon-calendar-white`}></use>\n        </IconSvg>\n\n        <DatePicker\n          // {...field}\n          selected={selectedDate}\n          onChange={handleDateChange}\n          customInput={<InputField name={name} style={{ cursor: 'pointer' }} />}\n          dateFormat={'dd/MM/yyyy'}\n          calendarStartDay={1}\n          formatWeekDay={day => day.substring(0, 1)}\n          placeholderText={selectedDate === null ? 'Birthday' : null}\n        />\n\n        <CalendarGlobalStyles />\n      </div>\n    </>\n  );\n};\n\nexport default CalendarForDiary;\n","import React, { useState } from 'react';\nimport DayDashboard from 'components/DayDashboard/DayDashboard';\nimport DayProducts from 'components/DayProducts/DayProducts';\nimport DayExercises from 'components/DayExercises/DayExercises';\nimport { DiaryContainer, DiaryInfoContainer } from './DiaryPage.styled';\nimport { Container } from 'components/styles/Container/Container';\nimport { Formik } from 'formik';\nimport WithDataRedirect from 'HOC/HocRedirect';\nimport CalendarForDiary from 'components/Calendar/CalendarForDairy';\nimport { format } from 'date-fns';\nconst DiaryPage = () => {\n  const [data, setData] = useState(new Date());\n  const formatDateDP = format(new Date(data), 'dd/MM/yyyy');\n  console.log('formatDateDP', formatDateDP);\n  const handleChange = newState => {\n    setData(newState);\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{\n          day: new Date(),\n        }}\n      >\n        {() => (\n          <form>\n            <CalendarForDiary name=\"day\" onChangeData={handleChange} />\n          </form>\n        )}\n      </Formik>\n\n      <DiaryContainer>\n        <DayDashboard calendarData={formatDateDP} />\n        <DiaryInfoContainer>\n          <DayProducts calendarData={formatDateDP} />\n          <DayExercises calendarData={formatDateDP} />\n        </DiaryInfoContainer>\n      </DiaryContainer>\n    </Container>\n  );\n};\nconst WrapedDiaryPage = WithDataRedirect(DiaryPage);\nexport default WrapedDiaryPage;\n"],"names":["IconSvg","styled","_templateObject","_taggedTemplateLiteral","CalendarGlobalStyles","createGlobalStyle","_templateObject2","InputField","_templateObject3","Container","DashboardSection","DashboardList","DashboardItems","props","$sportsRemaining","$caloriesRemaining","$index","DashboardTitle","_templateObject4","DashboardData","_templateObject5","DashboardTextContainer","_templateObject6","DashboardText","_templateObject7","IconWrap","_templateObject8","_ref","calendarData","user","useSelector","state","auth","dashboardData","setDashboardData","useState","caloriesRemaining","Math","round","bmr","consumedCalories","sportsRemaining","consumedBurned","useEffect","async","response","getDiaryData","error","console","fetchData","_jsx","children","_jsxs","width","height","xlinkHref","concat","sprite","ProductsSection","SvgExercise","ProductsContainer","ProductsTitle","ProductsLink","Link","NoDataTitle","NoDataWrap","ProductsTitleList","ProductsTitleItem","_templateObject9","ProductsList","ProductsItem","ProductsData","IndicatorIcon","TrashBtn","DayProductsItem","product","log","setDiaryProdData","useContext","ParentContext","title","category","calories","amount","onClick","axios","_id","data","consumedProducts","React","diaryProdData","_Fragment","to","length","OverlayScrollbarsComponent","defer","map","Provider","value","ExercisesSection","ExercisesTitle","ExercisesLink","ExercisesTitleList","ExercisesTitleItem","_templateObject10","DayExercisesItem","exercise","setDiaryData","Parent2Context","bodyPart","equipment","name","target","time","exercisesDone","diaryData","DiaryContainer","DiaryInfoContainer","Component","Navigate","onChangeData","selectedDate","setSelectedDate","Date","formatDate","format","params","date","style","position","paddingTop","href","DatePicker","selected","onChange","customInput","cursor","dateFormat","calendarStartDay","formatWeekDay","day","substring","placeholderText","WithDataRedirect","DiaryPage","setData","formatDateDP","handleChange","newState","Formik","initialValues","CalendarForDiary","DayDashboard","DayProducts","DayExercises"],"sourceRoot":""}