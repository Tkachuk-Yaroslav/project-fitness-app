{"version":3,"file":"static/js/930.658bf2c0.chunk.js","mappings":"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","sources":["components/styles/Container/Container.jsx","components/DayDashboard/DayDashboard.styled.js","components/DayDashboard/DayDashboard.jsx","components/DayProducts/DayProducts.styled.js","components/DayProductsItem/DayProductsItem.styled.js","components/DayProductsItem/DayProductsItem.jsx","components/DayProducts/DayProducts.jsx","components/DayExercises/DayExercises.styled.js","components/DayExercisesItem/DayExercisesItem.styled.js","components/DayExercisesItem/DayExercisesItem.jsx","components/DayExercises/DayExercises.jsx","pages/DiaryPage/DiaryPage.styled.js","components/Calendar/Calendar.styled.jsx","components/Calendar/Calendar.jsx","pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 96px;\n    padding-right: 96px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DashboardSection = styled.section`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  width: 100%;\n  width: 335px;\n  /* padding-bottom: 40px; */\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n    width: 593px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 48px;\n    width: 390px;\n  }\n`;\n\nexport const DashboardList = styled.ul`\n  display: flex;\n  column-gap: 13px;\n  row-gap: 20px;\n  flex-wrap: wrap;\n  li:nth-child(1),\n  li:nth-child(2) {\n    background-color: var(--orange-color);\n  }\n  @media screen and (max-width: 767px) {\n    li:nth-child(1),\n    li:nth-child(3),\n    li:nth-child(5) {\n      width: 157px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 593px;\n    height: 248px;\n    flex-direction: column;\n    gap: 16px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 390px;\n    height: 380px;\n    flex-direction: row;\n  }\n`;\n\n// export const DashboardItems = styled.li`\n//   /* position: relative; */\n//   width: 165px;\n//   height: 96px;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-between;\n//   border-radius: 12px;\n//   border: 1px solid rgba(239, 237, 232, 0.2);\n//   background-color: rgba(239, 237, 232, 0.05);\n//   padding: 14px;\n//   font-size: 12px;\n//   line-height: calc(16 / 12);\n//   && > h3 {\n//       color: ${props => {\n//         if (props.index === 0 || props.index === 1)\n//           return 'rgba(239, 237, 232, 0.8)';\n//         if (props.index === 2) return 'rgba(239, 237, 232, 0.4)';\n//       }};\n//   /* flex-basis: calc((100% - 1 * 45px) / 2); */\n//   @media screen and (min-width: 768px) {\n//     flex-basis: auto;\n//     width: 187px;\n//     height: 116px;\n//     padding: 18px;\n//   };\n// `;\nexport const DashboardItems = styled.li`\n  /* position: relative; */\n  width: 165px;\n  height: 96px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 14px;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n  && > h3 {\n    color: ${props => {\n      if (props.index === 1) return 'rgba(239, 237, 232, 0.8)';\n      return 'rgba(239, 237, 232, 0.4)';\n    }};\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-basis: auto;\n    width: 187px;\n    height: 116px;\n    padding: 18px;\n  }\n`;\n\nexport const DashboardTitle = styled.h3`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  /* color: rgba(239, 237, 232, 0.4); */\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(16 / 12);\n  @media screen and (min-width: 768px) {\n    line-height: calc(18 / 12);\n  }\n`;\n\nexport const DashboardData = styled.p`\n  color: var(--white-color);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: calc(20 / 18);\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: calc(32 / 24);\n  }\n`;\n\nexport const DashboardTextContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const DashboardText = styled.p`\n  display: flex;\n  max-width: 300px;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n    max-width: 558px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 358px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid var(--beige-color);\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: var(--beige-color);\n`;\n","import React from 'react';\nimport {\n  DashboardSection,\n  DashboardList,\n  DashboardItems,\n  DashboardTitle,\n  DashboardData,\n  DashboardText,\n  IconWrap,\n  DashboardTextContainer,\n} from './DayDashboard.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst DayDashboard = () => {\n  return (\n    <div>\n      <DashboardSection>\n        <DashboardList>\n          <DashboardItems index={1}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-fork-knife`} />\n              </svg>\n              Daily calorie intake\n            </DashboardTitle>\n            <DashboardData>2200</DashboardData>\n          </DashboardItems>\n          <DashboardItems index={1}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-dumbbell`} />\n              </svg>\n              Daily physical activity\n            </DashboardTitle>\n            <DashboardData>110 min</DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-apple`} />\n              </svg>\n              Сalories consumed\n            </DashboardTitle>\n            <DashboardData>707</DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-fire`} />\n              </svg>\n              Сalories burned\n            </DashboardTitle>\n            <DashboardData>855</DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-bubble`} />\n              </svg>\n              Calories remaining\n            </DashboardTitle>\n            <DashboardData>1493</DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-running-figure`} />\n              </svg>\n              Sports remaining\n            </DashboardTitle>\n            <DashboardData>85 min</DashboardData>\n          </DashboardItems>\n        </DashboardList>\n        <DashboardTextContainer>\n          <IconWrap>\n            <svg width={20} height={20}>\n              <use xlinkHref={`${sprite}#icon-attention`} />\n            </svg>\n          </IconWrap>\n          <DashboardText>\n            Record all your meals in the calorie diary every day. This will help\n            you be aware of your nutrition and make informed choices.\n          </DashboardText>\n        </DashboardTextContainer>\n      </DashboardSection>\n    </div>\n  );\n};\n\nexport default DayDashboard;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ProductsSection = styled.section`\n  width: 335px;\n  max-height: 824px;\n  display: flex;\n  flex-direction: column;\n  gap: 22px;\n  padding: 16px;\n  /* margin-bottom: 40px; */\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 0;\n  }\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 234px;\n    gap: 19px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n    height: 234px;\n  }\n`;\n\nexport const ProductsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ProductsTitle = styled.h3`\n  color: rgba(239, 237, 232, 0.5);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n`;\n\nexport const ProductsLink = styled(Link)`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  color: var(--orange-color);\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(18 / 14);\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n`;\n","import styled from 'styled-components';\nexport const ProductsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  /* color: white; */\n  /* margin-bottom: 40px; */\n`;\n\nexport const ProductsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  :nth-child(1),\n  :nth-child(2) {\n    grid-column: span 5;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 8px;\n    /* :nth-child(1) {\n      width: 204px;\n    }\n    :nth-child(2) {\n      width: 128px;\n    }\n    :nth-child(3),\n    :nth-child(4) {\n      width: 90px;\n    }\n    :nth-child(5) {\n      width: 80px;\n    } */\n  }\n`;\n\nexport const ProductsItem = styled.li`\n  && > p {\n    width: ${props => {\n      if (props.index === 3) return '80px';\n      if (props.index === 4) return '80px';\n      if (props.index === 5) return '76px';\n    }};\n  }\n  @media screen and (min-width: 768px) {\n    && > p {\n      width: ${props => {\n        if (props.index === 0) return '204px'; // Ширина для першого елемента\n        if (props.index === 1) return '128px'; // Ширина для другого елемента\n        if (props.index === 2 || props.index === 3) return '90px'; // Ширина для третього елемента\n        if (props.index === 4) return '80px';\n        // Додайте інші ширини, якщо потрібно\n        //   return '100px'; // Ширина за замовчуванням\n      }};\n      /* Інші стилі для <p>, якщо потрібно */\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    && > p {\n      width: ${props => {\n        if (props.index === 0) return '212px';\n        if (props.index === 1) return '166px';\n        if (props.index === 2 || props.index === 3) return '105px';\n        if (props.index === 4) return '110px';\n      }};\n      /* Інші стилі для <p>, якщо потрібно */\n    }\n  }\n`;\n\nexport const ProductsTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport const ProductsData = styled.p`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  padding: 10px 14px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  color: var(--white-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  /* @media screen and (min-width: 768px) {\n    display: ${props => (props.displayed ? 'none' : 'block')};\n  }  */\n`;\n\nexport const IndicatorIcon = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background: var(--success-color);\n`;\n\nexport const TrashBtn = styled.button`\n  background-color: transparent;\n  position: absolute;\n  top: 198px;\n  right: 0px;\n  @media screen and (min-width: 768px) {\n    top: 34px;\n    right: 8px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 34px;\n    right: 20px;\n  }\n`;\n","import React from 'react';\n\nimport {\n  ProductsContainer,\n  ProductsList,\n  ProductsItem,\n  ProductsTitle,\n  ProductsData,\n  TrashBtn,\n  IndicatorIcon,\n} from './DayProductsItem.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst DayProductsItem = () => {\n  return (\n    <ProductsContainer>\n      <ProductsList>\n        <ProductsItem index={0}>\n          <ProductsTitle>Title</ProductsTitle>\n          <ProductsData>Bread Hercules grain</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={1}>\n          <ProductsTitle>Category</ProductsTitle>\n          <ProductsData>Flour</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={2}>\n          <ProductsTitle>Calories</ProductsTitle>\n          <ProductsData>289</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={3}>\n          <ProductsTitle>Weight</ProductsTitle>\n          <ProductsData>100</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={4}>\n          <ProductsTitle>Recommend</ProductsTitle>\n          <ProductsData>\n            <IndicatorIcon />\n            Yes\n          </ProductsData>\n        </ProductsItem>\n      </ProductsList>\n      <TrashBtn>\n        <svg width={20} height={20}>\n          <use xlinkHref={`${sprite}#icon-trash`} />\n        </svg>\n      </TrashBtn>\n    </ProductsContainer>\n  );\n};\n\nexport default DayProductsItem;\n","import React from 'react';\nimport {\n  ProductsSection,\n  ProductsTitle,\n  ProductsLink,\n  ProductsContainer,\n} from './DayProducts.styled';\nimport DayProductsItem from 'components/DayProductsItem/DayProductsItem';\nimport sprite from '../../images/sprite.svg';\n\nconst DayProducts = () => {\n  return (\n    <>\n      <ProductsSection>\n        <ProductsContainer>\n          <ProductsTitle>Products</ProductsTitle>\n          <ProductsLink>\n            Add product\n            <svg width={16} height={16}>\n              <use xlinkHref={`${sprite}#icon-arrow-right`} />\n            </svg>\n          </ProductsLink>\n        </ProductsContainer>\n        <DayProductsItem />\n        {/* <DayProductsItem />\n        <DayProductsItem />\n        <DayProductsItem /> */}\n      </ProductsSection>\n    </>\n  );\n};\n\nexport default DayProducts;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ExercisesSection = styled.section`\n  width: 335px;\n  max-height: 1064px;\n  display: flex;\n  flex-direction: column;\n  gap: 22px;\n  padding: 16px;\n  /* margin-bottom: 40px; */\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 0;\n  }\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 234px;\n    gap: 19px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n    height: 234px;\n  }\n`;\n\nexport const ProductsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ExercisesTitle = styled.h3`\n  color: rgba(239, 237, 232, 0.5);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n`;\n\nexport const ExercisesLink = styled(Link)`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  color: var(--orange-color);\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(18 / 14);\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n`;\n","import styled from 'styled-components';\nexport const ProductsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nexport const ProductsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  :nth-child(1),\n  :nth-child(2),\n  :nth-child(3) {\n    grid-column: span 5;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 8px;\n  }\n`;\n\nexport const ProductsItem = styled.li`\n  && > p {\n    width: ${props => {\n      if (props.index === 3) return '80px';\n      if (props.index === 4) return '80px';\n      if (props.index === 5) return '76px';\n    }};\n  }\n  @media screen and (min-width: 768px) {\n    && > p {\n      width: ${props => {\n        if (props.index === 0) return '90px';\n        if (props.index === 1) return '132px';\n        if (props.index === 2) return '128px';\n        if (props.index === 3) return '84px';\n        if (props.index === 4) return '78px';\n        if (props.index === 5) return '72px';\n      }};\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    && > p {\n      width: ${props => {\n        if (props.index === 0) return '115px';\n        if (props.index === 1) return '157px';\n        if (props.index === 2) return '131px';\n        if (props.index === 3) return '106px';\n        if (props.index === 4) return '91px';\n        if (props.index === 5) return '82px';\n      }};\n    }\n  }\n`;\n\nexport const ProductsTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  @media screen and (max-width: 1439px) {\n    max-width: 78px;\n  }\n  @media screen and (max-width: 767px) {\n    max-width: 80px;\n  }\n`;\n\nexport const ProductsData = styled.p`\n  padding: 10px 14px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  color: var(--white-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport const TrashBtn = styled.button`\n  background-color: transparent;\n  position: absolute;\n  top: 280px;\n  right: 0px;\n  @media screen and (min-width: 768px) {\n    top: 34px;\n    right: 8px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 34px;\n    right: 20px;\n  }\n`;\n","import React from 'react';\n\nimport {\n  ProductsContainer,\n  ProductsList,\n  ProductsItem,\n  ProductsTitle,\n  ProductsData,\n  TrashBtn,\n} from './DayExercisesItem.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst DayExercisesItem = () => {\n  return (\n    <ProductsContainer>\n      <ProductsList>\n        <ProductsItem index={0}>\n          <ProductsTitle>Part</ProductsTitle>\n          <ProductsData>Bread Hercules grain</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={1}>\n          <ProductsTitle>Equipment</ProductsTitle>\n          <ProductsData>Flour</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={2}>\n          <ProductsTitle>Name</ProductsTitle>\n          <ProductsData>Flour</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={3}>\n          <ProductsTitle>Target</ProductsTitle>\n          <ProductsData>289</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={4}>\n          <ProductsTitle>Burned Calories</ProductsTitle>\n          <ProductsData>100</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={5}>\n          <ProductsTitle>Time</ProductsTitle>\n          <ProductsData>Yes</ProductsData>\n        </ProductsItem>\n      </ProductsList>\n      <TrashBtn>\n        <svg width={20} height={20}>\n          <use xlinkHref={`${sprite}#icon-trash`} />\n        </svg>\n      </TrashBtn>\n    </ProductsContainer>\n  );\n};\n\nexport default DayExercisesItem;\n","import React from 'react';\nimport {\n  ExercisesSection,\n  ExercisesTitle,\n  ExercisesLink,\n  ProductsContainer,\n} from './DayExercises.styled';\nimport DayExercisesItem from 'components/DayExercisesItem/DayExercisesItem';\nimport sprite from '../../images/sprite.svg';\n\nconst DayExercises = () => {\n  return (\n    <>\n      <ExercisesSection>\n        <ProductsContainer>\n          <ExercisesTitle>Exercises</ExercisesTitle>\n          <ExercisesLink>\n            Add exercise\n            <svg width={16} height={16}>\n              <use xlinkHref={`${sprite}#icon-arrow-right`} />\n            </svg>\n          </ExercisesLink>\n        </ProductsContainer>\n        <DayExercisesItem />\n      </ExercisesSection>\n    </>\n  );\n};\n\nexport default DayExercises;\n","import styled from 'styled-components';\n\nexport const DiaryContainer = styled.div`\n  /* width: 100%; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 40px;\n  @media screen and (min-width: 768px) {\n    flex-direction: column-reverse;\n    gap: 64px;\n  }\n  @media screen and (min-width: 1440px) {\n    flex-direction: row-reverse;\n    gap: 32px;\n  }\n`;\n\nexport const DiaryInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n  }\n`;\n","// import { createGlobalStyle, styled } from 'styled-components';\n\n// export const IconSvg = styled.svg`\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n// `;\n\n// // export const CalendarGlobalStyles = createGlobalStyle`\n// //  .react-datepicker__wrapper {\n// //     position: relative;\n\n// //   }\n// //   .react-datepicker {\n// //     position: absolute;\n// //     left: -20px;\n// //     top: 50%;\n// //     transform: translate(-15%, 0%);\n// //     display: flex;\n// //     flex-direction: column;\n// //     align-items: center;\n// //     padding: 14px;\n// //     background-color: #ef8964;\n// //     font-family: 'Roboto', sans-serif;\n// //     border-radius: 8px;\n// //   }\n// //   .react-datepicker__month-container {\n// //     float: inherit;\n// //     box-sizing: border-box;\n// //   }\n// //   .react-datepicker__day-names {\n// //     display: flex;\n// //     justify-content: space-between;\n// //     align-items: center;\n// //     padding-top: 14px;\n// //     margin-bottom: 8px;\n// //     border-top: 1px solid rgba(239, 237, 232, 0.2);\n// //   }\n// //   .react-datepicker__header {\n// //     position: relative;\n// //     background-color: #ef8964;\n// //   }\n\n// //   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n// //     border-bottom: 0px;\n// //     padding: 0;\n// //   }\n// //   .react-datepicker__day\n// //     react-datepicker__day--018.react-datepicker__day--selected\n// //     react-datepicker__day--today {\n// //     outline: none;\n// //     border: none;\n// //   }\n// //   .react-datepicker__current-month {\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 16px;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //     margin-bottom: 14px;\n// //   }\n// //   .react-datepicker__day-name {\n// //     margin: 0;\n// //     color: rgba(239, 237, 232, 0.5);\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-style: normal;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //   }\n\n// //   .react-datepicker__day--disabled {\n// //     opacity: 25%;\n// //   }\n// //   .react-datepicker__navigation {\n// //     margin-top: 14px;\n// //     color: white;\n// //   }\n// //   .react-datepicker__navigation--previous {\n// //     left: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation--next {\n// //     right: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation-icon::before:hover:focus {\n// //     border-color: white;\n// //   }\n// //   .react-datepicker__week {\n// //     display: flex;\n// //     align-items: center;\n// //     justify-content: space-between;\n// //     color: white;\n// //   }\n// //   .react-datepicker__day {\n// //     display: flex;\n// //     flex-direction: column;\n// //     justify-content: center;\n// //     align-items: center;\n// //     flex-shrink: 0;\n// //     margin: 0;\n// //     border-radius: 50%;\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-weight: 400;\n// //     line-height: 18px;\n// //     text-align: center;\n// //     width: 24px;\n// //     height: 24px;\n// //   }\n// //   .react-datepicker__month {\n// //     display: flex;\n// //     gap: 5px;\n// //     flex-direction: column;\n// //     justify-content: space-between;\n// //     margin: 0;\n// //   }\n// //   .react-datepicker__day--selected {\n// //     background-color: #040404;\n// //     color: #efede8;\n// //     font-size: 14px;\n// //   }\n// //   .react-datepicker__day--selected:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //   }\n// //   .react-datepicker__day:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--keyboard-selected {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--outside-month {\n// //     opacity: 50%;\n// //   }\n// //   .react-datepicker__triangle {\n// //     display: none;\n// //   }\n// // `;\n// export const CalendarGlobalStyles = createGlobalStyle`\n//   .react-datepicker__wrapper {\n//     position: relative;\n\n//   }\n//   .react-datepicker {\n//     position: absolute;\n//     left: 50%;\n//     top: 50%;\n//     transform: translate(-1%, 0%);\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     width: 327px;\n//     height: 354px;\n//     padding: 9px 18px;\n//   background-color: #3e85f3;\n//     font-family: Inter;\n//     border-radius: 16px;\n//   }\n//   .react-datepicker__month-container {\n//     float: inherit;\n//     box-sizing: border-box;\n//   }\n//   .react-datepicker__header {\n//     position: relative;\n//     background-color: #3e85f3;\n//   }\n//   .react-datepicker__day-names {\n//     display: flex;\n//     justify-content: space-between;\n//     align-items: center;\n//     padding: 8px 8px;\n//     border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n//   }\n//   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n//     border-bottom: 0px;\n//     padding: 0;\n//   }\n//   .react-datepicker__day react-datepicker__day--018.react-datepicker__day--selected react-datepicker__day--today{\n//     outline: none;\n//     border: none;\n// }\n//   .react-datepicker__current-month {\n//     font-family: Inter;\n//     font-size: 20px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 24px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__day-name {\n//     margin: 0;\n//    padding: 8px 8px;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 18px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__navigation {\n//     margin-top: 24px;\n//     color: white;\n//   }\n//   .react-datepicker__navigation--previous {\n//     left: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation--next {\n//     right: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation-icon::before:hover:focus {\n//     border-color: white;\n//   }\n//   .react-datepicker__week {\n//     display: flex;\n//     align-items: center;\n//     justify-content: space-between;\n//     color: white;\n//   }\n//   .react-datepicker__day {\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: center;\n//     align-items: center;\n//     gap: 8px;\n//     flex-shrink: 0;\n//     margin: 0;\n//     width: 32px;\n//     height: 32px;\n//     border-radius: 50%;\n//     color: white;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 400;\n//     line-height: 18px;\n//     text-align: center;\n//   }\n//   .react-datepicker__month {\n//     display: flex;\n//     gap: 7px;\n//     flex-direction: column;\n//     justify-content: space-between;\n//     padding-top: 16px;\n//     margin: 0;\n//   }\n//   .react-datepicker__day--selected {\n//     background-color:white;\n//     color:#3e85f3;\n//     font-size: 14px;\n//   }\n//   .react-datepicker__day--selected:hover {\n//     border-radius: 50%;\n//   background-color:white;\n//   }\n//   .react-datepicker__day:hover {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--keyboard-selected {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--weekend {\n//     opacity: 50%;\n//   }\n// .react-datepicker__day--outside-month {\n//     background-color: transparent;\n//     pointer-events: none;\n//     opacity: 0;\n//   }\n//   .react-datepicker__view-calendar-icon input {\n//     padding: 6px 10px 5px 13px;\n//   }\n//   .react-datepicker__triangle {\n//     visibility: hidden;\n//   }\n// `;\n\n// export const TitleWrapper = styled.button`\n//   width: 195px;\n//   color: #ffffff;\n//   background: #3e85f3;\n//   border-radius: 8px;\n//   font-weight: 700;\n//   line-height: 18px;\n//   text-align: center;\n//   text-transform: uppercase;\n//   padding: 8px 12px;\n//   font-size: 16px;\n//   justify-content: space-around;\n//   align-items: center;\n// `;\n\n//-------------------------------\nimport { createGlobalStyle, styled } from 'styled-components';\n\nexport const IconSvg = styled.svg`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const CalendarGlobalStyles = createGlobalStyle`\n .react-datepicker__wrapper {\n    position: relative;\n    \n  }\n  .react-datepicker {\n    position: absolute;\n    left: -20px;\n    top: 50%;\n    transform: translate(-15%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;    \n    padding: 14px;\n    background-color: #ef8964;\n    font-family: 'Roboto', sans-serif;\n    border-radius: 8px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 14px;\n    margin-bottom: 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;    \n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: normal;\n    margin-bottom: 14px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    color: rgba(239, 237, 232, 0.5);\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n\n  .react-datepicker__day--disabled {\n    opacity: 25%;\n  }\n  .react-datepicker__navigation {\n    margin-top: 14px;\n    color: white;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: white;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin: 0;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n    width: 24px;\n    height: 24px;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efede8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: white;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--outside-month {\n    opacity: 50%;\n  }\n  .react-datepicker__triangle {\n    display: none;\n  }\n`;\n\nexport const InputField = styled.input`\n  width: 100%;\n  padding: 14px;\n  align-items: center;\n  gap: 10px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  background-color: transparent;\n  color: #efede8;\n\n  &:hover {\n    border-color: #e6533c; /* Змінюємо колір бордера на червоний при ховері */\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { CalendarGlobalStyles, IconSvg, InputField } from './Calendar.styled';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nimport sprite from '../../images/sprite.svg';\nimport { useState } from 'react';\n\nconst Calendar = () => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    console.log(date);\n  };\n  //   console.log(selectedDate);\n\n  return (\n    <>\n      <div style={{ width: '187px', position: 'relative' }}>\n        <IconSvg width=\"18\" height=\"18\">\n          <use href={`${sprite}#icon-calendar-white`}></use>\n        </IconSvg>\n\n        <DatePicker\n          selected={selectedDate}\n          onChange={handleDateChange}\n          customInput={<InputField style={{ cursor: 'pointer' }} />}\n          dateFormat={'dd/MM/yyyy'}\n          calendarStartDay={1}\n          formatWeekDay={day => day.substring(0, 1)}\n          placeholderText={selectedDate === null ? 'Birthday' : null}\n        />\n\n        <CalendarGlobalStyles />\n      </div>\n    </>\n  );\n};\n\nexport default Calendar;\n\n// import DatePicker from 'react-datepicker';\n// import { CalendarGlobalStyles, IconSvg, InputField } from './Calendar.styled';\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\n// import sprite from '../../images/sprite.svg';\n// // import { useState } from 'react';\n// import { useField } from 'formik';\n\n// const Calendar = ({ name = '' }) => {\n//   const [field, meta, helpers] = useField(name);\n//   const { value } = meta;\n//   const { setValue } = helpers;\n//   console.log(Date.parse(value));\n\n//   // const [selectedDate, setSelectedDate] = useState(null);\n//   const handleDateChange = date => {\n//     setValue(date);\n//   };\n\n//   return (\n//     <>\n//       <div style={{ width: '187px', position: 'relative' }}>\n//         <IconSvg width=\"18\" height=\"18\">\n//           <use href={`${sprite}#icon-calendar-white`}></use>\n//         </IconSvg>\n\n//         <DatePicker\n//           {...field}\n//           selected={value}\n//           onChange={handleDateChange}\n//           customInput={<InputField style={{ cursor: 'pointer' }} />}\n//           dateFormat={'dd/MM/yyyy'}\n//           calendarStartDay={1}\n//           formatWeekDay={day => day.substring(0, 1)}\n//           placeholderText={value === null ? 'Birthday' : null}\n//         />\n\n//         <CalendarGlobalStyles />\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Calendar;\n","import React from 'react';\nimport DayDashboard from 'components/DayDashboard/DayDashboard';\nimport DayProducts from 'components/DayProducts/DayProducts';\nimport DayExercises from 'components/DayExercises/DayExercises';\nimport { DiaryContainer, DiaryInfoContainer } from './DiaryPage.styled';\nimport { Container } from 'components/styles/Container/Container';\nimport Calendar from 'components/Calendar/Calendar';\n\nconst DiaryPage = () => {\n  return (\n    <Container>\n      <Calendar />\n      <DiaryContainer>\n        <DayDashboard />\n        <DiaryInfoContainer>\n          <DayProducts />\n          <DayExercises />\n        </DiaryInfoContainer>\n      </DiaryContainer>\n    </Container>\n  );\n};\n\nexport default DiaryPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","DashboardSection","DashboardList","_templateObject2","DashboardItems","_templateObject3","props","index","DashboardTitle","_templateObject4","DashboardData","_templateObject5","DashboardTextContainer","_templateObject6","DashboardText","_templateObject7","IconWrap","_templateObject8","DayDashboard","_jsx","children","_jsxs","width","height","xlinkHref","concat","sprite","ProductsSection","ProductsContainer","ProductsTitle","ProductsLink","Link","ProductsList","ProductsItem","ProductsData","displayed","IndicatorIcon","TrashBtn","DayProductsItem","DayProducts","_Fragment","ExercisesSection","ExercisesTitle","ExercisesLink","DayExercisesItem","DayExercises","DiaryContainer","DiaryInfoContainer","IconSvg","CalendarGlobalStyles","createGlobalStyle","InputField","Calendar","selectedDate","setSelectedDate","useState","style","position","href","DatePicker","selected","onChange","date","console","log","customInput","cursor","dateFormat","calendarStartDay","formatWeekDay","day","substring","placeholderText","DiaryPage"],"sourceRoot":""}