{"version":3,"file":"static/js/467.92d8bea0.chunk.js","mappings":"kMAyTO,MAAMA,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+DAMpBC,GAAuBC,EAAAA,EAAAA,IAAiBC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,irGA4IxCI,EAAaN,EAAAA,GAAAA,MAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qf,mDCnctC,MAqCA,EArCiBM,IAAe,IAAd,KAAEC,GAAMD,EACzB,MAAOE,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,OAC1CC,EAAM,EAAG,SAAEC,KAAcC,EAAAA,EAAAA,IAASN,IACzCO,EAAAA,EAAAA,YAAU,KACTC,EAAiB,IAAIC,KAAKL,EAAMM,OAAO,GAErC,IAEH,MAAMF,EAAmBG,UACxBT,EAAgBU,GAChBP,EAASO,GACTC,QAAQC,IAAIV,EAAM,EAEnB,OACCW,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACCC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,MAAO,QAASC,SAAU,YAAaJ,SAAA,EACpDF,EAAAA,EAAAA,KAACzB,EAAO,CAAC8B,MAAM,KAAKE,OAAO,KAAIL,UAC9BF,EAAAA,EAAAA,KAAA,OAAKQ,KAAI,GAAAC,OAAKC,EAAAA,EAAM,6BAGrBV,EAAAA,EAAAA,KAACW,IAAU,IACNtB,EACJuB,SAAU1B,EACV2B,SAAUpB,EACVqB,aAAad,EAAAA,EAAAA,KAAClB,EAAU,CAACG,KAAMA,EAAMmB,MAAO,CAAEW,OAAQ,aACtDC,WAAY,aACZC,iBAAkB,EAClBC,cAAgBC,GAAQA,EAAIC,UAAU,EAAG,GACzCC,gBAAkC,OAAjBnC,EAAwB,WAAa,QAGvDc,EAAAA,EAAAA,KAACrB,EAAoB,QAEpB,C,iDCvCE,MAAM2C,E,QAAY9C,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+Y,+FCA5B,MAAM6C,EAAmB/C,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0SAiBjC8C,EAAgBhD,EAAAA,GAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qjBAyDzB+C,EAAiBjD,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2fAc1BgD,GACc,IAAjBA,EAAMC,OAAqB,2BACxB,6BAYAC,EAAiBpD,EAAAA,GAAAA,GAASqD,IAAAA,GAAAnD,EAAAA,EAAAA,GAAA,mQAa1BoD,EAAgBtD,EAAAA,GAAAA,EAAQuD,IAAAA,GAAArD,EAAAA,EAAAA,GAAA,sNAWxBsD,EAAyBxD,EAAAA,GAAAA,IAAUyD,IAAAA,GAAAvD,EAAAA,EAAAA,GAAA,yCAKnCwD,EAAgB1D,EAAAA,GAAAA,EAAQ2D,IAAAA,GAAAzD,EAAAA,EAAAA,GAAA,6VAiBxB0D,EAAW5D,EAAAA,GAAAA,IAAU6D,IAAAA,GAAA3D,EAAAA,EAAAA,GAAA,oN,iCCxIlC,MA6EA,EA7EqB4D,KACnB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,OAC5C,OACI1C,EAAAA,EAAAA,KAAA,OAAAE,UACAC,EAAAA,EAAAA,MAACoB,EAAgB,CAAArB,SAAA,EACfC,EAAAA,EAAAA,MAACqB,EAAa,CAAAtB,SAAA,EACZC,EAAAA,EAAAA,MAACsB,EAAc,CAACE,OAAQ,EAAEzB,SAAA,EACxBC,EAAAA,EAAAA,MAACyB,EAAc,CAAA1B,SAAA,EACbF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIE,OAAQ,GAAGL,UACzBF,EAAAA,EAAAA,KAAA,OAAK2C,UAAS,GAAAlC,OAAKC,EAAAA,EAAM,wBACrB,2BAGRV,EAAAA,EAAAA,KAAC8B,EAAa,CAAA5B,SAAEqC,EAAKK,UAEvBzC,EAAAA,EAAAA,MAACsB,EAAc,CAACE,OAAQ,EAAEzB,SAAA,EACxBC,EAAAA,EAAAA,MAACyB,EAAc,CAAA1B,SAAA,EACbF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIE,OAAQ,GAAGL,UACzBF,EAAAA,EAAAA,KAAA,OAAK2C,UAAS,GAAAlC,OAAKC,EAAAA,EAAM,sBACrB,8BAGRV,EAAAA,EAAAA,KAAC8B,EAAa,CAAA5B,SAAC,gBAEjBC,EAAAA,EAAAA,MAACsB,EAAc,CAAAvB,SAAA,EACbC,EAAAA,EAAAA,MAACyB,EAAc,CAAA1B,SAAA,EACbF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIE,OAAQ,GAAGL,UACzBF,EAAAA,EAAAA,KAAA,OAAK2C,UAAS,GAAAlC,OAAKC,EAAAA,EAAM,mBACrB,6BAGRV,EAAAA,EAAAA,KAAC8B,EAAa,CAAA5B,SAAC,YAEjBC,EAAAA,EAAAA,MAACsB,EAAc,CAAAvB,SAAA,EACbC,EAAAA,EAAAA,MAACyB,EAAc,CAAA1B,SAAA,EACbF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIE,OAAQ,GAAGL,UACzBF,EAAAA,EAAAA,KAAA,OAAK2C,UAAS,GAAAlC,OAAKC,EAAAA,EAAM,kBACrB,2BAGRV,EAAAA,EAAAA,KAAC8B,EAAa,CAAA5B,SAAC,YAEjBC,EAAAA,EAAAA,MAACsB,EAAc,CAAAvB,SAAA,EACbC,EAAAA,EAAAA,MAACyB,EAAc,CAAA1B,SAAA,EACbF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIE,OAAQ,GAAGL,UACzBF,EAAAA,EAAAA,KAAA,OAAK2C,UAAS,GAAAlC,OAAKC,EAAAA,EAAM,oBACrB,yBAGRV,EAAAA,EAAAA,KAAC8B,EAAa,CAAA5B,SAAC,aAEjBC,EAAAA,EAAAA,MAACsB,EAAc,CAAAvB,SAAA,EACbC,EAAAA,EAAAA,MAACyB,EAAc,CAAA1B,SAAA,EACbF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIE,OAAQ,GAAGL,UACzBF,EAAAA,EAAAA,KAAA,OAAK2C,UAAS,GAAAlC,OAAKC,EAAAA,EAAM,4BACrB,uBAGRV,EAAAA,EAAAA,KAAC8B,EAAa,CAAA5B,SAAC,kBAGnBC,EAAAA,EAAAA,MAAC6B,EAAsB,CAAA9B,SAAA,EACrBF,EAAAA,EAAAA,KAACoC,EAAQ,CAAAlC,UACPF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIE,OAAQ,GAAGL,UACzBF,EAAAA,EAAAA,KAAA,OAAK2C,UAAS,GAAAlC,OAAKC,EAAAA,EAAM,0BAG7BV,EAAAA,EAAAA,KAACkC,EAAa,CAAAhC,SAAC,0IAMf,E,sBCpFH,MAAM2C,EAAkBrE,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2gBA0BhCoE,EAAoBtE,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+DAK9BqE,EAAgBvE,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,sHAOzBsE,GAAexE,EAAAA,EAAAA,IAAOyE,EAAAA,KAAPzE,CAAYqD,IAAAA,GAAAnD,EAAAA,EAAAA,GAAA,8Q,kBCxCjC,MAAMoE,EAAoBtE,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mIAQ9BwE,EAAe1E,EAAAA,GAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,scA2BxByE,EAAe3E,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,yiBAExBgD,GACa,IAAhBA,EAAM0B,OACU,IAAhB1B,EAAM0B,MADoB,OAEV,IAAhB1B,EAAM0B,MAAoB,YAA9B,IAKS1B,GACa,IAAhBA,EAAM0B,MAAoB,QACV,IAAhB1B,EAAM0B,MAAoB,QACV,IAAhB1B,EAAM0B,OAA+B,IAAhB1B,EAAM0B,MAAoB,OAC/B,IAAhB1B,EAAM0B,MAAoB,YAA9B,IASO1B,GACa,IAAhBA,EAAM0B,MAAoB,QACV,IAAhB1B,EAAM0B,MAAoB,QACV,IAAhB1B,EAAM0B,OAA+B,IAAhB1B,EAAM0B,MAAoB,QAC/B,IAAhB1B,EAAM0B,MAAoB,aAA9B,IAOKL,EAAgBvE,EAAAA,GAAAA,GAASqD,IAAAA,GAAAnD,EAAAA,EAAAA,GAAA,uNAWzB2E,EAAe7E,EAAAA,GAAAA,EAAQuD,IAAAA,GAAArD,EAAAA,EAAAA,GAAA,uZAerBgD,GAAUA,EAAM4B,UAAY,OAAS,UAIvCC,EAAgB/E,EAAAA,GAAAA,IAAUyD,IAAAA,GAAAvD,EAAAA,EAAAA,GAAA,uGAO1B8E,EAAWhF,EAAAA,GAAAA,OAAa2D,IAAAA,GAAAzD,EAAAA,EAAAA,GAAA,mQCzDrC,EArCwB+E,KAEpBtD,EAAAA,EAAAA,MAAC2C,EAAiB,CAAA5C,SAAA,EAChBC,EAAAA,EAAAA,MAAC+C,EAAY,CAAAhD,SAAA,EACXC,EAAAA,EAAAA,MAACgD,EAAY,CAACC,MAAO,EAAElD,SAAA,EACrBF,EAAAA,EAAAA,KAAC+C,EAAa,CAAA7C,SAAC,WACfF,EAAAA,EAAAA,KAACqD,EAAY,CAAAnD,SAAC,6BAEhBC,EAAAA,EAAAA,MAACgD,EAAY,CAACC,MAAO,EAAElD,SAAA,EACrBF,EAAAA,EAAAA,KAAC+C,EAAa,CAAA7C,SAAC,cACfF,EAAAA,EAAAA,KAACqD,EAAY,CAAAnD,SAAC,cAEhBC,EAAAA,EAAAA,MAACgD,EAAY,CAACC,MAAO,EAAElD,SAAA,EACrBF,EAAAA,EAAAA,KAAC+C,EAAa,CAAA7C,SAAC,cACfF,EAAAA,EAAAA,KAACqD,EAAY,CAAAnD,SAAC,YAEhBC,EAAAA,EAAAA,MAACgD,EAAY,CAACC,MAAO,EAAElD,SAAA,EACrBF,EAAAA,EAAAA,KAAC+C,EAAa,CAAA7C,SAAC,YACfF,EAAAA,EAAAA,KAACqD,EAAY,CAAAnD,SAAC,YAEhBC,EAAAA,EAAAA,MAACgD,EAAY,CAACC,MAAO,EAAElD,SAAA,EACrBF,EAAAA,EAAAA,KAAC+C,EAAa,CAAA7C,SAAC,eACfC,EAAAA,EAAAA,MAACkD,EAAY,CAAAnD,SAAA,EACXF,EAAAA,EAAAA,KAACuD,EAAa,IAAG,gBAKvBvD,EAAAA,EAAAA,KAACwD,EAAQ,CAAAtD,UACPF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIE,OAAQ,GAAGL,UACzBF,EAAAA,EAAAA,KAAA,OAAK2C,UAAS,GAAAlC,OAAKC,EAAAA,EAAM,wBCXnC,EAtBoBgD,KAEhB1D,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAC0C,EAAe,CAAA3C,SAAA,EACdC,EAAAA,EAAAA,MAAC2C,EAAiB,CAAA5C,SAAA,EAChBF,EAAAA,EAAAA,KAAC+C,EAAa,CAAA7C,SAAC,cACfC,EAAAA,EAAAA,MAAC6C,EAAY,CAAA9C,SAAA,CAAC,eAEZF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIE,OAAQ,GAAGL,UACzBF,EAAAA,EAAAA,KAAA,OAAK2C,UAAS,GAAAlC,OAAKC,EAAAA,EAAM,gCAI/BV,EAAAA,EAAAA,KAACyD,EAAe,S,kCClBjB,MAAME,GAAmBnF,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,giBA0BjCoE,GAAoBtE,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+DAK9BkF,GAAiBpF,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,sHAO1BmF,IAAgBrF,EAAAA,EAAAA,IAAOyE,EAAAA,KAAPzE,CAAYqD,IAAAA,GAAAnD,EAAAA,EAAAA,GAAA,sSAeVE,EAAAA,EAAAA,IAAiBmD,KAAAA,IAAArD,EAAAA,EAAAA,GAAA,uL,sBCzDzC,MAAMoE,GAAoBtE,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,qJAS9BwE,GAAe1E,EAAAA,GAAAA,GAASK,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,4PAexByE,GAAe3E,EAAAA,GAAAA,GAASO,KAAAA,IAAAL,EAAAA,EAAAA,GAAA,2NAExBgD,GACoB,IAAjBA,EAAMC,QAAiC,IAAjBD,EAAMC,QAAiC,IAAjBD,EAAMC,OAAqB,QAE5D,IAAjBD,EAAMC,QACW,IAAjBD,EAAMC,OADqB,OAEV,IAAjBD,EAAMC,OAAqB,YAA/B,IAKSD,GACc,IAAjBA,EAAMC,OAAqB,OACV,IAAjBD,EAAMC,OAAqB,QACV,IAAjBD,EAAMC,OAAqB,QACV,IAAjBD,EAAMC,OAAqB,OACV,IAAjBD,EAAMC,OAAqB,OACV,IAAjBD,EAAMC,OAAqB,YAA/B,IAMOD,GACc,IAAjBA,EAAMC,OAAqB,QACV,IAAjBD,EAAMC,OAAqB,QACV,IAAjBD,EAAMC,OAAqB,QACV,IAAjBD,EAAMC,OAAqB,QACV,IAAjBD,EAAMC,OAAqB,OACV,IAAjBD,EAAMC,OAAqB,YAA/B,IAMKoB,GAAgBvE,EAAAA,GAAAA,GAASqD,KAAAA,IAAAnD,EAAAA,EAAAA,GAAA,kWAiBzB2E,GAAe7E,EAAAA,GAAAA,EAAQuD,KAAAA,IAAArD,EAAAA,EAAAA,GAAA,uRAavB8E,GAAWhF,EAAAA,GAAAA,OAAayD,KAAAA,IAAAvD,EAAAA,EAAAA,GAAA,oQCxCrC,GAtCyBoF,KAErB3D,EAAAA,EAAAA,MAAC2C,GAAiB,CAAA5C,SAAA,EAChBC,EAAAA,EAAAA,MAAC+C,GAAY,CAAAhD,SAAA,EACXC,EAAAA,EAAAA,MAACgD,GAAY,CAACxB,OAAQ,EAAEzB,SAAA,EACtBF,EAAAA,EAAAA,KAAC+C,GAAa,CAAA7C,SAAC,UACfF,EAAAA,EAAAA,KAACqD,GAAY,CAAAnD,SAAC,6BAEhBC,EAAAA,EAAAA,MAACgD,GAAY,CAACxB,OAAQ,EAAEzB,SAAA,EACtBF,EAAAA,EAAAA,KAAC+C,GAAa,CAAA7C,SAAC,eACfF,EAAAA,EAAAA,KAACqD,GAAY,CAAAnD,SAAC,cAEhBC,EAAAA,EAAAA,MAACgD,GAAY,CAACxB,OAAQ,EAAEzB,SAAA,EACtBF,EAAAA,EAAAA,KAAC+C,GAAa,CAAA7C,SAAC,UACfF,EAAAA,EAAAA,KAACqD,GAAY,CAAAnD,SAAC,cAEhBC,EAAAA,EAAAA,MAACgD,GAAY,CAACxB,OAAQ,EAAEzB,SAAA,EACtBF,EAAAA,EAAAA,KAAC+C,GAAa,CAAA7C,SAAC,YACfF,EAAAA,EAAAA,KAACqD,GAAY,CAAAnD,SAAC,YAEhBC,EAAAA,EAAAA,MAACgD,GAAY,CAACxB,OAAQ,EAAEzB,SAAA,EACtBF,EAAAA,EAAAA,KAAC+C,GAAa,CAAA7C,SAAC,qBACfF,EAAAA,EAAAA,KAACqD,GAAY,CAAAnD,SAAC,YAEhBC,EAAAA,EAAAA,MAACgD,GAAY,CAACxB,OAAQ,EAAEzB,SAAA,EACtBF,EAAAA,EAAAA,KAAC+C,GAAa,CAAA7C,SAAC,UACfF,EAAAA,EAAAA,KAACqD,GAAY,CAAAnD,SAAC,eAGlBF,EAAAA,EAAAA,KAACwD,GAAQ,CAAAtD,UACPF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIE,OAAQ,GAAGL,UACzBF,EAAAA,EAAAA,KAAA,OAAK2C,UAAS,GAAAlC,OAAKC,EAAAA,EAAM,wBCLnC,GA1BqBqD,KAEjB/D,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACwD,GAAgB,CAAAzD,SAAA,EACfC,EAAAA,EAAAA,MAAC2C,GAAiB,CAAA5C,SAAA,EAChBF,EAAAA,EAAAA,KAAC4D,GAAc,CAAA1D,SAAC,eAChBC,EAAAA,EAAAA,MAAC0D,GAAa,CAAA3D,SAAA,CAAC,gBAEbF,EAAAA,EAAAA,KAAA,OAAKK,MAAO,GAAIE,OAAQ,GAAGL,UACzBF,EAAAA,EAAAA,KAAA,OAAK2C,UAAS,GAAAlC,OAAKC,EAAAA,EAAM,gCAI/BP,EAAAA,EAAAA,MAAC6D,GAAAA,EAA0B,CAACC,OAAK,EAAA/D,SAAA,EAEjCF,EAAAA,EAAAA,KAAC8D,GAAgB,KACjB9D,EAAAA,EAAAA,KAAC8D,GAAgB,KACjB9D,EAAAA,EAAAA,KAAC8D,GAAgB,KACjB9D,EAAAA,EAAAA,KAAC8D,GAAgB,KACjB9D,EAAAA,EAAAA,KAAC8D,GAAgB,Y,UC9BlB,MAAMI,GAAiB1F,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,6TAgB3ByF,GAAqB3F,EAAAA,GAAAA,IAAUK,KAAAA,IAAAH,EAAAA,EAAAA,GAAA,oI,gDChB5C,MCoCA,GDpC0B0F,IACd1C,IACJ,MAAOa,MAAM,IAACK,IAAQlB,EAC1B,OAAOkB,GAAM5C,EAAAA,EAAAA,KAACoE,EAAS,IAAK1C,KAAY1B,EAAAA,EAAAA,KAACqE,GAAAA,GAAQ,CAACC,GAAG,YAAa,ECgC9CC,EA3BNC,KAEdrE,EAAAA,EAAAA,MAACmB,GAAAA,EAAS,CAAApB,SAAA,EACRF,EAAAA,EAAAA,KAACyE,GAAAA,GAAM,CAEPC,cAAe,CACbvD,IAAK,IAAIzB,MACTQ,SAGCA,KACCF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC2E,GAAAA,EAAQ,CAAC1F,KAAK,aAKrBkB,EAAAA,EAAAA,MAAC+D,GAAc,CAAAhE,SAAA,EACbF,EAAAA,EAAAA,KAACsC,EAAY,KACbnC,EAAAA,EAAAA,MAACgE,GAAkB,CAAAjE,SAAA,EACjBF,EAAAA,EAAAA,KAAC0D,EAAW,KACZ1D,EAAAA,EAAAA,KAAC+D,GAAY,c","sources":["components/Calendar/Calendar.styled.jsx","components/Calendar/Calendar.jsx","components/styles/Container/Container.jsx","components/DayDashboard/DayDashboard.styled.js","components/DayDashboard/DayDashboard.jsx","components/DayProducts/DayProducts.styled.js","components/DayProductsItem/DayProductsItem.styled.js","components/DayProductsItem/DayProductsItem.jsx","components/DayProducts/DayProducts.jsx","components/DayExercises/DayExercises.styled.js","components/DayExercisesItem/DayExercisesItem.styled.js","components/DayExercisesItem/DayExercisesItem.jsx","components/DayExercises/DayExercises.jsx","pages/DiaryPage/DiaryPage.styled.js","HOC/HocRedirect.js","pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["// import { createGlobalStyle, styled } from 'styled-components';\n\n// export const IconSvg = styled.svg`\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n// `;\n\n// // export const CalendarGlobalStyles = createGlobalStyle`\n// //  .react-datepicker__wrapper {\n// //     position: relative;\n\n// //   }\n// //   .react-datepicker {\n// //     position: absolute;\n// //     left: -20px;\n// //     top: 50%;\n// //     transform: translate(-15%, 0%);\n// //     display: flex;\n// //     flex-direction: column;\n// //     align-items: center;\n// //     padding: 14px;\n// //     background-color: #ef8964;\n// //     font-family: 'Roboto', sans-serif;\n// //     border-radius: 8px;\n// //   }\n// //   .react-datepicker__month-container {\n// //     float: inherit;\n// //     box-sizing: border-box;\n// //   }\n// //   .react-datepicker__day-names {\n// //     display: flex;\n// //     justify-content: space-between;\n// //     align-items: center;\n// //     padding-top: 14px;\n// //     margin-bottom: 8px;\n// //     border-top: 1px solid rgba(239, 237, 232, 0.2);\n// //   }\n// //   .react-datepicker__header {\n// //     position: relative;\n// //     background-color: #ef8964;\n// //   }\n\n// //   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n// //     border-bottom: 0px;\n// //     padding: 0;\n// //   }\n// //   .react-datepicker__day\n// //     react-datepicker__day--018.react-datepicker__day--selected\n// //     react-datepicker__day--today {\n// //     outline: none;\n// //     border: none;\n// //   }\n// //   .react-datepicker__current-month {\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 16px;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //     margin-bottom: 14px;\n// //   }\n// //   .react-datepicker__day-name {\n// //     margin: 0;\n// //     color: rgba(239, 237, 232, 0.5);\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-style: normal;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //   }\n\n// //   .react-datepicker__day--disabled {\n// //     opacity: 25%;\n// //   }\n// //   .react-datepicker__navigation {\n// //     margin-top: 14px;\n// //     color: white;\n// //   }\n// //   .react-datepicker__navigation--previous {\n// //     left: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation--next {\n// //     right: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation-icon::before:hover:focus {\n// //     border-color: white;\n// //   }\n// //   .react-datepicker__week {\n// //     display: flex;\n// //     align-items: center;\n// //     justify-content: space-between;\n// //     color: white;\n// //   }\n// //   .react-datepicker__day {\n// //     display: flex;\n// //     flex-direction: column;\n// //     justify-content: center;\n// //     align-items: center;\n// //     flex-shrink: 0;\n// //     margin: 0;\n// //     border-radius: 50%;\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-weight: 400;\n// //     line-height: 18px;\n// //     text-align: center;\n// //     width: 24px;\n// //     height: 24px;\n// //   }\n// //   .react-datepicker__month {\n// //     display: flex;\n// //     gap: 5px;\n// //     flex-direction: column;\n// //     justify-content: space-between;\n// //     margin: 0;\n// //   }\n// //   .react-datepicker__day--selected {\n// //     background-color: #040404;\n// //     color: #efede8;\n// //     font-size: 14px;\n// //   }\n// //   .react-datepicker__day--selected:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //   }\n// //   .react-datepicker__day:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--keyboard-selected {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--outside-month {\n// //     opacity: 50%;\n// //   }\n// //   .react-datepicker__triangle {\n// //     display: none;\n// //   }\n// // `;\n// export const CalendarGlobalStyles = createGlobalStyle`\n//   .react-datepicker__wrapper {\n//     position: relative;\n\n//   }\n//   .react-datepicker {\n//     position: absolute;\n//     left: 50%;\n//     top: 50%;\n//     transform: translate(-1%, 0%);\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     width: 327px;\n//     height: 354px;\n//     padding: 9px 18px;\n//   background-color: #3e85f3;\n//     font-family: Inter;\n//     border-radius: 16px;\n//   }\n//   .react-datepicker__month-container {\n//     float: inherit;\n//     box-sizing: border-box;\n//   }\n//   .react-datepicker__header {\n//     position: relative;\n//     background-color: #3e85f3;\n//   }\n//   .react-datepicker__day-names {\n//     display: flex;\n//     justify-content: space-between;\n//     align-items: center;\n//     padding: 8px 8px;\n//     border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n//   }\n//   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n//     border-bottom: 0px;\n//     padding: 0;\n//   }\n//   .react-datepicker__day react-datepicker__day--018.react-datepicker__day--selected react-datepicker__day--today{\n//     outline: none;\n//     border: none;\n// }\n//   .react-datepicker__current-month {\n//     font-family: Inter;\n//     font-size: 20px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 24px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__day-name {\n//     margin: 0;\n//    padding: 8px 8px;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 18px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__navigation {\n//     margin-top: 24px;\n//     color: white;\n//   }\n//   .react-datepicker__navigation--previous {\n//     left: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation--next {\n//     right: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation-icon::before:hover:focus {\n//     border-color: white;\n//   }\n//   .react-datepicker__week {\n//     display: flex;\n//     align-items: center;\n//     justify-content: space-between;\n//     color: white;\n//   }\n//   .react-datepicker__day {\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: center;\n//     align-items: center;\n//     gap: 8px;\n//     flex-shrink: 0;\n//     margin: 0;\n//     width: 32px;\n//     height: 32px;\n//     border-radius: 50%;\n//     color: white;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 400;\n//     line-height: 18px;\n//     text-align: center;\n//   }\n//   .react-datepicker__month {\n//     display: flex;\n//     gap: 7px;\n//     flex-direction: column;\n//     justify-content: space-between;\n//     padding-top: 16px;\n//     margin: 0;\n//   }\n//   .react-datepicker__day--selected {\n//     background-color:white;\n//     color:#3e85f3;\n//     font-size: 14px;\n//   }\n//   .react-datepicker__day--selected:hover {\n//     border-radius: 50%;\n//   background-color:white;\n//   }\n//   .react-datepicker__day:hover {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--keyboard-selected {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--weekend {\n//     opacity: 50%;\n//   }\n// .react-datepicker__day--outside-month {\n//     background-color: transparent;\n//     pointer-events: none;\n//     opacity: 0;\n//   }\n//   .react-datepicker__view-calendar-icon input {\n//     padding: 6px 10px 5px 13px;\n//   }\n//   .react-datepicker__triangle {\n//     visibility: hidden;\n//   }\n// `;\n\n// export const TitleWrapper = styled.button`\n//   width: 195px;\n//   color: #ffffff;\n//   background: #3e85f3;\n//   border-radius: 8px;\n//   font-weight: 700;\n//   line-height: 18px;\n//   text-align: center;\n//   text-transform: uppercase;\n//   padding: 8px 12px;\n//   font-size: 16px;\n//   justify-content: space-around;\n//   align-items: center;\n// `;\n\n//-------------------------------\nimport { createGlobalStyle, styled } from 'styled-components';\n\nexport const IconSvg = styled.svg`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const CalendarGlobalStyles = createGlobalStyle`\n .react-datepicker__wrapper {\n    position: relative;\n    \n  }\n  .react-datepicker {\n    position: absolute;\n    left: -20px;\n    top: 50%;\n    transform: translate(-15%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;    \n    padding: 14px;\n    background-color: #ef8964;\n    font-family: 'Roboto', sans-serif;\n    border-radius: 8px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 14px;\n    margin-bottom: 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;    \n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: normal;\n    margin-bottom: 14px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    color: rgba(239, 237, 232, 0.5);\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n\n  .react-datepicker__day--disabled {\n    opacity: 25%;\n  }\n  .react-datepicker__navigation {\n    margin-top: 14px;\n    color: white;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: white;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin: 0;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n    width: 24px;\n    height: 24px;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efede8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: white;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--outside-month {\n    opacity: 50%;\n  }\n  .react-datepicker__triangle {\n    display: none;\n  }\n`;\n\nexport const InputField = styled.input`\n  width: 100%;\n  padding: 14px;\n  align-items: center;\n  gap: 10px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  background-color: transparent;\n  color: #efede8;\n\n  &:hover {\n    border-color: #e6533c; /* Змінюємо колір бордера на червоний при ховері */\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { CalendarGlobalStyles, IconSvg, InputField } from './Calendar.styled';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nimport sprite from '../../images/sprite.svg';\nimport { useState, useEffect } from 'react';\nimport { useField } from 'formik';\n\nconst Calendar = ({ name }) => {\n\tconst [selectedDate, setSelectedDate] = useState(null);\n\tconst [field, , { setValue }] = useField(name);\n\tuseEffect(() => {\n\t\thandleDateChange(new Date(field.value));\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst handleDateChange = async (date) => {\n\t\tsetSelectedDate(date);\n\t\tsetValue(date);\n\t\tconsole.log(field);\n\t};\n\treturn (\n\t\t<>\n\t\t\t<div style={{ width: '187px', position: 'relative' }}>\n\t\t\t\t<IconSvg width='18' height='18'>\n\t\t\t\t\t<use href={`${sprite}#icon-calendar-white`}></use>\n\t\t\t\t</IconSvg>\n\n\t\t\t\t<DatePicker\n\t\t\t\t\t{...field}\n\t\t\t\t\tselected={selectedDate}\n\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\tcustomInput={<InputField name={name} style={{ cursor: 'pointer' }} />}\n\t\t\t\t\tdateFormat={'dd/MM/yyyy'}\n\t\t\t\t\tcalendarStartDay={1}\n\t\t\t\t\tformatWeekDay={(day) => day.substring(0, 1)}\n\t\t\t\t\tplaceholderText={selectedDate === null ? 'Birthday' : null}\n\t\t\t\t/>\n\n\t\t\t\t<CalendarGlobalStyles />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Calendar;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 96px;\n    padding-right: 96px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DashboardSection = styled.section`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  width: 100%;\n  width: 335px;\n  /* padding-bottom: 40px; */\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n    width: 593px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 48px;\n    width: 390px;\n  }\n`;\n\nexport const DashboardList = styled.ul`\n  display: flex;\n  column-gap: 13px;\n  row-gap: 20px;\n  flex-wrap: wrap;\n  li:nth-child(1),\n  li:nth-child(2) {\n    background-color: var(--orange-color);\n  }\n  @media screen and (max-width: 767px) {\n    li:nth-child(1),\n    li:nth-child(3),\n    li:nth-child(5) {\n      width: 157px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 593px;\n    height: 248px;\n    flex-direction: column;\n    gap: 16px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 390px;\n    height: 380px;\n    flex-direction: row;\n  }\n`;\n\n// export const DashboardItems = styled.li`\n//   /* position: relative; */\n//   width: 165px;\n//   height: 96px;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-between;\n//   border-radius: 12px;\n//   border: 1px solid rgba(239, 237, 232, 0.2);\n//   background-color: rgba(239, 237, 232, 0.05);\n//   padding: 14px;\n//   font-size: 12px;\n//   line-height: calc(16 / 12);\n//   && > h3 {\n//       color: ${props => {\n//         if (props.index === 0 || props.index === 1)\n//           return 'rgba(239, 237, 232, 0.8)';\n//         if (props.index === 2) return 'rgba(239, 237, 232, 0.4)';\n//       }};\n//   /* flex-basis: calc((100% - 1 * 45px) / 2); */\n//   @media screen and (min-width: 768px) {\n//     flex-basis: auto;\n//     width: 187px;\n//     height: 116px;\n//     padding: 18px;\n//   };\n// `;\nexport const DashboardItems = styled.li`\n  /* position: relative; */\n  width: 165px;\n  height: 96px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 14px;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n  && > h3 {\n    color: ${props => {\n      if (props.$index === 1) return 'rgba(239, 237, 232, 0.8)';\n      return 'rgba(239, 237, 232, 0.4)';\n    }};\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-basis: auto;\n    width: 187px;\n    height: 116px;\n    padding: 18px;\n  }\n`;\n\nexport const DashboardTitle = styled.h3`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  /* color: rgba(239, 237, 232, 0.4); */\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(16 / 12);\n  @media screen and (min-width: 768px) {\n    line-height: calc(18 / 12);\n  }\n`;\n\nexport const DashboardData = styled.p`\n  color: var(--white-color);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: calc(20 / 18);\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: calc(32 / 24);\n  }\n`;\n\nexport const DashboardTextContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const DashboardText = styled.p`\n  display: flex;\n  max-width: 300px;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n    max-width: 558px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 358px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid var(--beige-color);\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: var(--beige-color);\n`;\n","import React from 'react';\nimport {\n  DashboardSection,\n  DashboardList,\n  DashboardItems,\n  DashboardTitle,\n  DashboardData,\n  DashboardText,\n  IconWrap,\n  DashboardTextContainer,\n} from './DayDashboard.styled';\nimport sprite from '../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\n\nconst DayDashboard = () => {\n  const { user } = useSelector(state => state.auth)\n  return (\n      <div>\n      <DashboardSection>\n        <DashboardList>\n          <DashboardItems $index={1}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-fork-knife`} />\n              </svg>\n              Daily calorie intake\n            </DashboardTitle>\n            <DashboardData>{user.bmr}</DashboardData>\n          </DashboardItems>\n          <DashboardItems $index={1}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-dumbbell`} />\n              </svg>\n              Daily physical activity\n            </DashboardTitle>\n            <DashboardData>110 min</DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-apple`} />\n              </svg>\n              Сalories consumed\n            </DashboardTitle>\n            <DashboardData>707</DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-fire`} />\n              </svg>\n              Сalories burned\n            </DashboardTitle>\n            <DashboardData>855</DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-bubble`} />\n              </svg>\n              Calories remaining\n            </DashboardTitle>\n            <DashboardData>1493</DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-running-figure`} />\n              </svg>\n              Sports remaining\n            </DashboardTitle>\n            <DashboardData>85 min</DashboardData>\n          </DashboardItems>\n        </DashboardList>\n        <DashboardTextContainer>\n          <IconWrap>\n            <svg width={20} height={20}>\n              <use xlinkHref={`${sprite}#icon-attention`} />\n            </svg>\n          </IconWrap>\n          <DashboardText>\n            Record all your meals in the calorie diary every day. This will help\n            you be aware of your nutrition and make informed choices.\n          </DashboardText>\n        </DashboardTextContainer>\n      </DashboardSection>\n    </div>\n  );\n};\n\nexport default DayDashboard;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ProductsSection = styled.section`\n  width: 335px;\n  max-height: 824px;\n  display: flex;\n  flex-direction: column;\n  gap: 22px;\n  padding: 16px;\n  /* margin-bottom: 40px; */\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  overflow: auto;\n  &::-webkit-scrollbar {\n    width: 0;\n  }\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 234px;\n    gap: 19px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n    height: 234px;\n  }\n`;\n\nexport const ProductsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ProductsTitle = styled.h3`\n  color: rgba(239, 237, 232, 0.5);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n`;\n\nexport const ProductsLink = styled(Link)`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  color: var(--orange-color);\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(18 / 14);\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n`;\n","import styled from 'styled-components';\nexport const ProductsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  /* color: white; */\n  /* margin-bottom: 40px; */\n`;\n\nexport const ProductsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  :nth-child(1),\n  :nth-child(2) {\n    grid-column: span 5;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 8px;\n    /* :nth-child(1) {\n      width: 204px;\n    }\n    :nth-child(2) {\n      width: 128px;\n    }\n    :nth-child(3),\n    :nth-child(4) {\n      width: 90px;\n    }\n    :nth-child(5) {\n      width: 80px;\n    } */\n  }\n`;\n\nexport const ProductsItem = styled.li`\n  && > p {\n    width: ${props => {\n      if (props.index === 3) return '80px';\n      if (props.index === 4) return '80px';\n      if (props.index === 5) return '76px';\n    }};\n  }\n  @media screen and (min-width: 768px) {\n    && > p {\n      width: ${props => {\n        if (props.index === 0) return '204px'; // Ширина для першого елемента\n        if (props.index === 1) return '128px'; // Ширина для другого елемента\n        if (props.index === 2 || props.index === 3) return '90px'; // Ширина для третього елемента\n        if (props.index === 4) return '80px';\n        // Додайте інші ширини, якщо потрібно\n        //   return '100px'; // Ширина за замовчуванням\n      }};\n      /* Інші стилі для <p>, якщо потрібно */\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    && > p {\n      width: ${props => {\n        if (props.index === 0) return '212px';\n        if (props.index === 1) return '166px';\n        if (props.index === 2 || props.index === 3) return '105px';\n        if (props.index === 4) return '110px';\n      }};\n      /* Інші стилі для <p>, якщо потрібно */\n    }\n  }\n`;\n\nexport const ProductsTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport const ProductsData = styled.p`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  padding: 10px 14px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  color: var(--white-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  /* @media screen and (min-width: 768px) {\n    display: ${props => (props.displayed ? 'none' : 'block')};\n  }  */\n`;\n\nexport const IndicatorIcon = styled.div`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background: var(--success-color);\n`;\n\nexport const TrashBtn = styled.button`\n  background-color: transparent;\n  position: absolute;\n  top: 198px;\n  right: 0px;\n  @media screen and (min-width: 768px) {\n    top: 34px;\n    right: 8px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 34px;\n    right: 20px;\n  }\n`;\n","import React from 'react';\n\nimport {\n  ProductsContainer,\n  ProductsList,\n  ProductsItem,\n  ProductsTitle,\n  ProductsData,\n  TrashBtn,\n  IndicatorIcon,\n} from './DayProductsItem.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst DayProductsItem = () => {\n  return (\n    <ProductsContainer>\n      <ProductsList>\n        <ProductsItem index={0}>\n          <ProductsTitle>Title</ProductsTitle>\n          <ProductsData>Bread Hercules grain</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={1}>\n          <ProductsTitle>Category</ProductsTitle>\n          <ProductsData>Flour</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={2}>\n          <ProductsTitle>Calories</ProductsTitle>\n          <ProductsData>289</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={3}>\n          <ProductsTitle>Weight</ProductsTitle>\n          <ProductsData>100</ProductsData>\n        </ProductsItem>\n        <ProductsItem index={4}>\n          <ProductsTitle>Recommend</ProductsTitle>\n          <ProductsData>\n            <IndicatorIcon />\n            Yes\n          </ProductsData>\n        </ProductsItem>\n      </ProductsList>\n      <TrashBtn>\n        <svg width={20} height={20}>\n          <use xlinkHref={`${sprite}#icon-trash`} />\n        </svg>\n      </TrashBtn>\n    </ProductsContainer>\n  );\n};\n\nexport default DayProductsItem;\n","import React from 'react';\nimport {\n  ProductsSection,\n  ProductsTitle,\n  ProductsLink,\n  ProductsContainer,\n} from './DayProducts.styled';\nimport DayProductsItem from 'components/DayProductsItem/DayProductsItem';\nimport sprite from '../../images/sprite.svg';\n\nconst DayProducts = () => {\n  return (\n    <>\n      <ProductsSection>\n        <ProductsContainer>\n          <ProductsTitle>Products</ProductsTitle>\n          <ProductsLink>\n            Add product\n            <svg width={16} height={16}>\n              <use xlinkHref={`${sprite}#icon-arrow-right`} />\n            </svg>\n          </ProductsLink>\n        </ProductsContainer>\n        <DayProductsItem />\n        {/* <DayProductsItem />\n        <DayProductsItem />\n        <DayProductsItem /> */}\n      </ProductsSection>\n    </>\n  );\n};\n\nexport default DayProducts;\n","import { Link } from 'react-router-dom';\n// import styled from 'styled-components';\nimport { createGlobalStyle, styled } from 'styled-components';\n\n\nexport const ExercisesSection = styled.section`\n  width: 335px;\n  max-height: 1064px;\n  display: flex;\n  flex-direction: column;\n  gap: 22px;\n  padding: 16px 4px 16px 16px;\n  /* margin-bottom: 40px; */\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  overflow: auto;\n  /* &::-webkit-scrollbar {\n    width: 0;\n  } */\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 234px;\n    gap: 19px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n    height: 234px;\n  }\n`;\n\nexport const ProductsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ExercisesTitle = styled.h3`\n  color: rgba(239, 237, 232, 0.5);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n`;\n\nexport const ExercisesLink = styled(Link)`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  color: var(--orange-color);\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(18 / 14);\n  margin-right: 12px;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n`;\n\nexport const StyledScrollbar = createGlobalStyle`\n.os-scrollbar {\n    --os-track-border-radius: 0;\n    --os-handle-bg: rgba(239, 237, 232, 0.10);\n    --os-handle-bg-hover: #EF8964;\n    --os-handle-bg-active: #E6533C;\n}`","import styled from 'styled-components';\nexport const ProductsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  @media screen and (min-width: 1440px) {\n    margin-left: 16px\n  }\n`;\n\nexport const ProductsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  :nth-child(1),\n  :nth-child(2),\n  :nth-child(3) {\n    grid-column: span 5;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 8px;\n  }\n`;\n\nexport const ProductsItem = styled.li`\n  && > p {\n    width: ${props => {\n            if (props.$index === 0 || props.$index === 1 || props.$index === 2) return '298px';\n\n      if (props.$index === 3) return '80px';\n      if (props.$index === 4) return '80px';\n      if (props.$index === 5) return '76px';\n    }};\n  }\n  @media screen and (min-width: 768px) {\n    && > p {\n      width: ${props => {\n        if (props.$index === 0) return '90px';\n        if (props.$index === 1) return '132px';\n        if (props.$index === 2) return '128px';\n        if (props.$index === 3) return '84px';\n        if (props.$index === 4) return '78px';\n        if (props.$index === 5) return '72px';\n      }};\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    && > p {\n      width: ${props => {\n        if (props.$index === 0) return '115px';\n        if (props.$index === 1) return '157px';\n        if (props.$index === 2) return '131px';\n        if (props.$index === 3) return '106px';\n        if (props.$index === 4) return '91px';\n        if (props.$index === 5) return '82px';\n      }};\n    }\n  }\n`;\n\nexport const ProductsTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  @media screen and (max-width: 1439px) {\n    max-width: 78px;\n  }\n  @media screen and (max-width: 767px) {\n    max-width: 80px;\n  }\n`;\n\nexport const ProductsData = styled.p`\n  padding: 10px 14px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  color: var(--white-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nexport const TrashBtn = styled.button`\n  background-color: transparent;\n  position: absolute;\n  top: 280px;\n  right: 6px;\n  @media screen and (min-width: 768px) {\n    top: 34px;\n    right: 16px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 34px;\n    right: 20px;\n  }\n`;\n","import React from 'react';\n\n\nimport {\n  ProductsContainer,\n  ProductsList,\n  ProductsItem,\n  ProductsTitle,\n  ProductsData,\n  TrashBtn,\n} from './DayExercisesItem.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst DayExercisesItem = () => {\n  return (\n    <ProductsContainer>\n      <ProductsList>\n        <ProductsItem $index={0}>\n          <ProductsTitle>Part</ProductsTitle>\n          <ProductsData>Bread Hercules grain</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={1}>\n          <ProductsTitle>Equipment</ProductsTitle>\n          <ProductsData>Flour</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={2}>\n          <ProductsTitle>Name</ProductsTitle>\n          <ProductsData>Flour</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={3}>\n          <ProductsTitle>Target</ProductsTitle>\n          <ProductsData>289</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={4}>\n          <ProductsTitle>Burned Calories</ProductsTitle>\n          <ProductsData>100</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={5}>\n          <ProductsTitle>Time</ProductsTitle>\n          <ProductsData>Yes</ProductsData>\n        </ProductsItem>\n      </ProductsList>\n      <TrashBtn>\n        <svg width={20} height={20}>\n          <use xlinkHref={`${sprite}#icon-trash`} />\n        </svg>\n      </TrashBtn>\n    </ProductsContainer>\n  );\n};\n\nexport default DayExercisesItem;\n","import React from 'react';\nimport 'overlayscrollbars/overlayscrollbars.css';\nimport { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\nimport './scrollbarStyled.css'\nimport {\n  ExercisesSection,\n  ExercisesTitle,\n  ExercisesLink,\n  ProductsContainer,\n} from './DayExercises.styled';\nimport DayExercisesItem from 'components/DayExercisesItem/DayExercisesItem';\nimport sprite from '../../images/sprite.svg';\n\nconst DayExercises = () => {\n  return (\n    <>\n      <ExercisesSection>\n        <ProductsContainer>\n          <ExercisesTitle>Exercises</ExercisesTitle>\n          <ExercisesLink>\n            Add exercise\n            <svg width={16} height={16}>\n              <use xlinkHref={`${sprite}#icon-arrow-right`} />\n            </svg>\n          </ExercisesLink>\n        </ProductsContainer>\n        <OverlayScrollbarsComponent defer>\n\n        <DayExercisesItem />\n        <DayExercisesItem />\n        <DayExercisesItem />\n        <DayExercisesItem />\n        <DayExercisesItem />\n        </OverlayScrollbarsComponent>\n      </ExercisesSection>\n    </>\n  );\n};\n\nexport default DayExercises;\n","import styled from 'styled-components';\n\nexport const DiaryContainer = styled.div`\n  /* width: 100%; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 40px;\n  @media screen and (min-width: 768px) {\n    flex-direction: column-reverse;\n    gap: 64px;\n  }\n  @media screen and (min-width: 1440px) {\n    flex-direction: row-reverse;\n    gap: 32px;\n  }\n`;\n\nexport const DiaryInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n  }\n`;\n","import { Navigate } from \"react-router-dom\"\n\nconst WithDataRedirect = (Component) => {\n    return (props) => {\n        const {user: {bmr}} = props\n    return bmr ? <Component {...props} /> : <Navigate to='/profile' />\n}} \nexport default WithDataRedirect","import React from 'react';\nimport DayDashboard from 'components/DayDashboard/DayDashboard';\nimport DayProducts from 'components/DayProducts/DayProducts';\nimport DayExercises from 'components/DayExercises/DayExercises';\nimport { DiaryContainer, DiaryInfoContainer } from './DiaryPage.styled';\nimport { Container } from 'components/styles/Container/Container';\nimport Calendar from 'components/Calendar/Calendar';\nimport { Formik } from 'formik';\nimport WithDataRedirect from 'HOC/HocRedirect';\n\nconst DiaryPage = () => {\n  return (\n    <Container>\n      <Formik\n      \n      initialValues={{\n        day: new Date()\n      }}\n      >\n\n        {()=>(\n          <form>\n            <Calendar name=\"day\"/>\n          </form>\n        )}\n      </Formik>\n      \n      <DiaryContainer>\n        <DayDashboard />\n        <DiaryInfoContainer>\n          <DayProducts />\n          <DayExercises />\n        </DiaryInfoContainer>\n      </DiaryContainer>\n    </Container>\n  );\n};\nconst WrapedDiaryPage = WithDataRedirect(DiaryPage)\nexport default WrapedDiaryPage;\n"],"names":["IconSvg","styled","_templateObject","_taggedTemplateLiteral","CalendarGlobalStyles","createGlobalStyle","_templateObject2","InputField","_templateObject3","_ref","name","selectedDate","setSelectedDate","useState","field","setValue","useField","useEffect","handleDateChange","Date","value","async","date","console","log","_jsx","_Fragment","children","_jsxs","style","width","position","height","href","concat","sprite","DatePicker","selected","onChange","customInput","cursor","dateFormat","calendarStartDay","formatWeekDay","day","substring","placeholderText","Container","DashboardSection","DashboardList","DashboardItems","props","$index","DashboardTitle","_templateObject4","DashboardData","_templateObject5","DashboardTextContainer","_templateObject6","DashboardText","_templateObject7","IconWrap","_templateObject8","DayDashboard","user","useSelector","state","auth","xlinkHref","bmr","ProductsSection","ProductsContainer","ProductsTitle","ProductsLink","Link","ProductsList","ProductsItem","index","ProductsData","displayed","IndicatorIcon","TrashBtn","DayProductsItem","DayProducts","ExercisesSection","ExercisesTitle","ExercisesLink","DayExercisesItem","DayExercises","OverlayScrollbarsComponent","defer","DiaryContainer","DiaryInfoContainer","Component","Navigate","to","WithDataRedirect","DiaryPage","Formik","initialValues","Calendar"],"sourceRoot":""}