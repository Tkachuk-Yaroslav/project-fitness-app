{"version":3,"file":"static/js/56.2ae791aa.chunk.js","mappings":"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","sources":["components/Calendar/Calendar.styled.jsx","components/Calendar/Calendar.jsx","components/TitlePage/TitlePage.styled.jsx","components/styles/Container/Container.jsx","components/TitlePage/TitlePage.jsx","components/UserCard/UserCard.styled.jsx","components/UserCard/UserCard.jsx","components/UserForm/UserForm.styled.jsx","components/UserForm/schemas/userFormSchema.js","components/UserForm/CustomInput.styled.jsx","components/UserForm/CustomInput.jsx","components/UserForm/CustomRadio.styled.jsx","components/UserForm/CustomRadio.jsx","components/UserForm/UserForm.jsx","pages/ProfilePage/ProfilePage.styled.jsx","pages/ProfilePage/ProfilePage.jsx"],"sourcesContent":["// import { createGlobalStyle, styled } from 'styled-components';\n\n// export const IconSvg = styled.svg`\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n// `;\n\n// // export const CalendarGlobalStyles = createGlobalStyle`\n// //  .react-datepicker__wrapper {\n// //     position: relative;\n\n// //   }\n// //   .react-datepicker {\n// //     position: absolute;\n// //     left: -20px;\n// //     top: 50%;\n// //     transform: translate(-15%, 0%);\n// //     display: flex;\n// //     flex-direction: column;\n// //     align-items: center;\n// //     padding: 14px;\n// //     background-color: #ef8964;\n// //     font-family: 'Roboto', sans-serif;\n// //     border-radius: 8px;\n// //   }\n// //   .react-datepicker__month-container {\n// //     float: inherit;\n// //     box-sizing: border-box;\n// //   }\n// //   .react-datepicker__day-names {\n// //     display: flex;\n// //     justify-content: space-between;\n// //     align-items: center;\n// //     padding-top: 14px;\n// //     margin-bottom: 8px;\n// //     border-top: 1px solid rgba(239, 237, 232, 0.2);\n// //   }\n// //   .react-datepicker__header {\n// //     position: relative;\n// //     background-color: #ef8964;\n// //   }\n\n// //   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n// //     border-bottom: 0px;\n// //     padding: 0;\n// //   }\n// //   .react-datepicker__day\n// //     react-datepicker__day--018.react-datepicker__day--selected\n// //     react-datepicker__day--today {\n// //     outline: none;\n// //     border: none;\n// //   }\n// //   .react-datepicker__current-month {\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 16px;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //     margin-bottom: 14px;\n// //   }\n// //   .react-datepicker__day-name {\n// //     margin: 0;\n// //     color: rgba(239, 237, 232, 0.5);\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-style: normal;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //   }\n\n// //   .react-datepicker__day--disabled {\n// //     opacity: 25%;\n// //   }\n// //   .react-datepicker__navigation {\n// //     margin-top: 14px;\n// //     color: white;\n// //   }\n// //   .react-datepicker__navigation--previous {\n// //     left: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation--next {\n// //     right: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation-icon::before:hover:focus {\n// //     border-color: white;\n// //   }\n// //   .react-datepicker__week {\n// //     display: flex;\n// //     align-items: center;\n// //     justify-content: space-between;\n// //     color: white;\n// //   }\n// //   .react-datepicker__day {\n// //     display: flex;\n// //     flex-direction: column;\n// //     justify-content: center;\n// //     align-items: center;\n// //     flex-shrink: 0;\n// //     margin: 0;\n// //     border-radius: 50%;\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-weight: 400;\n// //     line-height: 18px;\n// //     text-align: center;\n// //     width: 24px;\n// //     height: 24px;\n// //   }\n// //   .react-datepicker__month {\n// //     display: flex;\n// //     gap: 5px;\n// //     flex-direction: column;\n// //     justify-content: space-between;\n// //     margin: 0;\n// //   }\n// //   .react-datepicker__day--selected {\n// //     background-color: #040404;\n// //     color: #efede8;\n// //     font-size: 14px;\n// //   }\n// //   .react-datepicker__day--selected:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //   }\n// //   .react-datepicker__day:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--keyboard-selected {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--outside-month {\n// //     opacity: 50%;\n// //   }\n// //   .react-datepicker__triangle {\n// //     display: none;\n// //   }\n// // `;\n// export const CalendarGlobalStyles = createGlobalStyle`\n//   .react-datepicker__wrapper {\n//     position: relative;\n\n//   }\n//   .react-datepicker {\n//     position: absolute;\n//     left: 50%;\n//     top: 50%;\n//     transform: translate(-1%, 0%);\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     width: 327px;\n//     height: 354px;\n//     padding: 9px 18px;\n//   background-color: #3e85f3;\n//     font-family: Inter;\n//     border-radius: 16px;\n//   }\n//   .react-datepicker__month-container {\n//     float: inherit;\n//     box-sizing: border-box;\n//   }\n//   .react-datepicker__header {\n//     position: relative;\n//     background-color: #3e85f3;\n//   }\n//   .react-datepicker__day-names {\n//     display: flex;\n//     justify-content: space-between;\n//     align-items: center;\n//     padding: 8px 8px;\n//     border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n//   }\n//   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n//     border-bottom: 0px;\n//     padding: 0;\n//   }\n//   .react-datepicker__day react-datepicker__day--018.react-datepicker__day--selected react-datepicker__day--today{\n//     outline: none;\n//     border: none;\n// }\n//   .react-datepicker__current-month {\n//     font-family: Inter;\n//     font-size: 20px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 24px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__day-name {\n//     margin: 0;\n//    padding: 8px 8px;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 18px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__navigation {\n//     margin-top: 24px;\n//     color: white;\n//   }\n//   .react-datepicker__navigation--previous {\n//     left: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation--next {\n//     right: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation-icon::before:hover:focus {\n//     border-color: white;\n//   }\n//   .react-datepicker__week {\n//     display: flex;\n//     align-items: center;\n//     justify-content: space-between;\n//     color: white;\n//   }\n//   .react-datepicker__day {\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: center;\n//     align-items: center;\n//     gap: 8px;\n//     flex-shrink: 0;\n//     margin: 0;\n//     width: 32px;\n//     height: 32px;\n//     border-radius: 50%;\n//     color: white;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 400;\n//     line-height: 18px;\n//     text-align: center;\n//   }\n//   .react-datepicker__month {\n//     display: flex;\n//     gap: 7px;\n//     flex-direction: column;\n//     justify-content: space-between;\n//     padding-top: 16px;\n//     margin: 0;\n//   }\n//   .react-datepicker__day--selected {\n//     background-color:white;\n//     color:#3e85f3;\n//     font-size: 14px;\n//   }\n//   .react-datepicker__day--selected:hover {\n//     border-radius: 50%;\n//   background-color:white;\n//   }\n//   .react-datepicker__day:hover {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--keyboard-selected {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--weekend {\n//     opacity: 50%;\n//   }\n// .react-datepicker__day--outside-month {\n//     background-color: transparent;\n//     pointer-events: none;\n//     opacity: 0;\n//   }\n//   .react-datepicker__view-calendar-icon input {\n//     padding: 6px 10px 5px 13px;\n//   }\n//   .react-datepicker__triangle {\n//     visibility: hidden;\n//   }\n// `;\n\n// export const TitleWrapper = styled.button`\n//   width: 195px;\n//   color: #ffffff;\n//   background: #3e85f3;\n//   border-radius: 8px;\n//   font-weight: 700;\n//   line-height: 18px;\n//   text-align: center;\n//   text-transform: uppercase;\n//   padding: 8px 12px;\n//   font-size: 16px;\n//   justify-content: space-around;\n//   align-items: center;\n// `;\n\n//-------------------------------\nimport { createGlobalStyle, styled } from 'styled-components';\n\nexport const IconSvg = styled.svg`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const CalendarGlobalStyles = createGlobalStyle`\n .react-datepicker__wrapper {\n    position: relative;\n    \n  }\n  .react-datepicker {\n    position: absolute;\n    left: -20px;\n    top: 50%;\n    transform: translate(-15%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;    \n    padding: 14px;\n    background-color: #ef8964;\n    font-family: 'Roboto', sans-serif;\n    border-radius: 8px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 14px;\n    margin-bottom: 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;    \n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: normal;\n    margin-bottom: 14px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    color: rgba(239, 237, 232, 0.5);\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n\n  .react-datepicker__day--disabled {\n    opacity: 25%;\n  }\n  .react-datepicker__navigation {\n    margin-top: 14px;\n    color: white;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: white;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin: 0;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n    width: 24px;\n    height: 24px;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efede8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: white;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--outside-month {\n    opacity: 50%;\n  }\n  .react-datepicker__triangle {\n    display: none;\n  }\n`;\n\nexport const InputField = styled.input`\n  width: 100%;\n  padding: 14px;\n  align-items: center;\n  gap: 10px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  background-color: transparent;\n  color: #efede8;\n\n  &:hover {\n    border-color: #e6533c; /* Змінюємо колір бордера на червоний при ховері */\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { CalendarGlobalStyles, IconSvg, InputField } from './Calendar.styled';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nimport sprite from '../../images/sprite.svg';\nimport { useState, useEffect } from 'react';\nimport { useField } from 'formik';\n\nconst Calendar = ({ name }) => {\n\tconst [selectedDate, setSelectedDate] = useState(null);\n\tconst [field, , { setValue }] = useField(name);\n\tuseEffect(() => {\n\t\thandleDateChange(new Date(field.value));\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst handleDateChange = async (date) => {\n\t\tsetSelectedDate(date);\n\t\tsetValue(date);\n\t\tconsole.log(field);\n\t};\n\treturn (\n\t\t<>\n\t\t\t<div style={{ width: '187px', position: 'relative' }}>\n\t\t\t\t<IconSvg width='18' height='18'>\n\t\t\t\t\t<use href={`${sprite}#icon-calendar-white`}></use>\n\t\t\t\t</IconSvg>\n\n\t\t\t\t<DatePicker\n\t\t\t\t\t{...field}\n\t\t\t\t\tselected={selectedDate}\n\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\tcustomInput={<InputField name={name} style={{ cursor: 'pointer' }} />}\n\t\t\t\t\tdateFormat={'dd/MM/yyyy'}\n\t\t\t\t\tcalendarStartDay={1}\n\t\t\t\t\tformatWeekDay={(day) => day.substring(0, 1)}\n\t\t\t\t\tplaceholderText={selectedDate === null ? 'Birthday' : null}\n\t\t\t\t/>\n\n\t\t\t\t<CalendarGlobalStyles />\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Calendar;\n","import styled from 'styled-components';\n\nexport const TitleH1Styled = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.17;\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    line-height: 1.375;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 96px;\n    padding-right: 96px;\n  }\n`;\n","import { TitleH1Styled } from './TitlePage.styled';\nconst TitlePage = ({ children }) => {\n  return <TitleH1Styled>{children}</TitleH1Styled>;\n};\nexport default TitlePage;\n","import styled from 'styled-components';\n\nexport const WrapperUser = styled('div')({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  gap: 31,\n  margin: '40px 0',\n  textAlign: 'center',\n});\nexport const WrapperAvatar = styled('div')({\n  position: 'relative',\n\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  border: '1px solid var(--orange-color)',\n  borderRadius: '50%',\n  width: 90,\n  height: 90,\n  '@media screen and (min-width: 768px)': {\n    width: 150,\n    height: 150,\n  },\n});\n\nexport const Title2 = styled('h2')({\n  color: 'rgba(239, 237, 232, 1)',\n  fontSize: 18,\n  fontWeight: 400,\n  lineHeight: 1.11,\n  '@media screen and (min-width: 768px)': {\n    fontSize: 24,\n    lineHeight: 1.17,\n  },\n});\nexport const TextUser = styled('p')({\n  marginTop: 4,\n  color: 'rgba(239, 237, 232, 0.50)',\n  fontSize: 14,\n  fontWeight: 400,\n  lineHeight: 1.29,\n  '@media screen and (min-width: 768px)': {\n    marginTop: 8,\n  },\n});\nexport const WrapperSVGText = styled('div')({\n  margin: '0 auto',\n  minWidth: 129,\n  maxWidth: 390,\n  display: 'flex',\n  gap: 8,\n});\nexport const TextItemUser = styled('p')({\n  color: 'rgba(239, 237, 232, 0.80)',\n  fontSize: 12,\n  fontWeight: 400,\n  lineHeight: 1.33,\n  '@media screen and (min-width: 768px)': {\n    lineHeight: 1.5,\n  },\n});\nexport const UserCardListStyled = styled('ul')({\n  display: 'flex',\n  justifyContent: 'center',\n  gap: 14,\n  marginBottom: 40,\n  '@media screen and (min-width: 768px)': {\n    gap: 16,\n  },\n});\nexport const UserCardItemStyled = styled('li')({\n  minWidth: 129,\n  display: 'flex',\n  flexWrap: 'wrap',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  gap: 16,\n  padding: 14,\n\n  backgroundColor: 'var(--orange-color)',\n  borderRadius: 12,\n  border: '1px solid rgba(239, 237, 232, 0.20)',\n  '@media screen and (min-width: 768px)': {\n    padding: 18,\n  },\n});\nexport const WrapperSVG = styled('div')({\n  width: 24,\n  height: 24,\n  borderRadius: '50%',\n  backgroundColor: 'var(--beige-color)',\n});\nexport const TextInfoUser = styled('p')({\n  color: 'rgba(239, 237, 232, 0.30)',\n  fontSize: 14,\n  fontWeight: 400,\n  lineHeight: 1.29,\n  paddingBottom: 41,\n  '@media screen and (min-width: 768)': {\n    fontSize: 16,\n    lineHeight: 1.5,\n    paddingBottom: 32,\n  },\n});\nexport const ButtonWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n});\n\nexport const ButtonAddAvatar = styled('button')({\n  backgroundColor: 'transparent',\n  position: 'absolute',\n  bottom: '-20%',\n  '@media screen and (min-width: 768px)': {\n    bottom: '-15%',\n\n    svg: {\n      width: 32,\n      height: 32,\n    },\n  },\n});\n","import {\n  ButtonAddAvatar,\n  ButtonWrapper,\n  TextInfoUser,\n  TextItemUser,\n  TextUser,\n  Title2,\n  UserCardItemStyled,\n  UserCardListStyled,\n  WrapperAvatar,\n  WrapperSVG,\n  WrapperSVGText,\n  WrapperUser,\n} from './UserCard.styled';\nimport sprite from '../../images/sprite.svg';\nimport { LogoutBtn } from 'components/UserMenu/UserMenu.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutThunk } from '../../redux/auth/thunks';\n\nconst UserCard = () => {\n  const dispatch = useDispatch();\n  const handleLogOut = () => dispatch(logoutThunk());\n\n  const result = useSelector(state => state.auth.user);\n\n  // console.log(result);\n\n  return (\n    <div>\n      <WrapperUser>\n        <WrapperAvatar>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"41\"\n            height=\"42\"\n            viewBox=\"0 0 41 42\"\n            fill=\"none\"\n          >\n            <path\n              d=\"M20.5013 0.333374C23.1977 0.333374 25.7836 1.42206 27.6902 3.35994C29.5969 5.29782 30.668 7.92614 30.668 10.6667C30.668 13.4073 29.5969 16.0356 27.6902 17.9735C25.7836 19.9114 23.1977 21.0001 20.5013 21.0001C17.8049 21.0001 15.219 19.9114 13.3124 17.9735C11.4058 16.0356 10.3346 13.4073 10.3346 10.6667C10.3346 7.92614 11.4058 5.29782 13.3124 3.35994C15.219 1.42206 17.8049 0.333374 20.5013 0.333374ZM20.5013 41.6667C20.5013 41.6667 40.8347 41.6667 40.8347 36.5001C40.8347 30.3001 30.9222 23.5834 20.5013 23.5834C10.0805 23.5834 0.167969 30.3001 0.167969 36.5001C0.167969 41.6667 20.5013 41.6667 20.5013 41.6667Z\"\n              fill=\"#EFEDE8\"\n              fillOpacity=\"0.1\"\n            />\n          </svg>\n          <ButtonAddAvatar>\n            <svg width={24} height={24}>\n              <use xlinkHref={`${sprite}#icon-add-avatar`} />\n            </svg>\n          </ButtonAddAvatar>\n        </WrapperAvatar>\n        <div>\n          <Title2>{result.name}</Title2>\n          <TextUser>User</TextUser>\n        </div>\n      </WrapperUser>\n      <UserCardListStyled>\n        <UserCardItemStyled>\n          <WrapperSVGText>\n            <svg width={20} height={20}>\n              <use xlinkHref={`${sprite}#icon-fork-knife`} />\n            </svg>\n            <TextItemUser>Daily calorie intake</TextItemUser>\n          </WrapperSVGText>\n          <Title2 className=\"number\">{result.bmr}</Title2>\n        </UserCardItemStyled>\n        <UserCardItemStyled>\n          <WrapperSVGText>\n            <svg width={20} height={20}>\n              <use xlinkHref={`${sprite}#icon-dumbbell`} />\n            </svg>\n            <TextItemUser>Daily physical activity</TextItemUser>\n          </WrapperSVGText>\n          <Title2 className=\"number\">0 min</Title2>\n        </UserCardItemStyled>\n      </UserCardListStyled>\n      <WrapperSVGText>\n        <WrapperSVG>\n          <svg width={24} height={24}>\n            <use xlinkHref={`${sprite}#icon-attention`} />\n          </svg>\n        </WrapperSVG>\n\n        <TextInfoUser>\n          We understand that each individual is unique, so the entire approach\n          to diet is relative and tailored to your unique body and goals.\n        </TextInfoUser>\n      </WrapperSVGText>\n      <ButtonWrapper>\n        <LogoutBtn\n          style={{ display: 'flex' }}\n          type=\"button\"\n          onClick={handleLogOut}\n        >\n          <span>Logout</span>\n          <svg>\n            <use href={`${sprite}#icon-log-out`}></use>\n          </svg>\n        </LogoutBtn>\n      </ButtonWrapper>\n    </div>\n  );\n};\nexport default UserCard;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const FormStyled = styled(Form)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 14,\n});\n\nexport const WrapperUserForm = styled('div')({\n  padding: '19px 0 40px 0',\n});\n\nexport const WrapperRadio = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'flex-end',\n  gap: 5,\n});\nexport const WrapperForBloodAndSex = styled('div')({\n  display: 'flex',\n  gap: 9,\n});\nexport const ButtonSave = styled('button')({\n  width: 115,\n  height: 42,\n  padding: '12px 40px',\n  borderRadius: 12,\n  background: ' var(--orange-color)',\n  color: ' rgba(239, 237, 232, 0.60)',\n  fontSize: 16,\n  fontWeight: 500,\n  lineHeight: 1.125,\n  '@media screen and (min-width:768px)': {\n    width: 144,\n    height: 56,\n    padding: '16px 50px',\n    fontSize: 20,\n    lineHeight: 1.2,\n  },\n});\n","import * as yup from 'yup';\n\nconst userFormSchema = yup.object().shape({\n  name: yup.string().min(2).required(),\n  email: yup.string().email(),\n  height: yup.number().min(150).max(250).required(),\n  currentWeight: yup.number().min(35).max(200).required(),\n  desiredWeight: yup.number().min(35).max(150).required(),\n  birthday: yup.date().required(),\n  blood: yup\n    .number()\n    .oneOf([1, 2, 3, 4], 'Selecting the blood field is required')\n    .required(),\n  sex: yup\n    .string()\n    .oneOf(['male', 'female'], 'Selecting the blood field is required')\n    .required(),\n  levelActivity: yup\n    .number()\n    .oneOf([1, 2, 3, 4, 5], 'Selecting the level activity field is required')\n    .required(),\n});\nexport default userFormSchema;\n","import styled from 'styled-components';\n\nexport const CustomLabelStyled = styled('label')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 4,\n  marginBottom: 4,\n  color: ' rgba(239, 237, 232, 0.50)',\n\n  fontSize: 12,\n  fontWeight: 400,\n  lineHeight: 1.5,\n});\n\nexport const CustomInputStyled = styled('input')({\n  color: 'var(--white-color)',\n\n  fontSize: 14,\n  lineHeight: 1.286,\n  padding: 14,\n  borderRadius: 12,\n  border: '1px solid rgba(239, 237, 232, 0.30)',\n  backgroundColor: 'inherit',\n  outline: 'none',\n  '&.disabled': {\n    color: 'rgba(239, 237, 232, 0.60)',\n  },\n  '&.input-form': {\n    width: 160,\n  },\n  '&:focus': {\n    border: '1px solid var(--orange-color)',\n  },\n  '&&.input-error': {\n    border: '1px solid var(--error-color)',\n  },\n  // '&.input-success': {\n  //   border: '1px solid var(--success-color)',\n  // },\n});\n\nexport const WrapperInput = styled('div')({\n  display: 'flex',\n  flexWrap: 'wrap',\n  gap: 14,\n  justifyContent: 'space-around',\n});\nexport const WrapperError = styled('div')({\n  width: 160,\n  color: 'var(--error-color)',\n});\n","import { useField } from 'formik';\nimport {\n  CustomInputStyled,\n  CustomLabelStyled,\n  WrapperError,\n} from './CustomInput.styled';\n\nconst CustomInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <CustomLabelStyled>\n      {label}\n      <CustomInputStyled\n        {...field}\n        {...props}\n        className={meta.error && meta.touched ? 'input-error' : ''}\n        {...props}\n      />\n      {meta.error && meta.touched ? (\n        <WrapperError className=\"error\">{meta.error}</WrapperError>\n      ) : (\n        ''\n      )}\n    </CustomLabelStyled>\n  );\n};\nexport default CustomInput;\n","import styled from 'styled-components';\n\nexport const RadioInput = styled('input')({\n  marginRight: 9,\n  '-webkit-appearance': 'none',\n  width: 18,\n  height: 18,\n  borderRadius: '50%',\n  background: 'inherit',\n  border: ' 2px solid #636366',\n  '&:checked': {\n    background: 'var(--light-orange-color)',\n    outline: ' 2px solid var(--light-orange-color)',\n    border: '4px solid var(--black-color)',\n  },\n});\nexport const RadioLabel = styled('label')({\n  fontSize: 16,\n  fontWeight: 400,\n  lineHeight: 1.5,\n});\n","import { useField } from 'formik';\nimport { RadioInput, RadioLabel } from './CustomRadio.styled';\n\nconst CustomRadio = ({ label, ...props }) => {\n  const [field] = useField(props);\n  // console.log(field);\n  // console.log('meta', meta);\n  return (\n    <div>\n      <RadioLabel>\n        <RadioInput {...field} {...props} />\n        {label}\n      </RadioLabel>\n    </div>\n  );\n};\nexport default CustomRadio;\n","import { Formik } from 'formik';\nimport {\n  ButtonSave,\n  FormStyled,\n  WrapperForBloodAndSex,\n  WrapperRadio,\n  WrapperUserForm,\n} from './UserForm.styled';\nimport userFormSchema from './schemas/userFormSchema';\nimport CustomInput from './CustomInput';\nimport CustomRadio from './CustomRadio';\nimport { CustomLabelStyled, WrapperInput } from './CustomInput.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { refreshThunk, setProfileSettingsThunk } from '../../redux/auth/thunks';\nimport Calendar from 'components/Calendar/Calendar';\n\n\nconst UserForm = () => {\n  const { user } = useSelector(state => state.auth);\n  const dispatch = useDispatch()\n  const [userData, setUser] = useState({\n    ...user,\n    blood: String(user.blood),\n    levelActivity: String(user.levelActivity),\n  });\n  const onSubmit = async (values, actions) => {\n    console.log('values', values);\n    const { email, ...rest } = values;\n    const { payload } = await dispatch(setProfileSettingsThunk(rest));\n    dispatch(refreshThunk());\n    setUser(payload);\n  };\n  \n  // const user = useSelector(state => state.auth.user);\n  // console.log(user, 'USERForm КОНСОЛЬ ДЛЯ ПЕРЕВІРКИ ЖИВОЇ СТОРІНКИ');\n  const {\n    name,\n    email,\n    height,\n    currentWeight,\n    desiredWeight,\n    birthday,\n    blood,\n    sex,\n    levelActivity,\n  } = userData;\n\n  return (\n    <WrapperUserForm>\n      <Formik\n        initialValues={{\n          name,\n          email,\n          height: height ? height : 0,\n          currentWeight: currentWeight ? currentWeight : 0,\n          desiredWeight: desiredWeight ? desiredWeight : 0,\n          birthday: birthday ? birthday : new Date(),\n          blood: blood ? blood : '',\n          sex: sex ? sex : '',\n          levelActivity: levelActivity ? levelActivity : '',\n        }}\n        validationSchema={userFormSchema}\n        onSubmit={onSubmit}\n      >\n        {() => (\n          <FormStyled autoComplete=\"off\">\n            <CustomInput label=\"Name\" name=\"name\" type=\"text\" />\n            <CustomInput\n              className=\"disabled\"\n              // disabled\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"annarybachok@gmail.com\"\n            />\n            <WrapperInput>\n              <CustomInput\n                className=\"input-form\"\n                label=\"Height\"\n                name=\"height\"\n                type=\"number\"\n              />\n              <CustomInput\n                className=\"input-form\"\n                label=\"Current Weight\"\n                name=\"currentWeight\"\n                type=\"number\"\n              />\n              <CustomInput\n                className=\"input-form\"\n                label=\"Desired Weight\"\n                name=\"desiredWeight\"\n                type=\"number\"\n              />\n              <Calendar name=\"birthday\" />\n            </WrapperInput>\n            <WrapperRadio>\n              <div id=\"radio-blood\">\n                <CustomLabelStyled>Blood</CustomLabelStyled>\n                <WrapperForBloodAndSex\n                  role=\"group\"\n                  aria-labelledby=\"radio-blood\"\n                >\n                  <CustomRadio\n                    className=\"styled-radio\"\n                    label=\"1\"\n                    type=\"radio\"\n                    name=\"blood\"\n                    value=\"1\"\n                  ></CustomRadio>\n                  <CustomRadio\n                    label=\"2\"\n                    type=\"radio\"\n                    name=\"blood\"\n                    value=\"2\"\n                  ></CustomRadio>\n                  <CustomRadio\n                    label=\"3\"\n                    type=\"radio\"\n                    name=\"blood\"\n                    value=\"3\"\n                  ></CustomRadio>\n                  <CustomRadio\n                    label=\"4\"\n                    type=\"radio\"\n                    name=\"blood\"\n                    value=\"4\"\n                  ></CustomRadio>\n                </WrapperForBloodAndSex>\n              </div>\n              <div id=\"radio-sex\">\n                <WrapperForBloodAndSex role=\"group\" aria-labelledby=\"radio-sex\">\n                  <CustomRadio\n                    label=\"Male\"\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"male\"\n                  ></CustomRadio>\n                  <CustomRadio\n                    label=\"Female\"\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"female\"\n                  ></CustomRadio>\n                </WrapperForBloodAndSex>\n              </div>\n            </WrapperRadio>\n            <div id=\"radio-level-activity\"></div>\n            <div\n              role=\"group\"\n              aria-labelledby=\"radio-level-activity\"\n              style={{ marginBottom: 30 }}\n            >\n              <CustomRadio\n                label=\"Sedentary lifestyle (little or no physical activity)\"\n                type=\"radio\"\n                name=\"levelActivity\"\n                value=\"1\"\n              ></CustomRadio>\n              <CustomRadio\n                label=\"Light activity (light exercises/sports 1-3 days per week)\"\n                type=\"radio\"\n                name=\"levelActivity\"\n                value=\"2\"\n              ></CustomRadio>\n              <CustomRadio\n                label=\"Moderately active (moderate exercises/sports 3-5 days per week)\"\n                type=\"radio\"\n                name=\"levelActivity\"\n                value=\"3\"\n              ></CustomRadio>\n              <CustomRadio\n                label=\"Very active (intense exercises/sports 6-7 days per week)\"\n                type=\"radio\"\n                name=\"levelActivity\"\n                value=\"4\"\n              ></CustomRadio>\n              <CustomRadio\n                label=\"Extremely active (very strenuous exercises/sports and physical work)\"\n                type=\"radio\"\n                name=\"levelActivity\"\n                value=\"5\"\n              ></CustomRadio>\n            </div>\n            <ButtonSave type=\"submit\">Save</ButtonSave>\n          </FormStyled>\n        )}\n      </Formik>\n    </WrapperUserForm>\n  );\n};\nexport default UserForm;\n","import styled from 'styled-components';\n\nexport const WrapperProfilePage = styled('div')({\n  '@media screen and (min-width:1440px)': {\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-between',\n  },\n});\n","import React from 'react';\nimport { Container } from 'components/styles/Container/Container';\nimport TitlePage from 'components/TitlePage/TitlePage';\nimport UserCard from 'components/UserCard/UserCard';\nimport UserForm from 'components/UserForm/UserForm';\nimport { WrapperProfilePage } from './ProfilePage.styled';\n\nconst ProfilePage = () => {\n  return (\n    <Container>\n      <TitlePage>Profile Settings</TitlePage>\n      <WrapperProfilePage>\n        <UserCard />\n        <UserForm />\n      </WrapperProfilePage>\n    </Container>\n  );\n};\n\nexport default ProfilePage;\n"],"names":["IconSvg","styled","_templateObject","_taggedTemplateLiteral","CalendarGlobalStyles","createGlobalStyle","_templateObject2","InputField","_templateObject3","_ref","name","selectedDate","setSelectedDate","useState","field","setValue","useField","useEffect","handleDateChange","Date","value","async","date","console","log","_jsx","_Fragment","children","_jsxs","style","width","position","height","href","concat","sprite","DatePicker","selected","onChange","customInput","cursor","dateFormat","calendarStartDay","formatWeekDay","day","substring","placeholderText","TitleH1Styled","Container","WrapperUser","display","flexDirection","alignItems","gap","margin","textAlign","WrapperAvatar","justifyContent","border","borderRadius","Title2","color","fontSize","fontWeight","lineHeight","TextUser","marginTop","WrapperSVGText","minWidth","maxWidth","TextItemUser","UserCardListStyled","marginBottom","UserCardItemStyled","flexWrap","padding","backgroundColor","WrapperSVG","TextInfoUser","paddingBottom","ButtonWrapper","ButtonAddAvatar","bottom","svg","UserCard","dispatch","useDispatch","result","useSelector","state","auth","user","xmlns","viewBox","fill","d","fillOpacity","xlinkHref","className","bmr","LogoutBtn","type","onClick","handleLogOut","logoutThunk","FormStyled","Form","WrapperUserForm","WrapperRadio","WrapperForBloodAndSex","ButtonSave","background","yup","shape","min","required","email","max","currentWeight","desiredWeight","birthday","blood","oneOf","sex","levelActivity","CustomLabelStyled","CustomInputStyled","outline","WrapperInput","WrapperError","label","props","meta","error","touched","RadioInput","marginRight","RadioLabel","UserForm","userData","setUser","String","Formik","initialValues","validationSchema","userFormSchema","onSubmit","values","actions","rest","payload","setProfileSettingsThunk","refreshThunk","autoComplete","CustomInput","placeholder","Calendar","id","role","CustomRadio","WrapperProfilePage","ProfilePage","TitlePage"],"sourceRoot":""}