{"version":3,"file":"static/js/726.9321e41c.chunk.js","mappings":"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","sources":["components/Calendar/Calendar.styled.jsx","components/Calendar/Calendar.jsx","components/TitlePage/TitlePage.styled.jsx","components/styles/Container/Container.jsx","components/TitlePage/TitlePage.jsx","components/UserCard/UserCard.styled.js","components/UserCard/UserCard.jsx","components/UserForm/UserForm.styled.js","components/UserForm/schemas/userFormSchema.js","components/UserForm/CustomInput.styled.js","components/UserForm/CustomInput.jsx","components/UserForm/CustomRadio.styled.js","components/UserForm/CustomRadio.jsx","components/UserForm/UserForm.jsx","pages/ProfilePage/ProfilePage.styled.js","pages/ProfilePage/ProfilePage.jsx"],"sourcesContent":["// import { createGlobalStyle, styled } from 'styled-components';\n\n// export const IconSvg = styled.svg`\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n// `;\n\n// // export const CalendarGlobalStyles = createGlobalStyle`\n// //  .react-datepicker__wrapper {\n// //     position: relative;\n\n// //   }\n// //   .react-datepicker {\n// //     position: absolute;\n// //     left: -20px;\n// //     top: 50%;\n// //     transform: translate(-15%, 0%);\n// //     display: flex;\n// //     flex-direction: column;\n// //     align-items: center;\n// //     padding: 14px;\n// //     background-color: #ef8964;\n// //     font-family: 'Roboto', sans-serif;\n// //     border-radius: 8px;\n// //   }\n// //   .react-datepicker__month-container {\n// //     float: inherit;\n// //     box-sizing: border-box;\n// //   }\n// //   .react-datepicker__day-names {\n// //     display: flex;\n// //     justify-content: space-between;\n// //     align-items: center;\n// //     padding-top: 14px;\n// //     margin-bottom: 8px;\n// //     border-top: 1px solid rgba(239, 237, 232, 0.2);\n// //   }\n// //   .react-datepicker__header {\n// //     position: relative;\n// //     background-color: #ef8964;\n// //   }\n\n// //   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n// //     border-bottom: 0px;\n// //     padding: 0;\n// //   }\n// //   .react-datepicker__day\n// //     react-datepicker__day--018.react-datepicker__day--selected\n// //     react-datepicker__day--today {\n// //     outline: none;\n// //     border: none;\n// //   }\n// //   .react-datepicker__current-month {\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 16px;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //     margin-bottom: 14px;\n// //   }\n// //   .react-datepicker__day-name {\n// //     margin: 0;\n// //     color: rgba(239, 237, 232, 0.5);\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-style: normal;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //   }\n\n// //   .react-datepicker__day--disabled {\n// //     opacity: 25%;\n// //   }\n// //   .react-datepicker__navigation {\n// //     margin-top: 14px;\n// //     color: white;\n// //   }\n// //   .react-datepicker__navigation--previous {\n// //     left: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation--next {\n// //     right: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation-icon::before:hover:focus {\n// //     border-color: white;\n// //   }\n// //   .react-datepicker__week {\n// //     display: flex;\n// //     align-items: center;\n// //     justify-content: space-between;\n// //     color: white;\n// //   }\n// //   .react-datepicker__day {\n// //     display: flex;\n// //     flex-direction: column;\n// //     justify-content: center;\n// //     align-items: center;\n// //     flex-shrink: 0;\n// //     margin: 0;\n// //     border-radius: 50%;\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-weight: 400;\n// //     line-height: 18px;\n// //     text-align: center;\n// //     width: 24px;\n// //     height: 24px;\n// //   }\n// //   .react-datepicker__month {\n// //     display: flex;\n// //     gap: 5px;\n// //     flex-direction: column;\n// //     justify-content: space-between;\n// //     margin: 0;\n// //   }\n// //   .react-datepicker__day--selected {\n// //     background-color: #040404;\n// //     color: #efede8;\n// //     font-size: 14px;\n// //   }\n// //   .react-datepicker__day--selected:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //   }\n// //   .react-datepicker__day:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--keyboard-selected {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--outside-month {\n// //     opacity: 50%;\n// //   }\n// //   .react-datepicker__triangle {\n// //     display: none;\n// //   }\n// // `;\n// export const CalendarGlobalStyles = createGlobalStyle`\n//   .react-datepicker__wrapper {\n//     position: relative;\n\n//   }\n//   .react-datepicker {\n//     position: absolute;\n//     left: 50%;\n//     top: 50%;\n//     transform: translate(-1%, 0%);\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     width: 327px;\n//     height: 354px;\n//     padding: 9px 18px;\n//   background-color: #3e85f3;\n//     font-family: Inter;\n//     border-radius: 16px;\n//   }\n//   .react-datepicker__month-container {\n//     float: inherit;\n//     box-sizing: border-box;\n//   }\n//   .react-datepicker__header {\n//     position: relative;\n//     background-color: #3e85f3;\n//   }\n//   .react-datepicker__day-names {\n//     display: flex;\n//     justify-content: space-between;\n//     align-items: center;\n//     padding: 8px 8px;\n//     border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n//   }\n//   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n//     border-bottom: 0px;\n//     padding: 0;\n//   }\n//   .react-datepicker__day react-datepicker__day--018.react-datepicker__day--selected react-datepicker__day--today{\n//     outline: none;\n//     border: none;\n// }\n//   .react-datepicker__current-month {\n//     font-family: Inter;\n//     font-size: 20px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 24px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__day-name {\n//     margin: 0;\n//    padding: 8px 8px;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 18px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__navigation {\n//     margin-top: 24px;\n//     color: white;\n//   }\n//   .react-datepicker__navigation--previous {\n//     left: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation--next {\n//     right: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation-icon::before:hover:focus {\n//     border-color: white;\n//   }\n//   .react-datepicker__week {\n//     display: flex;\n//     align-items: center;\n//     justify-content: space-between;\n//     color: white;\n//   }\n//   .react-datepicker__day {\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: center;\n//     align-items: center;\n//     gap: 8px;\n//     flex-shrink: 0;\n//     margin: 0;\n//     width: 32px;\n//     height: 32px;\n//     border-radius: 50%;\n//     color: white;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 400;\n//     line-height: 18px;\n//     text-align: center;\n//   }\n//   .react-datepicker__month {\n//     display: flex;\n//     gap: 7px;\n//     flex-direction: column;\n//     justify-content: space-between;\n//     padding-top: 16px;\n//     margin: 0;\n//   }\n//   .react-datepicker__day--selected {\n//     background-color:white;\n//     color:#3e85f3;\n//     font-size: 14px;\n//   }\n//   .react-datepicker__day--selected:hover {\n//     border-radius: 50%;\n//   background-color:white;\n//   }\n//   .react-datepicker__day:hover {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--keyboard-selected {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--weekend {\n//     opacity: 50%;\n//   }\n// .react-datepicker__day--outside-month {\n//     background-color: transparent;\n//     pointer-events: none;\n//     opacity: 0;\n//   }\n//   .react-datepicker__view-calendar-icon input {\n//     padding: 6px 10px 5px 13px;\n//   }\n//   .react-datepicker__triangle {\n//     visibility: hidden;\n//   }\n// `;\n\n// export const TitleWrapper = styled.button`\n//   width: 195px;\n//   color: #ffffff;\n//   background: #3e85f3;\n//   border-radius: 8px;\n//   font-weight: 700;\n//   line-height: 18px;\n//   text-align: center;\n//   text-transform: uppercase;\n//   padding: 8px 12px;\n//   font-size: 16px;\n//   justify-content: space-around;\n//   align-items: center;\n// `;\n\n//-------------------------------\nimport { createGlobalStyle, styled } from 'styled-components';\n\nexport const IconSvg = styled.svg`\n  position: absolute;\n  top: 36px;\n  right: 14px;\n`;\n\nexport const CalendarGlobalStyles = createGlobalStyle`\n .react-datepicker__wrapper {\n    position: relative;\n    \n  }\n  .react-datepicker {\n    position: absolute;\n    left: -20px;\n    top: 50%;\n    transform: translate(-15%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;    \n    padding: 14px;\n    background-color: #ef8964;\n    font-family: 'Roboto', sans-serif;\n    border-radius: 8px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 14px;\n    margin-bottom: 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;    \n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: normal;\n    margin-bottom: 14px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    color: rgba(239, 237, 232, 0.5);\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n\n  .react-datepicker__day--disabled {\n    opacity: 25%;\n  }\n  .react-datepicker__navigation {\n    margin-top: 14px;\n    color: white;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: white;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin: 0;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n    width: 24px;\n    height: 24px;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efede8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: white;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--outside-month {\n    opacity: 50%;\n  }\n  .react-datepicker__triangle {\n    display: none;\n  }\n`;\n\nexport const InputField = styled.input`\n  width: 100%;\n  padding: 14px;\n  align-items: center;\n  gap: 10px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  background-color: transparent;\n  color: #efede8;\n\n  &:hover {\n    border-color: #e6533c; /* Змінюємо колір бордера на червоний при ховері */\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { CalendarGlobalStyles, IconSvg, InputField } from './Calendar.styled';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nimport sprite from '../../images/sprite.svg';\nimport { useState, useEffect } from 'react';\nimport { useField } from 'formik';\n\nconst Calendar = ({ name }) => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [field, , { setValue }] = useField(name);\n  useEffect(() => {\n    handleDateChange(new Date(field.value));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDateChange = async date => {\n    setSelectedDate(date);\n    setValue(date);\n    console.log(field);\n  };\n  return (\n    <>\n      <div style={{ width: 150, position: 'relative', paddingTop: 22 }}>\n        <IconSvg width=\"18\" height=\"18\">\n          <use href={`${sprite}#icon-calendar-white`}></use>\n        </IconSvg>\n\n        <DatePicker\n          {...field}\n          selected={selectedDate}\n          onChange={handleDateChange}\n          customInput={<InputField name={name} style={{ cursor: 'pointer' }} />}\n          dateFormat={'dd/MM/yyyy'}\n          calendarStartDay={1}\n          formatWeekDay={day => day.substring(0, 1)}\n          placeholderText={selectedDate === null ? 'Birthday' : null}\n        />\n\n        <CalendarGlobalStyles />\n      </div>\n    </>\n  );\n};\n\nexport default Calendar;\n","import styled from 'styled-components';\n\nexport const TitleH1Styled = styled.h1`\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.17;\n  padding-top: 40px;\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n    line-height: 1.375;\n    padding-top: 72px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 96px;\n    padding-right: 96px;\n  }\n`;\n","import { TitleH1Styled } from './TitlePage.styled';\nconst TitlePage = ({ children }) => {\n  return <TitleH1Styled>{children}</TitleH1Styled>;\n};\nexport default TitlePage;\n","import styled from 'styled-components';\n\nexport const WrapperUser = styled('div')({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  gap: 31,\n  margin: '40px 0',\n  textAlign: 'center',\n});\nexport const WrapperAvatar = styled('label')({\n  position: 'relative',\n\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  border: '1px solid var(--orange-color)',\n  borderRadius: '50%',\n  width: 90,\n  height: 90,\n  '@media screen and (min-width: 768px)': {\n    width: 150,\n    height: 150,\n  },\n\n  '&>form>input': {\n    width: 90,\n    height: 90,\n    borderRadius: '50%',\n    position: 'absolute',\n    top: '-1px',\n    left: '-1px',\n    border: '1px solid var(--orange-color)',\n    '@media screen and (min-width: 768px)': {\n      width: 150,\n      height: 150,\n    },\n  },\n});\n\nexport const Title2 = styled('h2')({\n  color: 'rgba(239, 237, 232, 1)',\n  fontSize: 18,\n  fontWeight: 400,\n  lineHeight: 1.11,\n  '@media screen and (min-width: 768px)': {\n    fontSize: 24,\n    lineHeight: 1.17,\n  },\n});\nexport const TextUser = styled('p')({\n  marginTop: 4,\n  color: 'rgba(239, 237, 232, 0.50)',\n  fontSize: 14,\n  fontWeight: 400,\n  lineHeight: 1.29,\n  '@media screen and (min-width: 768px)': {\n    marginTop: 8,\n  },\n});\nexport const WrapperSVGText = styled('div')({\n  margin: '0 auto',\n  minWidth: 129,\n  maxWidth: 390,\n  display: 'flex',\n  gap: 8,\n});\nexport const TextItemUser = styled('p')({\n  color: 'rgba(239, 237, 232, 0.80)',\n  fontSize: 12,\n  fontWeight: 400,\n  lineHeight: 1.33,\n  '@media screen and (min-width: 768px)': {\n    lineHeight: 1.5,\n  },\n});\nexport const UserCardListStyled = styled('ul')({\n  display: 'flex',\n  justifyContent: 'center',\n  gap: 14,\n  marginBottom: 40,\n  '@media screen and (min-width: 768px)': {\n    gap: 16,\n  },\n});\nexport const UserCardItemStyled = styled('li')({\n  minWidth: 129,\n  display: 'flex',\n  flexWrap: 'wrap',\n  flexDirection: 'column',\n  justifyContent: 'space-between',\n  gap: 16,\n  padding: 14,\n\n  backgroundColor: 'var(--orange-color)',\n  borderRadius: 12,\n  border: '1px solid rgba(239, 237, 232, 0.20)',\n  '@media screen and (min-width: 768px)': {\n    padding: 18,\n  },\n});\nexport const WrapperSVG = styled('div')({\n  width: 24,\n  height: 24,\n  borderRadius: '50%',\n  backgroundColor: 'var(--beige-color)',\n});\nexport const TextInfoUser = styled('p')({\n  color: 'rgba(239, 237, 232, 0.30)',\n  fontSize: 14,\n  fontWeight: 400,\n  lineHeight: 1.29,\n  paddingBottom: 41,\n  '@media screen and (min-width: 768)': {\n    fontSize: 16,\n    lineHeight: 1.5,\n    paddingBottom: 32,\n  },\n});\nexport const ButtonWrapper = styled('div')({\n  display: 'flex',\n  justifyContent: 'flex-end',\n});\n\nexport const ButtonAddAvatar = styled('label')({\n  backgroundColor: 'transparent',\n  position: 'absolute',\n  bottom: '-17%',\n  left: '34px',\n  '@media screen and (min-width: 768px)': {\n    bottom: '-21px',\n    left: 57,\n    svg: {\n      width: 32,\n      height: 32,\n    },\n  },\n});\n","import {\n  ButtonAddAvatar,\n  ButtonWrapper,\n  TextInfoUser,\n  TextItemUser,\n  TextUser,\n  Title2,\n  UserCardItemStyled,\n  UserCardListStyled,\n  WrapperAvatar,\n  WrapperSVG,\n  WrapperSVGText,\n  WrapperUser,\n} from './UserCard.styled';\nimport sprite from '../../images/sprite.svg';\nimport { LogoutBtn } from 'components/UserMenu/UserMenu.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logoutThunk, updateAvatarThunk } from '../../redux/auth/thunks';\nimport { useState } from 'react';\n\nconst UserCard = () => {\n  const dispatch = useDispatch();\n  const result = useSelector(state => state.auth.user);\n  const [avatar, setAvatar] = useState(result.avatarURL);\n\n  const handleFileInput = event => {\n    const file = event.target.files[0];\n    setAvatar(file);\n    if (file) {\n      const blob = new Blob([file]);\n      const objectURL = URL.createObjectURL(blob);\n      setAvatar(objectURL);\n    }\n    try {\n      dispatch(updateAvatarThunk(file));\n    } catch (error) {\n      console.error('Error loading the file', error);\n    }\n  };\n\n  const handleLogOut = () => dispatch(logoutThunk());\n\n  return (\n    <div>\n      <WrapperUser>\n        <WrapperAvatar>\n          <form>\n            {avatar ? (\n              <input type=\"image\" src={avatar} alt=\"Submit image\" />\n            ) : (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"41\"\n                height=\"42\"\n                viewBox=\"0 0 41 42\"\n                fill=\"none\"\n              >\n                <path\n                  d=\"M20.5013 0.333374C23.1977 0.333374 25.7836 1.42206 27.6902 3.35994C29.5969 5.29782 30.668 7.92614 30.668 10.6667C30.668 13.4073 29.5969 16.0356 27.6902 17.9735C25.7836 19.9114 23.1977 21.0001 20.5013 21.0001C17.8049 21.0001 15.219 19.9114 13.3124 17.9735C11.4058 16.0356 10.3346 13.4073 10.3346 10.6667C10.3346 7.92614 11.4058 5.29782 13.3124 3.35994C15.219 1.42206 17.8049 0.333374 20.5013 0.333374ZM20.5013 41.6667C20.5013 41.6667 40.8347 41.6667 40.8347 36.5001C40.8347 30.3001 30.9222 23.5834 20.5013 23.5834C10.0805 23.5834 0.167969 30.3001 0.167969 36.5001C0.167969 41.6667 20.5013 41.6667 20.5013 41.6667Z\"\n                  fill=\"#EFEDE8\"\n                  fillOpacity=\"0.1\"\n                />\n              </svg>\n            )}\n            <ButtonAddAvatar htmlFor=\"avatar\">\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-add-avatar`} />\n              </svg>\n\n              <input\n                id=\"avatar\"\n                type=\"file\"\n                onChange={handleFileInput}\n                style={{ display: 'none' }}\n              />\n            </ButtonAddAvatar>\n          </form>\n        </WrapperAvatar>\n\n        <div>\n          <Title2>{result.name}</Title2>\n          <TextUser>User</TextUser>\n        </div>\n      </WrapperUser>\n      <UserCardListStyled>\n        <UserCardItemStyled>\n          <WrapperSVGText>\n            <svg width={20} height={20}>\n              <use xlinkHref={`${sprite}#icon-fork-knife`} />\n            </svg>\n            <TextItemUser>Daily calorie intake</TextItemUser>\n          </WrapperSVGText>\n          <Title2 className=\"number\">{result.bmr}</Title2>\n        </UserCardItemStyled>\n        <UserCardItemStyled>\n          <WrapperSVGText>\n            <svg width={20} height={20}>\n              <use xlinkHref={`${sprite}#icon-dumbbell`} />\n            </svg>\n            <TextItemUser>Daily physical activity</TextItemUser>\n          </WrapperSVGText>\n          <Title2 className=\"number\">{result ? '110 min' : '0 min'}</Title2>\n        </UserCardItemStyled>\n      </UserCardListStyled>\n      <WrapperSVGText>\n        <WrapperSVG>\n          <svg width={24} height={24}>\n            <use xlinkHref={`${sprite}#icon-attention`} />\n          </svg>\n        </WrapperSVG>\n\n        <TextInfoUser>\n          We understand that each individual is unique, so the entire approach\n          to diet is relative and tailored to your unique body and goals.\n        </TextInfoUser>\n      </WrapperSVGText>\n      <ButtonWrapper>\n        <LogoutBtn\n          style={{ display: 'flex' }}\n          type=\"button\"\n          onClick={handleLogOut}\n        >\n          <span>Logout</span>\n          <svg>\n            <use href={`${sprite}#icon-log-out`}></use>\n          </svg>\n        </LogoutBtn>\n      </ButtonWrapper>\n    </div>\n  );\n};\nexport default UserCard;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const FormStyled = styled(Form)({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 14,\n});\n\nexport const WrapperUserForm = styled('div')({\n  padding: '19px 0 40px 0',\n});\n\nexport const WrapperRadio = styled('div')({\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-between',\n  alignItems: 'flex-end',\n  gap: 5,\n});\nexport const WrapperForBloodAndSex = styled('div')({\n  display: 'flex',\n  gap: 9,\n});\nexport const ButtonSave = styled('button')({\n  width: 115,\n  height: 42,\n  padding: '12px 40px',\n  borderRadius: 12,\n  background: ' var(--orange-color)',\n  color: 'inherit',\n  // color: ' rgba(239, 237, 232, 0.60)',\n  fontSize: 16,\n  fontWeight: 500,\n  lineHeight: 1.125,\n  '&[disabled]': {\n    color: ' rgba(239, 237, 232, 0.60)',\n  },\n  '@media screen and (min-width:768px)': {\n    width: 144,\n    height: 56,\n    padding: '16px 50px',\n    fontSize: 20,\n    lineHeight: 1.2,\n  },\n});\n","import * as yup from 'yup';\n\nconst userFormSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name must be min 2 characters long')\n    .required('Required'),\n  height: yup\n    .number()\n    .min(150, 'Min height must be 150 cm')\n    .max(250, 'Min height must be 250 cm')\n    .required('Required'),\n  currentWeight: yup\n    .number()\n    .min(35, 'Min weight must be 35 kg')\n    .max(200, 'Max weight must be 200 kg')\n    .required('Required'),\n  desiredWeight: yup\n    .number()\n    .min(35, 'Min weight must be 35 kg')\n    .max(150, 'Min weight must be 150 kg')\n    .required('Required'),\n  birthday: yup.date().required('Required'),\n  blood: yup\n    .number()\n    .oneOf([1, 2, 3, 4], 'Selecting the blood field is required')\n    .required('Required'),\n  sex: yup\n    .string()\n    .oneOf(['male', 'female'], 'Selecting the blood field is required')\n    .required('Required'),\n  levelActivity: yup\n    .number()\n    .oneOf([1, 2, 3, 4, 5], 'Selecting the level activity field is required')\n    .required('Required'),\n});\nexport default userFormSchema;\n","import styled from 'styled-components';\n\nexport const CustomLabelStyled = styled('label')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 4,\n  marginBottom: 4,\n  color: ' rgba(239, 237, 232, 0.50)',\n\n  fontSize: 12,\n  fontWeight: 400,\n  lineHeight: 1.5,\n});\n\nexport const CustomInputStyled = styled('input')({\n  color: 'var(--white-color)',\n\n  fontSize: 14,\n  lineHeight: 1.286,\n  padding: 14,\n  borderRadius: 12,\n  border: '1px solid rgba(239, 237, 232, 0.30)',\n  backgroundColor: 'inherit',\n  outline: 'none',\n  '&.disabled': {\n    color: 'rgba(239, 237, 232, 0.60)',\n  },\n  '&.input-form': {\n    maxWidth: 160,\n  },\n  '&:focus': {\n    border: '1px solid var(--orange-color)',\n  },\n  '&&.input-error': {\n    border: '1px solid var(--error-color)',\n  },\n  '&&.input-success': {\n    border: '1px solid var(--success-color)',\n  },\n});\n\nexport const WrapperInput = styled('div')({\n  display: 'flex',\n  flexWrap: 'wrap',\n  gap: 14,\n  justifyContent: 'space-around',\n});\n\nexport const WrapperInfo = styled('div')({\n  width: 160,\n\n  '&.error': {\n    color: 'var(--error-color)',\n  },\n  '&.success': {\n    color: 'var(--success-color)',\n  },\n});\n","import { useField } from 'formik';\nimport {\n  CustomInputStyled,\n  CustomLabelStyled,\n  WrapperInfo,\n} from './CustomInput.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst CustomInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <CustomLabelStyled>\n      {label}\n      <CustomInputStyled\n        {...field}\n        {...props}\n        className={\n          meta.error && meta.touched\n            ? 'input-error'\n            : meta.touched && !meta.error\n            ? 'input-success'\n            : ''\n        }\n        {...props}\n      />\n      {meta.error && meta.touched ? (\n        <WrapperInfo className=\"error\">\n          <div style={{ display: 'flex', gap: 1 }}>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n              <use href={`${sprite}#icon-red`} />\n            </svg>\n            {meta.error}\n          </div>\n        </WrapperInfo>\n      ) : meta.touched && !meta.error ? (\n        <WrapperInfo className=\"success\">\n          <div style={{ display: 'flex', gap: 1 }}>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n              <use href={`${sprite}#icon-checkbox-circle-fill`} />\n            </svg>\n            Success\n          </div>\n        </WrapperInfo>\n      ) : (\n        ''\n      )}\n    </CustomLabelStyled>\n  );\n};\nexport default CustomInput;\n","import styled from 'styled-components';\n\nexport const RadioInput = styled('input')({\n  marginRight: 9,\n  '-webkit-appearance': 'none',\n  width: 18,\n  height: 18,\n  borderRadius: '50%',\n  background: 'inherit',\n  border: ' 2px solid #636366',\n  '&:checked': {\n    background: 'var(--light-orange-color)',\n    outline: ' 2px solid var(--light-orange-color)',\n    border: '4px solid var(--black-color)',\n  },\n});\nexport const RadioLabel = styled('label')({\n  fontSize: 16,\n  fontWeight: 400,\n  lineHeight: 1.5,\n});\n","import { useField } from 'formik';\nimport { RadioInput, RadioLabel } from './CustomRadio.styled';\n\nconst CustomRadio = ({ label, ...props }) => {\n  const [field] = useField(props);\n  // console.log(field);\n  // console.log('meta', meta);\n  return (\n    <div>\n      <RadioLabel>\n        <RadioInput {...field} {...props} />\n        {label}\n      </RadioLabel>\n    </div>\n  );\n};\nexport default CustomRadio;\n","import { Formik } from 'formik';\nimport {\n  ButtonSave,\n  FormStyled,\n  WrapperForBloodAndSex,\n  WrapperRadio,\n  WrapperUserForm,\n} from './UserForm.styled';\nimport userFormSchema from './schemas/userFormSchema';\nimport CustomInput from './CustomInput';\nimport CustomRadio from './CustomRadio';\nimport { CustomLabelStyled, WrapperInput } from './CustomInput.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { refreshThunk, setProfileSettingsThunk } from '../../redux/auth/thunks';\nimport Calendar from 'components/Calendar/Calendar';\n\nconst UserForm = () => {\n  const { user } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const [userData, setUser] = useState({\n    ...user,\n    blood: String(user.blood),\n    levelActivity: String(user.levelActivity),\n  });\n\n  const onSubmit = async (values, actions) => {\n    const { email, ...rest } = values;\n    const { payload } = await dispatch(setProfileSettingsThunk(rest));\n    dispatch(refreshThunk());\n    setUser(payload);\n  };\n\n  const {\n    name,\n    email,\n    height,\n    currentWeight,\n    desiredWeight,\n    birthday,\n    blood,\n    sex,\n    levelActivity,\n  } = userData;\n\n  return (\n    <WrapperUserForm>\n      <Formik\n        initialValues={{\n          name,\n          email,\n          height: height ? height : 0,\n          currentWeight: currentWeight ? currentWeight : 0,\n          desiredWeight: desiredWeight ? desiredWeight : 0,\n          birthday: birthday ? birthday : new Date(),\n          blood: blood ? blood : '',\n          sex: sex ? sex : '',\n          levelActivity: levelActivity ? levelActivity : '',\n        }}\n        validationSchema={userFormSchema}\n        onSubmit={onSubmit}\n      >\n        {({ values }) => (\n          <FormStyled autoComplete=\"off\">\n            <CustomInput label=\"Name\" name=\"name\" type=\"text\" />\n            <CustomInput\n              className=\"disabled\"\n              disabled\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"annarybachok@gmail.com\"\n            />\n            <WrapperInput>\n              <CustomInput\n                className=\"input-form\"\n                label=\"Height\"\n                name=\"height\"\n                type=\"number\"\n              />\n              <CustomInput\n                className=\"input-form\"\n                label=\"Current Weight\"\n                name=\"currentWeight\"\n                type=\"number\"\n              />\n              <CustomInput\n                className=\"input-form\"\n                label=\"Desired Weight\"\n                name=\"desiredWeight\"\n                type=\"number\"\n              />\n              <Calendar name=\"birthday\" style={{}} />\n            </WrapperInput>\n            <WrapperRadio>\n              <div id=\"radio-blood\">\n                <CustomLabelStyled>Blood</CustomLabelStyled>\n                <WrapperForBloodAndSex\n                  role=\"group\"\n                  aria-labelledby=\"radio-blood\"\n                >\n                  <CustomRadio\n                    className=\"styled-radio\"\n                    label=\"1\"\n                    type=\"radio\"\n                    name=\"blood\"\n                    value=\"1\"\n                  ></CustomRadio>\n                  <CustomRadio\n                    label=\"2\"\n                    type=\"radio\"\n                    name=\"blood\"\n                    value=\"2\"\n                  ></CustomRadio>\n                  <CustomRadio\n                    label=\"3\"\n                    type=\"radio\"\n                    name=\"blood\"\n                    value=\"3\"\n                  ></CustomRadio>\n                  <CustomRadio\n                    label=\"4\"\n                    type=\"radio\"\n                    name=\"blood\"\n                    value=\"4\"\n                  ></CustomRadio>\n                </WrapperForBloodAndSex>\n              </div>\n              <div id=\"radio-sex\">\n                <WrapperForBloodAndSex role=\"group\" aria-labelledby=\"radio-sex\">\n                  <CustomRadio\n                    label=\"Male\"\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"male\"\n                  ></CustomRadio>\n                  <CustomRadio\n                    label=\"Female\"\n                    type=\"radio\"\n                    name=\"sex\"\n                    value=\"female\"\n                  ></CustomRadio>\n                </WrapperForBloodAndSex>\n              </div>\n            </WrapperRadio>\n            <div id=\"radio-level-activity\"></div>\n            <div\n              role=\"group\"\n              aria-labelledby=\"radio-level-activity\"\n              style={{ marginBottom: 30 }}\n            >\n              <CustomRadio\n                label=\"Sedentary lifestyle (little or no physical activity)\"\n                type=\"radio\"\n                name=\"levelActivity\"\n                value=\"1\"\n              ></CustomRadio>\n              <CustomRadio\n                label=\"Light activity (light exercises/sports 1-3 days per week)\"\n                type=\"radio\"\n                name=\"levelActivity\"\n                value=\"2\"\n              ></CustomRadio>\n              <CustomRadio\n                label=\"Moderately active (moderate exercises/sports 3-5 days per week)\"\n                type=\"radio\"\n                name=\"levelActivity\"\n                value=\"3\"\n              ></CustomRadio>\n              <CustomRadio\n                label=\"Very active (intense exercises/sports 6-7 days per week)\"\n                type=\"radio\"\n                name=\"levelActivity\"\n                value=\"4\"\n              ></CustomRadio>\n              <CustomRadio\n                label=\"Extremely active (very strenuous exercises/sports and physical work)\"\n                type=\"radio\"\n                name=\"levelActivity\"\n                value=\"5\"\n              ></CustomRadio>\n            </div>\n            <ButtonSave\n              disabled={\n                JSON.stringify({\n                  name,\n                  email,\n                  height,\n                  currentWeight,\n                  desiredWeight,\n                  birthday: new Date(birthday),\n                  blood: String(blood),\n                  sex,\n                  levelActivity: String(levelActivity),\n                }) === JSON.stringify(values)\n              }\n              type=\"submit\"\n            >\n              Save\n            </ButtonSave>\n          </FormStyled>\n        )}\n      </Formik>\n    </WrapperUserForm>\n  );\n};\nexport default UserForm;\n","import styled from 'styled-components';\n\nexport const WrapperProfilePage = styled('div')({\n  '@media screen and (min-width:1440px)': {\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    justifyContent: 'space-between',\n  },\n});\n","import React from 'react';\nimport { Container } from 'components/styles/Container/Container';\nimport TitlePage from 'components/TitlePage/TitlePage';\nimport UserCard from 'components/UserCard/UserCard';\nimport UserForm from 'components/UserForm/UserForm';\nimport { WrapperProfilePage } from './ProfilePage.styled';\n\nconst ProfilePage = () => {\n  return (\n    <Container>\n      <TitlePage>Profile Settings</TitlePage>\n      <WrapperProfilePage>\n        <UserCard />\n        <UserForm />\n      </WrapperProfilePage>\n    </Container>\n  );\n};\n\nexport default ProfilePage;\n"],"names":["IconSvg","styled","_templateObject","_taggedTemplateLiteral","CalendarGlobalStyles","createGlobalStyle","_templateObject2","InputField","_templateObject3","_ref","name","selectedDate","setSelectedDate","useState","field","setValue","useField","useEffect","handleDateChange","Date","value","async","date","console","log","_jsx","_Fragment","children","_jsxs","style","width","position","paddingTop","height","href","concat","sprite","DatePicker","selected","onChange","customInput","cursor","dateFormat","calendarStartDay","formatWeekDay","day","substring","placeholderText","TitleH1Styled","Container","WrapperUser","display","flexDirection","alignItems","gap","margin","textAlign","WrapperAvatar","justifyContent","border","borderRadius","top","left","Title2","color","fontSize","fontWeight","lineHeight","TextUser","marginTop","WrapperSVGText","minWidth","maxWidth","TextItemUser","UserCardListStyled","marginBottom","UserCardItemStyled","flexWrap","padding","backgroundColor","WrapperSVG","TextInfoUser","paddingBottom","ButtonWrapper","ButtonAddAvatar","bottom","svg","UserCard","dispatch","useDispatch","result","useSelector","state","auth","user","avatar","setAvatar","avatarURL","type","src","alt","xmlns","viewBox","fill","d","fillOpacity","htmlFor","xlinkHref","id","event","file","target","files","blob","Blob","objectURL","URL","createObjectURL","updateAvatarThunk","error","className","bmr","LogoutBtn","onClick","handleLogOut","logoutThunk","FormStyled","Form","WrapperUserForm","WrapperRadio","WrapperForBloodAndSex","ButtonSave","background","yup","shape","min","required","max","currentWeight","desiredWeight","birthday","blood","oneOf","sex","levelActivity","CustomLabelStyled","CustomInputStyled","outline","WrapperInput","WrapperInfo","label","props","meta","touched","RadioInput","marginRight","RadioLabel","UserForm","userData","setUser","String","email","Formik","initialValues","validationSchema","userFormSchema","onSubmit","values","actions","rest","payload","setProfileSettingsThunk","refreshThunk","autoComplete","CustomInput","disabled","placeholder","Calendar","role","CustomRadio","JSON","stringify","WrapperProfilePage","ProfilePage","TitlePage"],"sourceRoot":""}