{"version":3,"file":"static/js/494.441785c3.chunk.js","mappings":"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","sources":["Forms/styled.js","components/StatisticsComponents/HigherBlocks/StatisticsHeight.styled.js","components/StatisticsComponents/HigherBlocks/StatisticsCal/StatisticsCal.jsx","components/StatisticsComponents/StatisticsInfoBlocks/StatisticsInfoBlocks.styled.js","components/StatisticsComponents/StatisticsInfoBlocks/StatisticsInfoBlocks.jsx","components/StatisticsComponents/WiderBlocks/StatisticsWide.styled.js","components/StatisticsComponents/WiderBlocks/StatisticsVideo/StatisticsVideo.jsx","components/StatisticsComponents/StatisticsInfo/StatisticsInfo.styled.js","components/StatisticsComponents/WiderBlocks/StatisticsUsers/StatisticsUsers.jsx","components/StatisticsComponents/WiderBlocks/StatisticsUsersExercises/StatisticsUsersExercises.jsx","components/StatisticsComponents/HigherBlocks/StatisticsHours/StatisticsHours.jsx","components/StatisticsComponents/StatisticsInfo/StatisticsInfo.jsx","components/TrainingBgWrapper/TrainingBgWrapper.styled.js","components/styles/Container/Container.jsx","schemas/RegisterSchema/index.jsx","Forms/Authentication/FormRegistration/index.jsx","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const AuthCont = styled('div')(() => {\n  return {\n    marginTop: '66px',\n    h1: {\n      fontFamily: 'RobotoBold',\n      fontSize: '24px',\n      lineHeight: 1.17,\n      marginBottom: '14px',\n    },\n    '.main-descr': {\n      fontFamily: 'RobotoRegular',\n      fontSize: '14px',\n      lineHeight: 1.29,\n      marginBottom: '28px',\n      opacity: '0.3',\n    },\n    input: {\n      fontFamily: 'RobotoRegular',\n      fontSize: '14px',\n      lineHeight: 1.29,\n      width: '100%',\n      height: '46px',\n      border: '1px solid rgba(239, 237, 232, 0.3)',\n      borderRadius: '12px',\n      backgroundColor: 'transparent',\n      color: 'var(--white-color)',\n      textIndent: '12px',\n      outline: 'none',\n      paddingTop: '2px',\n      transition: 'border-color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        borderColor: 'var(--orange-color)',\n      },\n    },\n    '.inputs-cont': {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '18px',\n      marginBottom: '28px',\n    },\n    '.eye-cont': {\n      position: 'relative',\n    },\n    '.eye-btn': {\n      position: 'absolute',\n      right: '10px',\n      top: '12px',\n      background: 'none',\n    },\n    '.eye': {\n      width: '20px',\n      height: '20px',\n    },\n    '.input-error': {\n      borderColor: 'var(--error-color)',\n    },\n    '.input-success': {\n      borderColor: 'var(--success-color)',\n    },\n    '.notify-cont': {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '4px',\n      marginTop: '4px',\n    },\n    '.notify-descr': {\n      fontFamily: 'RobotoRegular',\n      fontSize: '12px',\n      letterSpacing: '0.01em',\n    },\n    '.error': {\n      color: 'var(--error-color)',\n    },\n    '.success': {\n      color: 'var(--success-color)',\n    },\n    '.submit-btn': {\n      fontSize: '16px',\n      lineHeight: 1.12,\n      padding: '12px 40px',\n      color: 'var(--white-color)',\n      borderRadius: '12px',\n\n      marginBottom: '12px',\n      backgroundColor: 'var(--orange-color)',\n      transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        backgroundColor: 'var(--light-orange-color)',\n      },\n      '&:disabled': {\n        color: 'rgba(239, 237, 232, 0.6)',\n        cursor: 'not-allowed',\n      },\n    },\n    '.navigate-cont': {\n      display: 'flex',\n      fontSize: '12px',\n    },\n    '.navigate-descr': {\n      opacity: 0.6,\n    },\n    '.navigate-link': {\n      textDecoration: 'underline',\n      transition: 'color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        color: 'var(--light-orange-color)',\n      },\n    },\n    '@media screen and (min-width: 768px)': {\n      marginTop: '105px',\n      h1: {\n        fontSize: '32px',\n        lineHeight: 1.375,\n        marginBottom: '16px',\n      },\n      '.main-descr': {\n        width: '496px',\n        fontSize: '16px',\n        lineHeight: 1.5,\n        marginBottom: '32px',\n      },\n      input: {\n        fontSize: '16px',\n        lineHeight: 1.5,\n        width: '364px',\n        height: '52px',\n      },\n      '.inputs-cont': {\n        gap: '20px',\n        marginBottom: '64px',\n      },\n      '.eye-cont': {\n        width: 'fit-content',\n      },\n      '.eye-btn': {\n        top: '15px',\n      },\n      '.submit': {\n        fontSize: '20px',\n        lineHeight: 1.2,\n        padding: '16px 60px',\n      },\n      '.navigate-cont': {\n        marginLeft: '5px',\n      },\n    },\n    '@media screen and (min-width: 1440px)': {\n      marginTop: '116px',\n    },\n  };\n});\n","import { styled } from 'styled-components';\n\nexport const StatisticsHeightCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 83px;\n  gap: 4px;\n  .circle {\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    background-color: var(--beige-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .icon-svg {\n    width: 12px;\n    height: 12px;\n    fill: var(--white-color);\n  }\n  .content-wrapper {\n    display: flex;\n    align-items: end;\n    gap: 8px;\n  }\n  .value {\n    font-family: RobotoBold;\n    font-size: 24px;\n    line-height: 1;\n    letter-spacing: -0.01em;\n  }\n  .descr {\n    font-family: RobotoBold;\n    font-size: 12px;\n    line-height: 1.33;\n    opacity: 65%;\n  }\n  @media screen and (min-width: 768px) {\n    min-width: 114px;\n    gap: 8px;\n    .circle {\n      width: 24px;\n      height: 24px;\n      border-radius: 12px;\n    }\n    .icon-svg {\n      width: 16px;\n      height: 16px;\n    }\n    .content-wrapper {\n      gap: 11px;\n    }\n    .value {\n      font-size: 48px;\n      line-height: 1.04;\n    }\n    .descr {\n      font-size: 16px;\n      line-height: 1.5;\n    }\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport sprite from '../../../../images/sprite.svg';\nimport { StatisticsHeightCont } from '../StatisticsHeight.styled';\n\nconst StatisticsCal = () => {\n  const calories = useSelector(state => state.statistic.totalBurnedCalories);\n  return (\n    <StatisticsHeightCont>\n      <div className=\"circle\">\n        <svg className=\"icon-svg\">\n          <use href={`${sprite}#icon-running-figure-white`} />\n        </svg>\n      </div>\n      <div className=\"content-wrapper\">\n        <p className=\"value\">{calories ?? 0}</p>\n        <p className=\"descr\">cal</p>\n      </div>\n    </StatisticsHeightCont>\n  );\n};\n\nexport default StatisticsCal;\n","import { styled } from 'styled-components';\n\nexport const StatisticsBlocksCont = styled.div`\n  position: absolute;\n  background-color: var(--gray-color);\n  display: inline-block;\n  padding: 14px 18px;\n  border-radius: 12px;\n  &.calories {\n    background-color: var(--light-orange-color);\n    margin-top: 70px;\n    right: 0;\n  }\n  &.users {\n    margin-top: 150px;\n  }\n  &.hours {\n    background-color: var(--light-orange-color);\n    margin-top: 220px;\n    right: 0;\n  }\n  &.exercises {\n    margin-top: 300px;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 20px 36px 20px 23px;\n    &.video {\n      margin-left: 230px;\n    }\n    &.calories {\n      padding: 14px 38px 14px 28px;\n      margin-top: 50px;\n      right: 30px;\n    }\n    &.users {\n      margin-top: 270px;\n    }\n    &.hours {\n      padding: 14px 38px 14px 28px;\n      margin-top: 130px;\n      right: 400px;\n    }\n    &.exercises {\n      margin-top: 220px;\n      right: 60px;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    &.video {\n      margin-left: 0;\n    }\n    &.calories {\n      margin-top: 80px;\n      right: 40px;\n    }\n    &.users {\n      margin-top: 430px;\n    }\n    &.hours {\n      margin-top: 190px;\n      left: 0;\n    }\n    &.exercises {\n      margin-top: 320px;\n      right: 40px;\n    }\n  }\n`;\n\n\n","import { StatisticsBlocksCont } from './StatisticsInfoBlocks.styled';\n\nconst StatisticsInfoBlocks = ({ className, children }) => {\n  return (\n    <StatisticsBlocksCont className={className}>\n      {children}\n    </StatisticsBlocksCont>\n  );\n};\n\nexport default StatisticsInfoBlocks;\n","import { styled } from 'styled-components';\n\nexport const StatisticsWideCont = styled.div`\n  display: flex;\n  min-width: 110px;\n  gap: 8px;\n  align-items: center;\n  .circle {\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    background-color: var(--light-orange-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .icon-svg {\n    width: 20px;\n    height: 20px;\n    fill: var(--white-color);\n  }\n  .content-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n  .value {\n    font-family: RobotoBold;\n    font-size: 16px;\n    line-height: 1.125;\n  }\n  .descr {\n    font-family: RobotoRegular;\n    font-size: 12px;\n    line-height: 1.33;\n    opacity: 65%;\n  }\n  @media screen and (min-width: 768px) {\n    min-width: 147px;\n    gap: 12px;\n    .circle {\n      width: 40px;\n      height: 40px;\n      border-radius: 20px;\n    }\n    .icon-svg {\n      width: 25px;\n      height: 25px;\n    }\n    .content-wrapper {\n      gap: 8px;\n    }\n    .value {\n      font-size: 24px;\n      line-height: 1;\n    }\n    .descr {\n      font-size: 16px;\n      line-height: 1.5;\n    }\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport sprite from '../../../../images/sprite.svg';\nimport { StatisticsWideCont } from '../StatisticsWide.styled';\n\nconst StatisticsVideo = () => {\n  const videos = useSelector(state => state.statistic.countVideos);\n  return (\n    <StatisticsWideCont>\n      <div className=\"circle\">\n        <svg className=\"icon-svg\">\n          <use href={`${sprite}#icon-triangle`} />\n        </svg>\n      </div>\n      <div className=\"content-wrapper\">\n        <p className=\"value\">{videos ?? 0}</p>\n        <p className=\"descr\">Video tutorial</p>\n      </div>\n    </StatisticsWideCont>\n  );\n};\n\nexport default StatisticsVideo;\n","import { styled } from 'styled-components';\n\nexport const StatisticsCont = styled.div`\n  position: absolute;\n  top: 0;\n  left: 50%;\n  width: 280px;\n  height: 380px;\n  transform: translate(-140px, 590px);\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 380px;\n    transform: translate(-352px, 714px);\n  }\n  @media screen and (min-width: 1440px) {\n    left: 100%;\n    width: 638px;\n    height: 550px;\n    transform: translate(-670px, 200px);\n  }\n`;","import { useSelector } from 'react-redux';\nimport sprite from '../../../../images/sprite.svg';\nimport { StatisticsWideCont } from '../StatisticsWide.styled';\n\nconst StatisticsUsers = () => {\n  const users = useSelector(state => state.statistic.countTotalUsers);\n  return (\n    <StatisticsWideCont>\n      <div className=\"circle\">\n        <svg className=\"icon-svg\">\n          <use href={`${sprite}#icon-user-stat`} />\n        </svg>\n      </div>\n      <div className=\"content-wrapper\">\n        <p className=\"value\">{users ?? 0}</p>\n        <p className=\"descr\">Registered users</p>\n      </div>\n    </StatisticsWideCont>\n  );\n};\n\nexport default StatisticsUsers;\n","import { useSelector } from 'react-redux';\nimport sprite from '../../../../images/sprite.svg';\nimport { StatisticsWideCont } from '../StatisticsWide.styled';\n\nconst StatisticsUsersExercises = () => {\n  const exercises = useSelector(\n    state => state.statistic.totalExerciseDoneAllUsers\n  );\n  return (\n    <StatisticsWideCont>\n      <div className=\"circle\">\n        <svg className=\"icon-svg\">\n          <use href={`${sprite}#icon-muscle-up`} />\n        </svg>\n      </div>\n      <div className=\"content-wrapper\">\n        <p className=\"value\">{exercises ?? 0}</p>\n        <p className=\"descr\">Exercises performed</p>\n      </div>\n    </StatisticsWideCont>\n  );\n};\n\nexport default StatisticsUsersExercises;\n","import { StatisticsHeightCont } from '../StatisticsHeight.styled';\nimport sprite from '../../../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\n\nconst StatisticsHours = () => {\n  const minutes = useSelector(state => state.statistic.totalSpentTimeExercise);\n  return (\n    <StatisticsHeightCont>\n      <div className=\"circle\">\n        <svg className=\"icon-svg\">\n          <use href={`${sprite}#icon-stopwatch`} />\n        </svg>\n      </div>\n      <div className=\"content-wrapper\">\n        <p className=\"value\">{minutes ?? 0}</p>\n        <p className=\"descr\">min</p>\n      </div>\n    </StatisticsHeightCont>\n  );\n};\n\nexport default StatisticsHours;\n","import StatisticsCal from 'components/StatisticsComponents/HigherBlocks/StatisticsCal/StatisticsCal';\nimport StatisticsInfoBlocks from 'components/StatisticsComponents/StatisticsInfoBlocks/StatisticsInfoBlocks';\nimport StatisticsVideo from 'components/StatisticsComponents/WiderBlocks/StatisticsVideo/StatisticsVideo';\nimport { StatisticsCont } from './StatisticsInfo.styled';\nimport StatisticsUsers from '../WiderBlocks/StatisticsUsers/StatisticsUsers';\nimport StatisticsUsersExercises from '../WiderBlocks/StatisticsUsersExercises/StatisticsUsersExercises';\nimport StatisticsHours from '../HigherBlocks/StatisticsHours/StatisticsHours';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { statisticsThunk } from '../../../redux/statistics/thunks';\n\nconst StatisticsInfo = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(statisticsThunk());\n  }, [dispatch]);\n\n  return (\n    <StatisticsCont>\n      <StatisticsInfoBlocks className=\"video\">\n        <StatisticsVideo />\n      </StatisticsInfoBlocks>\n      <StatisticsInfoBlocks className=\"calories\">\n        <StatisticsCal />\n      </StatisticsInfoBlocks>\n      <StatisticsInfoBlocks className=\"users\">\n        <StatisticsUsers />\n      </StatisticsInfoBlocks>\n      <StatisticsInfoBlocks className=\"hours\">\n        <StatisticsHours />\n      </StatisticsInfoBlocks>\n      <StatisticsInfoBlocks className=\"exercises\">\n        <StatisticsUsersExercises />\n      </StatisticsInfoBlocks>\n    </StatisticsCont>\n  );\n};\n\nexport default StatisticsInfo;\n","import styled from 'styled-components';\n\nimport imagePathMob from '../../images/training-bg-mob.png';\nimport imagePathMob2x from '../../images/training-bg-mob-2x.png';\nimport imagePathMobDark from '../../images/training-bg-mob-dark.png';\nimport imagePathMobDark2x from '../../images/training-bg-mob-dark-2x.png';\nimport imagePathDesktopAndTablet from '../../images/training-bg-tab-desk.png';\nimport imagePathDesktopAndTablet2x from '../../images/training-bg-tab-desk-2x.png';\n\nexport const TrainingBgWrapperCont = styled.div`\n  overflow: hidden;\n  &::before {\n    content: '';\n    position: fixed;\n    top: 0;\n    /* left: 50%; */\n    left: 100%;\n    width: 446px;\n    height: 669px;\n    background-image: url(${imagePathMob});\n    /* transform: translate(-110.5px, 241px); */\n    transform: translate(-298px, 241px);\n    background-size: 446px 669px;\n    z-index: -10;\n  }\n  &.pageSign {\n    &::before {\n      background-image: url(${imagePathMobDark});\n    }\n  }\n  &.page404 {\n    &::before {\n      /* transform: translate(-80.5px, 241px); */\n      transform: translate(-268px, 241px);\n    }\n  }\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    &::before {\n      width: 446px;\n      height: 669px;\n      background-image: url(${imagePathMob2x});\n    }\n    &.pageSign {\n      &::before {\n        background-image: url(${imagePathMobDark2x});\n      }\n    }\n  }\n  @media screen and (min-width: 768px) {\n    &::before {\n      width: 670px;\n      height: 1005px;\n      background-image: url(${imagePathDesktopAndTablet});\n      /* transform: translate(-53px, 131px); */\n      transform: translate(-437px, 131px);\n      background-size: 670px 1005px;\n    }\n    &.pageSign {\n      &::before {\n        background-image: url(${imagePathDesktopAndTablet});\n      }\n    }\n    &.page404 {\n      &::before {\n        /* transform: translate(-53px, 131px); */\n        transform: translate(-437px, 131px);\n      }\n    }\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      &::before {\n        width: 670px;\n        height: 1005px;\n        background-image: url(${imagePathDesktopAndTablet2x});\n      }\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    &::before {\n      background-image: url(${imagePathDesktopAndTablet});\n      /* transform: translate(50px, -152px); */\n      transform: translate(-670px, -152px);\n    }\n    &.page404 {\n      &::before {\n        /* transform: translate(50px, -152px); */\n        transform: translate(-670px, -152px);\n      }\n    }\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      &::before {\n        width: 670px;\n        height: 1005px;\n        background-image: url(${imagePathDesktopAndTablet2x});\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 96px;\n    padding-right: 96px;\n  }\n`;\n","import * as yup from 'yup';\n\nconst emailPattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n\nexport const registerSchema = yup.object().shape({\n  name: yup.string().required('Required'),\n  email: yup\n    .string()\n    .matches(emailPattern, 'Error email. Example: test@gmail.com')\n    .required('Required'),\n  password: yup\n    .string()\n    .min(6, 'Must be 6 or more characters')\n    .required('Required'),\n});\n","import { useFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { registerSchema } from '../../../schemas/RegisterSchema/index';\nimport { AuthCont } from '../../styled';\nimport sprite from '../../../images/sprite.svg';\nimport { useState } from 'react';\n\nconst FormRegistration = ({ registration }) => {\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const onSubmit = async ({ name, email, password }, actions) => {\n    registration({\n      name: name,\n      email: email,\n      password: password,\n    });\n    await new Promise(resolve => setTimeout(resolve, 1000));\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: registerSchema,\n    onSubmit,\n  });\n\n  return (\n    <AuthCont>\n      <div>\n        <h1>Sign Up</h1>\n        <p className=\"main-descr\">\n          Thank you for your interest in our platform. To complete the\n          registration process, please provide us with the following\n          information.\n        </p>\n        <form onSubmit={formik.handleSubmit}>\n          <div className=\"inputs-cont\">\n            <div>\n              <input\n                autoComplete=\"off\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                value={formik.values.name}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.name &&\n                  formik.touched.name &&\n                  formik.values.name.length > 0\n                    ? 'input-error'\n                    : formik.touched.name && formik.values.name.length > 0\n                    ? 'input-success'\n                    : ''\n                }\n              />\n              {!formik.errors.name &&\n                formik.touched.name &&\n                formik.values.name.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                    </svg>\n                    <p className=\"notify-descr success\">Success name</p>\n                  </div>\n                )}\n              {formik.errors.name &&\n                formik.touched.name &&\n                formik.values.name.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-red`} />\n                    </svg>\n                    <p className=\"notify-descr error\">{formik.errors.name}</p>\n                  </div>\n                )}\n            </div>\n            <div>\n              <input\n                autoComplete=\"off\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.email &&\n                  formik.touched.email &&\n                  formik.values.email.length > 0\n                    ? 'input-error'\n                    : formik.touched.email && formik.values.email.length > 0\n                    ? 'input-success'\n                    : ''\n                }\n              />\n              {!formik.errors.email &&\n                formik.touched.email &&\n                formik.values.email.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                    </svg>\n                    <p className=\"notify-descr success\">Success email</p>\n                  </div>\n                )}\n              {formik.errors.email &&\n                formik.touched.email &&\n                formik.values.email.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-red`} />\n                    </svg>\n                    <p className=\"notify-descr error\">{formik.errors.email}</p>\n                  </div>\n                )}\n            </div>\n            <div className=\"eye-cont\">\n              <input\n                autoComplete=\"off\"\n                name=\"password\"\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.password &&\n                  formik.touched.password &&\n                  formik.values.password.length > 0\n                    ? 'input-error'\n                    : formik.touched.password &&\n                      formik.values.password.length > 0\n                    ? 'input-success'\n                    : ''\n                }\n              />\n              <button\n                type=\"button\"\n                className=\"eye-btn\"\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                <svg className=\"eye\">\n                  <use\n                    href={\n                      showPassword\n                        ? `${sprite}#icon-eye-off`\n                        : `${sprite}#icon-eye`\n                    }\n                  />\n                </svg>\n              </button>\n              {!formik.errors.password &&\n                formik.touched.password &&\n                formik.values.password.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                    </svg>\n                    <p className=\"notify-descr success\">Success password</p>\n                  </div>\n                )}\n              {formik.errors.password &&\n                formik.touched.password &&\n                formik.values.password.length > 0 && (\n                  <div className=\"notify-cont\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                      <use href={`${sprite}#icon-red`} />\n                    </svg>\n                    <p className=\"notify-descr error\">\n                      {formik.errors.password}\n                    </p>\n                  </div>\n                )}\n            </div>\n          </div>\n          <button\n            type=\"submit\"\n            className=\"submit-btn\"\n            disabled={formik.isSubmitting}\n          >\n            Sign Up\n          </button>\n          <div className=\"navigate-cont\">\n            <p className=\"navigate-descr\">Already have an account?{'\\u00a0'}</p>\n            <Link to=\"/signin\" className=\"navigate-link\">\n              Sign In\n            </Link>\n          </div>\n        </form>\n      </div>\n    </AuthCont>\n  );\n};\n\nexport default FormRegistration;\n","import { Container } from 'components/styles/Container/Container';\nimport FormRegistration from 'Forms/Authentication/FormRegistration';\nimport toast from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { registrationThunk } from '../../redux/auth/thunks';\nimport { TrainingBgWrapperCont } from 'components/TrainingBgWrapper/TrainingBgWrapper.styled';\nimport StatisticsInfo from 'components/StatisticsComponents/StatisticsInfo/StatisticsInfo';\n\nconst SignUpPage = () => {\n  const dispatch = useDispatch();\n\n  const registration = async body => {\n    try {\n      await dispatch(registrationThunk(body)).unwrap();\n      toast.success('Login successful', {\n        duration: 3000,\n        position: 'top-center',\n      });\n    } catch (error) {\n      toast.error(error.message, {\n        duration: 3000,\n        position: 'top-center',\n      });\n    }\n  };\n\n  return (\n    <TrainingBgWrapperCont className=\"pageSign\">\n      <Container>\n        <FormRegistration registration={registration} />\n        <StatisticsInfo />\n      </Container>\n    </TrainingBgWrapperCont>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["AuthCont","styled","marginTop","h1","fontFamily","fontSize","lineHeight","marginBottom","opacity","input","width","height","border","borderRadius","backgroundColor","color","textIndent","outline","paddingTop","transition","borderColor","display","flexDirection","gap","position","right","top","background","alignItems","letterSpacing","padding","cursor","textDecoration","marginLeft","StatisticsHeightCont","_templateObject","_taggedTemplateLiteral","StatisticsCal","calories","useSelector","state","statistic","totalBurnedCalories","_jsxs","children","_jsx","className","href","concat","sprite","StatisticsBlocksCont","_ref","StatisticsWideCont","StatisticsVideo","videos","countVideos","StatisticsCont","StatisticsUsers","users","countTotalUsers","StatisticsUsersExercises","exercises","totalExerciseDoneAllUsers","StatisticsHours","minutes","totalSpentTimeExercise","StatisticsInfo","dispatch","useDispatch","useEffect","statisticsThunk","StatisticsInfoBlocks","TrainingBgWrapperCont","imagePathMob","imagePathMobDark","imagePathMob2x","imagePathMobDark2x","imagePathDesktopAndTablet","imagePathDesktopAndTablet2x","Container","registerSchema","yup","shape","name","required","email","matches","password","min","registration","showPassword","setShowPassword","useState","formik","useFormik","initialValues","validationSchema","onSubmit","async","_ref2","actions","Promise","resolve","setTimeout","handleSubmit","autoComplete","type","placeholder","value","values","onChange","handleChange","onBlur","handleBlur","errors","touched","length","viewBox","onClick","handleClickShowPassword","show","onMouseDown","event","preventDefault","disabled","isSubmitting","Link","to","SignUpPage","FormRegistration","registrationThunk","body","unwrap","toast","duration","error","message"],"sourceRoot":""}