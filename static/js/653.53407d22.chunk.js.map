{"version":3,"file":"static/js/653.53407d22.chunk.js","mappings":"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","sources":["components/styles/Container/Container.jsx","api/productsListApi.js","components/Filters/Filters.styled.jsx","components/Filters/Filters.jsx","components/ProductsListItem/ProductsListItem.styled.jsx","components/ExercisesMain/ModalProducts/ModalProducts.styled.js","api/addProductApi.js","components/ExercisesMain/ModalProducts/ModalProducts.jsx","components/ProductsListItem/ProductsListItem.jsx","components/ProductsList/ProductsList.styled.jsx","components/ProductsList/ProductsList.jsx","components/PageBgWrapperCont/PageBgWrapperCont.styled.jsx","pages/ProductsPage/ProductsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 96px;\n    padding-right: 96px;\n  }\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://project-fitness-app-back.onrender.com/api/';\n\nexport const getProducts = async (allowed, category, query) => {\n  let allowedValue;\n\n  if (allowed === 'All') {\n    allowedValue = 'all';\n  } else if (allowed === 'Not recommended') {\n    allowedValue = 'false';\n  } else if (allowed === 'Recommended') {\n    allowedValue = 'true';\n  }\n\n  const { data } = await axios.get('products/blood', {\n    params: {\n      allowed: allowedValue || 'all',\n      category,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getAllCategories = async () => {\n  const { data } = await axios.get('categories');\n  return data;\n};\n","import styled from 'styled-components';\n\nconst FiltersWrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-top: 40px;\n  margin-bottom: 28px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    justify-content: start;\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 68px;\n    justify-content: end;\n  }\n`;\n\nexport { FiltersWrap };\n","import React, { useCallback, useEffect, useState } from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport SearchIcon from '@mui/icons-material/Search';\nimport IconButton from '@mui/material/IconButton';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { debounce } from 'lodash';\n\nimport { getAllCategories } from 'api/productsListApi';\nimport { FiltersWrap } from './Filters.styled';\n\nconst recommendationOptions = ['All', 'Recommended', 'Not recommended'];\n\nconst CustomSelect = ({ value, onChange, options }) => (\n  <FormControl\n    sx={{\n      '.MuiInputLabel-root': {\n        color: 'rgba(255, 255, 255, 0.8)',\n        '&.Mui-focused': {\n          color: '#E6533C',\n        },\n      },\n      '.MuiOutlinedInput-notchedOutline': {\n        borderColor: 'rgba(239, 237, 232, 0.30)',\n        borderRadius: '12px',\n      },\n      '.MuiOutlinedInput-input': {\n        color: 'rgba(255, 255, 255, 0.8)',\n        fontSize: '16px',\n        fontWeight: 400,\n        lineHeight: '24px',\n      },\n      '.MuiSelect-icon': {\n        color: 'rgba(255, 255, 255, 0.8)',\n      },\n      '&:hover .MuiOutlinedInput-notchedOutline': {\n        borderColor: 'rgba(239, 237, 232, 0.30)',\n      },\n      '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n        borderColor: 'rgba(239, 237, 232, 0.30)',\n      },\n    }}\n  >\n    <Select\n      value={value}\n      onChange={onChange}\n      IconComponent={KeyboardArrowDownIcon}\n      MenuProps={{\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left',\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'left',\n        },\n        PaperProps: {\n          style: {\n            maxHeight: 276,\n            maxWidth: 164,\n            marginTop: 2,\n            borderRadius: 12,\n            background: '#1C1C1C',\n            color: 'rgba(255, 255, 255, 0.8)',\n          },\n        },\n      }}\n      sx={{\n        width: 194,\n        height: 52,\n        '&:hover': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'rgba(239, 237, 232, 0.30)',\n          },\n        },\n      }}\n    >\n      {options?.map(item => (\n        <MenuItem\n          key={item}\n          sx={{\n            fontSize: '16px',\n            fontWeight: '400',\n            lineHeight: '24px',\n            textTransform: 'capitalize',\n          }}\n          value={item}\n        >\n          {item}\n        </MenuItem>\n      ))}\n    </Select>\n  </FormControl>\n);\n\nconst Filters = ({ filters, onChangeFilters }) => {\n  const [query, setQuery] = useState(filters.query);\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    const fetchAllProducts = async () => {\n      try {\n        const data = await getAllCategories();\n        setCategories(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchAllProducts();\n  }, []);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedSearch = useCallback(\n    debounce(value => {\n      onChangeFilters(prevFilters => ({\n        ...prevFilters,\n        query: value,\n      }));\n    }, 500),\n    []\n  );\n\n  const handleSearchChange = event => {\n    setQuery(event.target.value);\n    debouncedSearch(event.target.value);\n  };\n\n  const handleCategoryChange = event => {\n    onChangeFilters(prevFilters => ({\n      ...prevFilters,\n      category: event.target.value,\n    }));\n  };\n\n  const handleRecommendationChange = event => {\n    onChangeFilters(prevFilters => ({\n      ...prevFilters,\n      allowed: event.target.value,\n    }));\n  };\n\n  const clearFilters = () => {\n    setQuery('');\n    onChangeFilters(prevFilters => ({\n      ...prevFilters,\n      query: '',\n    }));\n  };\n\n  return (\n    <FiltersWrap>\n      <TextField\n        placeholder=\"Search\"\n        variant=\"outlined\"\n        value={query}\n        onChange={handleSearchChange}\n        sx={{\n          width: '335px',\n          '@media (min-width: 768px)': {\n            width: '235px',\n          },\n          '.MuiInputLabel-root': {\n            color: 'rgba(255, 255, 255, 0.8)',\n            '&.Mui-focused': {\n              color: '#E6533C',\n            },\n          },\n          '.MuiOutlinedInput-notchedOutline': {\n            borderColor: 'rgba(239, 237, 232, 0.30)',\n            borderRadius: '12px',\n          },\n          '.MuiOutlinedInput-root': {\n            color: 'rgba(255, 255, 255, 0.8)',\n            borderRadius: '12px',\n            '&:hover fieldset': {\n              borderColor: 'rgba(239, 237, 232, 0.30)',\n            },\n            '&.Mui-focused fieldset': {\n              borderColor: '#E6533C',\n            },\n          },\n          '& .MuiInputAdornment-root': {\n            color: 'rgba(239, 237, 232, 0.30)',\n          },\n        }}\n        size=\"small\"\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              {filters.query && (\n                <IconButton\n                  edge=\"end\"\n                  onClick={clearFilters}\n                  sx={{ color: '#E6533C' }}\n                >\n                  <ClearIcon />\n                </IconButton>\n              )}\n              <InputAdornment position=\"end\">\n                <SearchIcon sx={{ color: 'rgba(239, 237, 232, 0.30)' }} />\n              </InputAdornment>\n            </InputAdornment>\n          ),\n          style: {\n            height: 52,\n          },\n        }}\n      />\n\n      <CustomSelect\n        value={filters.category}\n        onChange={handleCategoryChange}\n        options={categories}\n      />\n      <CustomSelect\n        value={filters.allowed}\n        onChange={handleRecommendationChange}\n        options={recommendationOptions}\n      />\n    </FiltersWrap>\n  );\n};\n\nexport default Filters;\n","import styled from 'styled-components';\n\nexport const ProductsCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 98%;\n  height: 141px;\n  padding: 16px;\n  justify-content: center;\n  align-items: flex-start;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n\n  @media screen and (min-width: 768px) {\n    max-width: 335px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 405px;\n  }\n`;\nexport const ProductsCardStatus = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 27px;\n  justify-content: space-between;\n`;\nexport const ProductsCardDiet = styled.span`\n  display: inline-flex;\n  padding: 5px 7.5px;\n  border-radius: 4px;\n  background: rgba(239, 237, 232, 0.05);\n  max-width: 100%;\n\n  @media screen and (max-width: 768px) {\n    max-width: 100px;\n  }\n`;\nexport const ProductsCardDietText = styled.p`\n  color: var(--white-color);\n  font-size: 12px;\n  font-weight: 700;\n  line-height: normal;\n  text-transform: uppercase;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const ProductsCardStatusCount = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProductsCardStatusCountTrue = styled.p`\n  color: var(--white-color);\n  font-size: 12px;\n  line-height: 18px;\n  display: flex;\n  margin-right: 16px;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: block;\n    width: 14px;\n    height: 14px;\n    border-radius: 10px;\n    background: ${props => (props.$recommended ? '#419b09' : '#E9101D')};\n    margin-right: 8px;\n  }\n`;\n\nexport const ProductsCardStatusAdd = styled.button`\n  background: transparent;\n  border: none;\n  color: var(--orange-color);\n  font-size: 16px;\n  line-height: 24px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: var(--white-color);\n  }\n\n  &::after {\n    content: url(../../../../src/components/products/img/Icon.svg);\n    display: block;\n    width: 16px;\n    height: 16px;\n    margin-left: 8px;\n    margin-top: -3px;\n    &:hover,\n    &:focus {\n      fill: var(--white-color);\n    }\n  }\n`;\n\nexport const ProductsCardTitle = styled.h4`\n  font-size: 24px;\n  line-height: 1.3;\n  color: var(--white-color);\n\n  margin-bottom: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 250px;\n`;\n\nexport const ProductsCardInfoList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  width: 100%;\n`;\n\nexport const ProductsCardInfoItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  max-width: 130px;\n  gap: 4px;\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 12px;\n  line-height: 18px;\n`;\n\nexport const ProductsCardInfoValue = styled.p`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  color: var(--white);\n  font-size: 12px;\n  line-height: 18px;\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div``;\n\nexport const ModalStyles = {\n  overlay: {\n    backgroundColor: 'rgba(4, 4, 4, 0.4)',\n  },\n  content: {\n    maxWidth: '479px',\n    height: '280px',\n    padding: 0,\n\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: '#10100F',\n    border: '1px solid #efede833',\n    borderRadius: '12px',\n  },\n};\n\nexport const InputsContainer = styled.div`\n  margin-bottom: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const InputEl = styled(Field)`\n  box-sizing: border-box;\n\n  width: 100%;\n  padding: 8px 14px;\n  background-color: transparent;\n  font-size: 14px;\n  line-height: 1.28;\n  color: white;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: var(--orange-color);\n  }\n\n  &::placeholder {\n    color: white;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n  }\n`;\n\nexport const ProductInput = styled.input`\n  cursor: unset;\n  width: 100%;\n  border-radius: 12px;\n  padding: 8px 14px;\n  border: 1px solid #e6533c;\n  background-color: transparent;\n  color: rgba(239, 237, 232, 0.3);\n  outline: none;\n\n  @media screen and (min-width: 768px) {\n    width: 244px;\n  }\n`;\n\nexport const WeightInputLabel = styled.label`\n  display: block;\n  position: relative;\n`;\n\nexport const WeightInput = styled.input`\n  width: 100%;\n  border-radius: 12px;\n  padding: 8px 14px;\n  border: 1px solid #e6533c;\n  background-color: transparent;\n  color: white;\n\n  @media screen and (min-width: 768px) {\n    width: 155px;\n  }\n`;\n\nexport const FieldLabel = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 14px;\n  color: rgba(239, 237, 232, 0.4);\n  transform: translate(0, -50%);\n  /* color:; */\n  display: flex;\n  align-items: center;\n`;\n\nexport const Calories = styled.p`\n  margin-bottom: 24px;\n  text-align: left;\n  line-height: 1.5; /* 150% */\n  color: rgba(239, 237, 232, 0.4);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 64px;\n  }\n`;\n\nexport const CaloriesValue = styled.span`\n  color: white;\n`;\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const PFButton = styled.button`\n  display: block;\n\n  padding: 12px 32px;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5; /* 150% */\n  color: white;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 32px;\n  }\n`;\n\nexport const PFPrimaryBtn = styled(PFButton)`\n  background-color: var(--orange-color);\n  border: 1px solid var(--orange-color);\n\n  &:hover,\n  &:focus {\n    background-color: var(--light-orange-color);\n    border: 1px solid var(--light-orange-color);\n  }\n`;\n\nexport const PFOutlinedBtn = styled(PFButton)`\n  width: 121px;\n  background-color: transparent;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n\n  &:hover,\n  &:focus {\n    border: 1px solid var(--orange-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 142px;\n  }\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: white;\n  margin-top: 4px;\n  line-height: 1.5;\n  letter-spacing: 0.12px;\n  @media screen and (min-width: 768px) {\n    width: 155px;\n  }\n`;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://project-fitness-app-back.onrender.com/api/\";\n\nexport const addProduct= async (body) => {\n  try {\n    const { data } = await axios.post('dairy/addProduct', body);\n    return data;\n  } catch (error) {\n    \n    console.error(\"Error in addProduct:\", error);\n    throw error;\n  }\n};","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { format } from 'date-fns';\nimport {\n  Container,\n  ModalStyles,\n  InputsContainer,\n  Calories,\n  CaloriesValue,\n  ButtonsContainer,\n  PFPrimaryBtn,\n  PFOutlinedBtn,\n  ProductInput,\n  WeightInput,\n  FieldLabel,\n  WeightInputLabel,\n  ErrorMessageStyled,\n} from './ModalProducts.styled';\nimport { ButtonCloseModal, Svg } from '../ModalWaist/ModalWaist.styled';\nimport Modal from 'react-modal';\nimport sprite from '../../../images/sprite.svg';\nimport 'overlayscrollbars/overlayscrollbars.css';\nimport { addProduct } from 'api/addProductApi';\n\nconst ModalProducts = ({ id, title, calories, onClick, isOpen, onClose }) => {\n  const [calculatedCalories, setCalculatedCalories] = useState(0);\n\n  const initialValues = {\n    productId: id,\n    date: format(new Date(), 'dd/mm/yyyy'),\n    amount: '',\n  };\n\n  const handleAddToDiaryClick = values => {\n    const { productId, amount } = values;\n    const calculatedCalories = calculateCalories(amount);\n\n    if (typeof onClick === 'function') {\n      onClick({\n        productId,\n        amount,\n        calories: calculatedCalories,\n      });\n    }\n  };\n\n  const schema = Yup.object().shape({\n    amount: Yup.number()\n      .max(999, 'Weight should not exceed 999 grams')\n      .required('Weight is required'),\n  });\n\n  const calculateCalories = amount => {\n    const calculated = (calories * amount) / 100;\n    return parseFloat(calculated);\n  };\n\n  const handleWeightChange = (event, setFieldValue) => {\n    const amount = event.target.value.slice(0, 3);\n    const calories = calculateCalories(amount);\n    setCalculatedCalories(calories);\n    setFieldValue('amount', Number(amount));\n    setFieldValue('calories', calories);\n  };\n\n  const handleSubmit = (values, actions) => {\n    actions.resetForm();\n    handleAddToDiaryClick(values);\n    console.log('string', values);\n    addProduct(values)\n      .then(response => {\n        console.log('Product added successfully:', response);\n      })\n      .catch(error => {\n        console.error('Error adding product:', error);\n      });\n  };\n\n  return (\n    <Modal style={ModalStyles} isOpen={isOpen} onRequestClose={onClose}>\n      <ButtonCloseModal onClick={onClose}>\n        <Svg>\n          <use href={`${sprite}#icon-x-modal`} />\n        </Svg>\n      </ButtonCloseModal>\n      {isOpen && (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          {({ values, errors, touched, setFieldValue }) => (\n            <Form autoComplete=\"off\">\n              <Container>\n                <InputsContainer>\n                  <div>\n                    <label htmlFor=\"product\">\n                      <ProductInput\n                        name=\"product\"\n                        type=\"text\"\n                        value={title}\n                        readOnly\n                      />\n                    </label>\n                  </div>\n\n                  <div>\n                    <WeightInputLabel htmlFor=\"amount\">\n                      <WeightInput\n                        name=\"amount\"\n                        type=\"text\"\n                        onChange={e => handleWeightChange(e, setFieldValue)}\n                        onKeyPress={e => {\n                          const onlyDigits = /^[0-9\\b]+$/;\n                          if (!onlyDigits.test(e.key)) {\n                            e.preventDefault();\n                          }\n                        }}\n                        value={values.amount}\n                        $border={\n                          errors.amount && touched.amount && '1px solid #D80027'\n                        }\n                      />\n                      <FieldLabel>grams</FieldLabel>\n                    </WeightInputLabel>\n                    <ErrorMessageStyled name=\"amount\" component=\"p\" />\n                  </div>\n                </InputsContainer>\n\n                <Calories>\n                  Calories:\n                  <CaloriesValue>{calculatedCalories}</CaloriesValue>\n                </Calories>\n\n                <ButtonsContainer>\n                  <PFPrimaryBtn type=\"submit\">Add to diary</PFPrimaryBtn>\n                  <PFOutlinedBtn type=\"button\" onClick={onClose}>\n                    Cancel\n                  </PFOutlinedBtn>\n                </ButtonsContainer>\n              </Container>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </Modal>\n  );\n};\n\nexport default ModalProducts;\n","import React, { useState } from 'react';\nimport { StyleSheetManager } from 'styled-components';\nimport {\n  ProductsCard,\n  ProductsCardStatus,\n  ProductsCardDiet,\n  ProductsCardDietText,\n  ProductsCardStatusCount,\n  ProductsCardStatusCountTrue,\n  ProductsCardStatusAdd,\n  ProductsCardTitle,\n  ProductsCardInfoList,\n  ProductsCardInfoItem,\n  ProductsCardInfoValue,\n} from './ProductsListItem.styled';\nimport {\n  IconTitleDiv,\n  SpanIconRun,\n  SvgIconRun,\n} from 'components/ExercisesMain/Waist/ExercisesItem/ExercisesItem.styled';\nimport sprite from '../../images/sprite.svg';\nimport ModalProducts from 'components/ExercisesMain/ModalProducts';\n\nconst ProductsListItem = ({\n  id,\n  title,\n  calories,\n  category,\n  weight,\n  groupBloodNotAllowed,\n}) => {\n  const firstValue = Boolean(groupBloodNotAllowed['1']);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModalToggle = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <>\n      <ProductsCard>\n        <ProductsCardStatus>\n          <ProductsCardDiet>\n            <ProductsCardDietText>{category}</ProductsCardDietText>\n          </ProductsCardDiet>\n          <ProductsCardStatusCount>\n            <StyleSheetManager>\n              <ProductsCardStatusCountTrue $recommended={firstValue}>\n                {firstValue ? 'Recommended' : 'Not recommended'}\n              </ProductsCardStatusCountTrue>\n            </StyleSheetManager>\n            <ProductsCardStatusAdd onClick={openModalToggle} type=\"button\">\n              Add\n            </ProductsCardStatusAdd>\n          </ProductsCardStatusCount>\n        </ProductsCardStatus>\n        <IconTitleDiv>\n          <SpanIconRun>\n            <SvgIconRun width={24} height={24}>\n              <use href={`${sprite}#icon-run-exercises`}></use>\n            </SvgIconRun>\n          </SpanIconRun>\n          <ProductsCardTitle>{title ? title : 'title'}</ProductsCardTitle>\n        </IconTitleDiv>\n        <ProductsCardInfoList>\n          <ProductsCardInfoItem>\n            <ProductsCardInfoValue>Calories: {calories}</ProductsCardInfoValue>\n          </ProductsCardInfoItem>\n          <ProductsCardInfoItem>\n            <ProductsCardInfoValue>Category: {category}</ProductsCardInfoValue>\n          </ProductsCardInfoItem>\n          <ProductsCardInfoItem>\n            <ProductsCardInfoValue>Weight: {weight}</ProductsCardInfoValue>\n          </ProductsCardInfoItem>\n        </ProductsCardInfoList>\n      </ProductsCard>\n      <ModalProducts\n        id={id}\n        title={title}\n        calories={calories}\n        isOpen={isModalOpen}\n        onClose={openModalToggle}\n      />\n    </>\n  );\n};\n\nexport default ProductsListItem;\n","import styled from 'styled-components';\n\nexport const ProductsListWrap = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n  overflow-y: auto;\n  max-height: 65vh;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: 16px;\n    row-gap: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 850px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #ef8964;\n    border-radius: 4px;\n    height: 153px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: #efede81a;\n  }\n`;\n","import ProductsListItem from 'components/ProductsListItem/ProductsListItem';\nimport { ProductsListWrap } from './ProductsList.styled';\n\nconst ProductsList = ({ products }) => {\n  return (\n    <ProductsListWrap>\n      {products.map(\n        ({ _id, groupBloodNotAllowed, weight, calories, category, title }) => (\n          <ProductsListItem\n            key={_id}\n            id={_id}\n            weight={weight}\n            calories={calories}\n            category={category}\n            title={title}\n            groupBloodNotAllowed={groupBloodNotAllowed}\n          />\n        )\n      )}\n    </ProductsListWrap>\n  );\n};\n\nexport default ProductsList;\n","import styled from 'styled-components';\n\nimport imagePathDesktopAndTablet from '../../images/products-1x.jpg';\nimport imagePathDesktopAndTablet2x from '../../images/products-2x.jpg';\n\nexport const PageBgWrapperCont = styled.div`\n  overflow: hidden;\n  &::before {\n    content: '';\n    position: fixed;\n    top: 0;\n    left: 100%;\n    z-index: -10;\n    background: no-repeat;\n  }\n  @media screen and (min-width: 1440px) {\n    &::before {\n      width: 670px;\n      height: 1005px;\n      background-image: url(${imagePathDesktopAndTablet});\n      transform: translate(-30vw, 85px);\n    }\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      &::before {\n        width: 670px;\n        height: 1005px;\n        background-image: url(${imagePathDesktopAndTablet2x});\n      }\n    }\n  }\n\n  @media screen and (min-width: 2560px) {\n    &::before {\n      transform: translate(-43vw, 85px);\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport Filters from 'components/Filters/Filters';\nimport ProductsList from 'components/ProductsList/ProductsList';\nimport { PageBgWrapperCont } from 'components/PageBgWrapperCont/PageBgWrapperCont.styled';\nimport { Container } from 'components/styles/Container/Container';\nimport { getProducts } from 'api/productsListApi';\n\nconst ProductsPage = () => {\n  const [filters, setFilters] = React.useState({\n    query: '',\n    category: '',\n    allowed: '',\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleChangeFilters = newFilters => {\n    setFilters(newFilters);\n  };\n\n  const [products, setProducts] = useState([]);\n  React.useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getProducts(\n          filters.allowed,\n          filters.category,\n          filters.query\n        );\n        setProducts(data.result);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchProducts();\n  }, [filters]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      <PageBgWrapperCont>\n        <Filters filters={filters} onChangeFilters={handleChangeFilters} />\n        <ProductsList products={products} />\n      </PageBgWrapperCont>\n    </Container>\n  );\n};\n\nexport default ProductsPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","axios","FiltersWrap","recommendationOptions","CustomSelect","_ref","value","onChange","options","_jsx","FormControl","sx","color","borderColor","borderRadius","fontSize","fontWeight","lineHeight","children","Select","IconComponent","KeyboardArrowDownIcon","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","style","maxHeight","maxWidth","marginTop","background","width","height","map","item","MenuItem","textTransform","_ref2","filters","onChangeFilters","query","setQuery","useState","categories","setCategories","useEffect","async","data","getAllCategories","error","console","log","fetchAllProducts","debouncedSearch","useCallback","debounce","prevFilters","_jsxs","TextField","placeholder","variant","event","target","size","InputProps","endAdornment","InputAdornment","position","IconButton","edge","onClick","clearFilters","ClearIcon","SearchIcon","category","allowed","ProductsCard","ProductsCardStatus","_templateObject2","ProductsCardDiet","_templateObject3","ProductsCardDietText","_templateObject4","ProductsCardStatusCount","_templateObject5","ProductsCardStatusCountTrue","_templateObject6","props","$recommended","ProductsCardStatusAdd","_templateObject7","ProductsCardTitle","_templateObject8","ProductsCardInfoList","_templateObject9","ProductsCardInfoItem","_templateObject10","ProductsCardInfoValue","_templateObject11","ModalStyles","overlay","backgroundColor","content","padding","top","left","transform","border","InputsContainer","ProductInput","Field","WeightInputLabel","WeightInput","FieldLabel","Calories","CaloriesValue","ButtonsContainer","PFButton","PFPrimaryBtn","_templateObject12","PFOutlinedBtn","_templateObject13","ErrorMessageStyled","ErrorMessage","_templateObject14","id","title","calories","isOpen","onClose","calculatedCalories","setCalculatedCalories","initialValues","productId","date","format","Date","amount","schema","Yup","shape","max","required","calculateCalories","parseFloat","Modal","onRequestClose","ButtonCloseModal","Svg","href","concat","sprite","Formik","validationSchema","onSubmit","handleSubmit","values","actions","resetForm","handleAddToDiaryClick","body","addProduct","then","response","catch","errors","touched","setFieldValue","Form","autoComplete","htmlFor","name","type","readOnly","e","handleWeightChange","slice","Number","onKeyPress","test","key","preventDefault","$border","component","weight","groupBloodNotAllowed","firstValue","Boolean","isModalOpen","setIsModalOpen","openModalToggle","_Fragment","StyleSheetManager","IconTitleDiv","SpanIconRun","SvgIconRun","ModalProducts","ProductsListWrap","products","_id","ProductsListItem","PageBgWrapperCont","imagePathDesktopAndTablet","imagePathDesktopAndTablet2x","ProductsPage","setFilters","React","isLoading","setIsLoading","setProducts","allowedValue","params","getProducts","result","fetchProducts","Loader","Filters","newFilters","ProductsList"],"sourceRoot":""}