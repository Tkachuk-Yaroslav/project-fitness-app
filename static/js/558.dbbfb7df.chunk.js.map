{"version":3,"file":"static/js/558.dbbfb7df.chunk.js","mappings":"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","sources":["Forms/styled.js","components/StatisticsCal/StatisticsCal.styled.js","components/StatisticsCal/StatisticsCal.jsx","components/StatisticsInfoBlocks/StatisticsInfoBlocks.styled.js","components/StatisticsInfoBlocks/StatisticsInfoBlocks.jsx","components/StatisticsVideo/StatisticsVideo.styled.js","components/StatisticsVideo/StatisticsVideo.jsx","components/StatisticsInfo/StatisticsInfo.styled.js","components/StatisticsInfo/StatisticsInfo.jsx","components/TrainingBgWrapper/TrainingBgWrapper.styled.js","components/styles/Container/Container.jsx","schemas/LoginSchema/index.jsx","Forms/Authentication/FormLogin/index.jsx","pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const AuthCont = styled('div')(() => {\n  return {\n    marginTop: '66px',\n    h1: {\n      fontFamily: 'RobotoBold',\n      fontSize: '24px',\n      lineHeight: 1.17,\n      marginBottom: '14px',\n    },\n    '.main-descr': {\n      fontFamily: 'RobotoRegular',\n      fontSize: '14px',\n      lineHeight: 1.29,\n      marginBottom: '28px',\n      opacity: '0.3',\n    },\n    input: {\n      fontFamily: 'RobotoRegular',\n      fontSize: '14px',\n      lineHeight: 1.29,\n      width: '100%',\n      height: '46px',\n      border: '1px solid rgba(239, 237, 232, 0.3)',\n      borderRadius: '12px',\n      backgroundColor: 'transparent',\n      color: 'var(--white-color)',\n      textIndent: '12px',\n      outline: 'none',\n      paddingTop: '2px',\n      transition: 'border-color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        borderColor: 'var(--orange-color)',\n      },\n    },\n    '.inputs-cont': {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '18px',\n      marginBottom: '28px',\n    },\n    '.input-error': {\n      borderColor: 'var(--error-color)',\n    },\n    '.input-success': {\n      borderColor: 'var(--success-color)',\n    },\n    '.notify-cont': {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '4px',\n      marginTop: '4px',\n    },\n    '.notify-descr': {\n      fontFamily: 'RobotoRegular',\n      fontSize: '12px',\n      letterSpacing: '0.01em',\n    },\n    '.error': {\n      color: 'var(--error-color)',\n    },\n    '.success': {\n      color: 'var(--success-color)',\n    },\n    button: {\n      fontSize: '16px',\n      lineHeight: 1.12,\n      padding: '12px 40px',\n      color: 'var(--white-color)',\n      borderRadius: '12px',\n\n      marginBottom: '12px',\n      backgroundColor: 'var(--orange-color)',\n      transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n      '&:hover, &:focus': {\n        backgroundColor: 'var(--light-orange-color)',\n      },\n      '&:disabled': {\n        color: 'rgba(239, 237, 232, 0.6)',\n        cursor: 'not-allowed',\n      },\n    },\n    '.navigate-cont': {\n      display: 'flex',\n      fontSize: '12px',\n    },\n    '.navigate-descr': {\n      opacity: 0.6,\n    },\n    '.navigate-link': {\n      textDecoration: 'underline',\n    },\n    '@media screen and (min-width: 768px)': {\n      marginTop: '105px',\n      h1: {\n        fontSize: '32px',\n        lineHeight: 1.375,\n        marginBottom: '16px',\n      },\n      '.main-descr': {\n        width: '496px',\n        fontSize: '16px',\n        lineHeight: 1.5,\n        marginBottom: '32px',\n      },\n      input: {\n        fontSize: '16px',\n        lineHeight: 1.5,\n        width: '364px',\n        height: '52px',\n      },\n      '.inputs-cont': {\n        gap: '20px',\n        marginBottom: '64px',\n      },\n      button: {\n        fontSize: '20px',\n        lineHeight: 1.2,\n        padding: '16px 60px',\n      },\n      '.navigate-cont': {\n        marginLeft: '5px',\n      },\n    },\n    '@media screen and (min-width: 1440px)': {\n      marginTop: '116px',\n    },\n  };\n});\n","import { styled } from 'styled-components';\n\nexport const StatisticsCalCont = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 83px;\n  gap: 4px;\n  .circle {\n    width: 20px;\n    height: 20px;\n    border-radius: 10px;\n    background-color: var(--beige-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .running {\n    width: 12px;\n    height: 12px;\n  }\n  .content-wrapper {\n    display: flex;\n    align-items: end;\n    gap: 8px;\n  }\n  .value {\n    font-family: RobotoBold;\n    font-size: 24px;\n    line-height: 1;\n    letter-spacing: -0.01em;\n  }\n  .descr {\n    font-family: RobotoBold;\n    font-size: 12px;\n    line-height: 1.33;\n    opacity: 65%;\n  }\n  @media screen and (min-width: 768px) {\n    width: 114px;\n    gap: 8px;\n    .circle {\n      width: 24px;\n      height: 24px;\n      border-radius: 12px;\n    }\n    .running {\n      width: 16px;\n      height: 16px;\n    }\n    .content-wrapper {\n      gap: 11px;\n    }\n    .value {\n      font-size: 48px;\n      line-height: 1.04;\n    }\n    .descr {\n      font-size: 16px;\n      line-height: 1.5;\n    }\n  }\n`;\n","import { StatisticsCalCont } from './StatisticsCal.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst StatisticsCal = () => {\n  return (\n    <StatisticsCalCont>\n      <div className=\"circle\">\n        <svg className=\"running\">\n          <use href={`${sprite}#icon-running-figure-white`} />\n        </svg>\n      </div>\n      <div className=\"content-wrapper\">\n        <p className=\"value\">500</p>\n        <p className=\"descr\">cal</p>\n      </div>\n    </StatisticsCalCont>\n  );\n};\n\nexport default StatisticsCal;\n","import { styled } from 'styled-components';\n\nexport const StatisticsBlocksCont = styled.div`\n  background-color: var(--gray-color);\n  display: inline-block;\n  padding: 14px 18px;\n  border-radius: 12px;\n  &.calories {\n    background-color: var(--light-orange-color);\n    margin-top: 70px;\n    margin-left: 115px;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 20px 36px 20px 23px;\n    &.calories {\n      padding: 14px 38px 14px 28px;\n      margin-top: 56px;\n      margin-left: 225px;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    &.calories {\n      margin-top: 39px;\n      margin-left: 458px;\n    }\n  }\n`;\n\n\n","import { StatisticsBlocksCont } from './StatisticsInfoBlocks.styled';\n\nconst StatisticsInfoBlocks = ({ className, children }) => {\n  return (\n    <StatisticsBlocksCont className={className}>\n      {children}\n    </StatisticsBlocksCont>\n  );\n};\n\nexport default StatisticsInfoBlocks;\n","import { styled } from 'styled-components';\n\nexport const StatisticsVideoCont = styled.div`\n  display: flex;\n  width: 110px;\n  gap: 8px;\n  align-items: center;\n  .circle {\n    width: 30px;\n    height: 30px;\n    border-radius: 15px;\n    background-color: var(--light-orange-color);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .play {\n    margin-left: 3px;\n    margin-top: 1px;\n    width: 11px;\n    height: 11px;\n  }\n  .content-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n  }\n  .value {\n    font-family: RobotoBold;\n    font-size: 16px;\n    line-height: 1.125;\n  }\n  .descr {\n    font-family: RobotoRegular;\n    font-size: 12px;\n    line-height: 1.33;\n    opacity: 65%;\n  }\n  @media screen and (min-width: 768px) {\n    width: 147px;\n    gap: 12px;\n    .circle {\n      width: 40px;\n      height: 40px;\n      border-radius: 20px;\n    }\n    .play {\n      margin-left: 5px;\n      margin-top: 1px;\n      width: 17px;\n      height: 17px;\n    }\n    .content-wrapper {\n      gap: 8px;\n    }\n    .value {\n      font-size: 24px;\n      line-height: 1;\n    }\n    .descr {\n      font-size: 16px;\n      line-height: 1.5;\n    }\n  }\n`;\n","import { StatisticsVideoCont } from './StatisticsVideo.styled';\nimport sprite from '../../images/sprite.svg';\n\nconst StatisticsVideo = () => {\n  return (\n    <StatisticsVideoCont>\n      <div className=\"circle\">\n        <svg className=\"play\">\n          <use href={`${sprite}#icon-triangle`} />\n        </svg>\n      </div>\n      <div className='content-wrapper'>\n        <p className=\"value\">350+</p>\n        <p className=\"descr\">Video tutorial</p>\n      </div>\n    </StatisticsVideoCont>\n  );\n};\n\nexport default StatisticsVideo;\n","import { styled } from 'styled-components';\n\nexport const StatisticsCont = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 234px;\n  height: 252px;\n  transform: translate(-20px, 560px);\n  @media screen and (min-width: 768px) {\n    width: 405px;\n    height: 310px;\n    transform: translate(-32px, 714px);\n  }\n  @media screen and (min-width: 1440px) {\n    width: 638px;\n    height: 416px;\n    transform: translate(-32px, 384px);\n  }\n`;","import StatisticsCal from 'components/StatisticsCal/StatisticsCal';\nimport StatisticsInfoBlocks from 'components/StatisticsInfoBlocks/StatisticsInfoBlocks';\nimport StatisticsVideo from 'components/StatisticsVideo/StatisticsVideo';\nimport { StatisticsCont } from './StatisticsInfo.styled';\n\nconst StatisticsInfo = () => {\n  return (\n    <StatisticsCont>\n        <StatisticsInfoBlocks>\n          <StatisticsVideo />\n        </StatisticsInfoBlocks>\n        <StatisticsInfoBlocks className=\"calories\">\n          <StatisticsCal />\n        </StatisticsInfoBlocks>\n    </StatisticsCont>\n  );\n};\n\nexport default StatisticsInfo;\n","import styled from 'styled-components';\n\nimport imagePathMob from '../../images/training-bg-mob.png';\nimport imagePathMob2x from '../../images/training-bg-mob-2x.png';\nimport imagePathMobDark from '../../images/training-bg-mob-dark.png';\nimport imagePathMobDark2x from '../../images/training-bg-mob-dark-2x.png';\nimport imagePathDesktopAndTablet from '../../images/training-bg-tab-desk.png';\nimport imagePathDesktopAndTablet2x from '../../images/training-bg-tab-desk-2x.png';\n\nexport const TrainingBgWrapperCont = styled.div`\n  overflow: hidden;\n  &::before {\n    content: '';\n    position: fixed;\n    top: 0;\n    /* left: 50%; */\n    left: 100%;\n    width: 446px;\n    height: 669px;\n    background-image: url(${imagePathMob});\n    /* transform: translate(-110.5px, 241px); */\n    transform: translate(-298px, 241px);\n    background-size: 446px 669px;\n    z-index: -10;\n  }\n  &.pageSign {\n    &::before {\n      background-image: url(${imagePathMobDark});\n    }\n  }\n  &.page404 {\n    &::before {\n      /* transform: translate(-80.5px, 241px); */\n      transform: translate(-268px, 241px);\n    }\n  }\n  @media (min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    &::before {\n      width: 446px;\n      height: 669px;\n      background-image: url(${imagePathMob2x});\n    }\n    &.pageSign {\n      &::before {\n        background-image: url(${imagePathMobDark2x});\n      }\n    }\n  }\n  @media screen and (min-width: 768px) {\n    &::before {\n      width: 670px;\n      height: 1005px;\n      background-image: url(${imagePathDesktopAndTablet});\n      /* transform: translate(-53px, 131px); */\n      transform: translate(-437px, 131px);\n      background-size: 670px 1005px;\n    }\n    &.pageSign {\n      &::before {\n        background-image: url(${imagePathDesktopAndTablet});\n      }\n    }\n    &.page404 {\n      &::before {\n        /* transform: translate(-53px, 131px); */\n        transform: translate(-437px, 131px);\n      }\n    }\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      &::before {\n        width: 670px;\n        height: 1005px;\n        background-image: url(${imagePathDesktopAndTablet2x});\n      }\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    &::before {\n      background-image: url(${imagePathDesktopAndTablet});\n      /* transform: translate(50px, -152px); */\n      transform: translate(-670px, -152px);\n    }\n    &.page404 {\n      &::before {\n        /* transform: translate(50px, -152px); */\n        transform: translate(-670px, -152px);\n      }\n    }\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      &::before {\n        width: 670px;\n        height: 1005px;\n        background-image: url(${imagePathDesktopAndTablet2x});\n      }\n    }\n  }\n`;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 96px;\n    padding-right: 96px;\n  }\n`;\n","import * as yup from \"yup\"\n\nconst emailPattern = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n\nexport const loginSchema = yup.object().shape({\n  email: yup.string().matches(emailPattern, 'Error email. Example: test@gmail.com').required('Required'),\n  password: yup\n    .string()\n    .min(6, 'Must be 6 or more characters')\n    .required('Required'),\n});","import { useFormik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { loginSchema } from '../../../schemas/LoginSchema/index';\nimport { AuthCont } from '../../styled';\nimport sprite from '../../../images/sprite.svg';\n\nconst FormLogin = ({ login }) => {\n  const onSubmit = async ({ email, password }, actions) => {\n    login({\n      email: email,\n      password: password,\n    });\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    // actions.resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: loginSchema,\n    onSubmit,\n  });\n\n  return (\n    <AuthCont>\n      <div>\n        <h1>Sign In</h1>\n        <p className=\"main-descr\">\n          Welcome! Please enter your credentials to login to the platform:\n        </p>\n        <form onSubmit={formik.handleSubmit}>\n          <div className=\"inputs-cont\">\n            <div>\n              <input\n                autoComplete=\"off\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.email && formik.touched.email\n                    ? 'input-error'\n                    : formik.touched.email\n                    ? 'input-success'\n                    : ''\n                }\n              />\n              {!formik.errors.email && formik.touched.email && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success email</p>\n                </div>\n              )}\n              {formik.errors.email && formik.touched.email && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.email}</p>\n                </div>\n              )}\n            </div>\n            <div>\n              <input\n                autoComplete=\"off\"\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                className={\n                  formik.errors.password && formik.touched.password\n                    ? 'input-error'\n                    : formik.touched.password\n                    ? 'input-success'\n                    : ''\n                }\n              />\n              {!formik.errors.password && formik.touched.password && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-checkbox-circle-fill`} />\n                  </svg>\n                  <p className=\"notify-descr success\">Success password</p>\n                </div>\n              )}\n              {formik.errors.password && formik.touched.password && (\n                <div className=\"notify-cont\">\n                  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">\n                    <use href={`${sprite}#icon-red`} />\n                  </svg>\n                  <p className=\"notify-descr error\">{formik.errors.password}</p>\n                </div>\n              )}\n            </div>\n          </div>\n          <button type=\"submit\" disabled={formik.isSubmitting}>\n            Sign In\n          </button>\n          <div className=\"navigate-cont\">\n            <p className=\"navigate-descr\">Don’t have an account?{'\\u00a0'}</p>\n            <Link to=\"/signup\" className=\"navigate-link\">\n              Sign Up\n            </Link>\n          </div>\n        </form>\n      </div>\n    </AuthCont>\n  );\n};\n\nexport default FormLogin;\n","import { Container } from 'components/styles/Container/Container';\nimport FormLogin from 'Forms/Authentication/FormLogin';\nimport toast from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from '../../redux/auth/thunks';\nimport { TrainingBgWrapperCont } from 'components/TrainingBgWrapper/TrainingBgWrapper.styled';\nimport StatisticsInfo from 'components/StatisticsInfo/StatisticsInfo';\n\nconst SignInPage = () => {\n  const dispatch = useDispatch();\n\n  const login = async body => {\n    try {\n      await dispatch(loginThunk(body)).unwrap();\n      toast.success('Login successful', {\n        duration: 3000,\n        position: 'top-center',\n      });\n    } catch (error) {\n      toast.error(error.message, {\n        duration: 3000,\n        position: 'top-center',\n      });\n    }\n  };\n\n  return (\n    <TrainingBgWrapperCont className=\"pageSign\">\n      <Container>\n        <FormLogin login={login} />\n        <StatisticsInfo />\n      </Container>\n    </TrainingBgWrapperCont>\n  );\n};\n\nexport default SignInPage;\n"],"names":["AuthCont","styled","marginTop","h1","fontFamily","fontSize","lineHeight","marginBottom","opacity","input","width","height","border","borderRadius","backgroundColor","color","textIndent","outline","paddingTop","transition","borderColor","display","flexDirection","gap","alignItems","letterSpacing","button","padding","cursor","textDecoration","marginLeft","StatisticsCalCont","_templateObject","_taggedTemplateLiteral","StatisticsCal","_jsxs","children","_jsx","className","href","concat","sprite","StatisticsBlocksCont","_ref","StatisticsVideoCont","StatisticsVideo","StatisticsCont","StatisticsInfo","StatisticsInfoBlocks","TrainingBgWrapperCont","imagePathMob","imagePathMobDark","imagePathMob2x","imagePathMobDark2x","imagePathDesktopAndTablet","imagePathDesktopAndTablet2x","Container","loginSchema","yup","shape","email","matches","required","password","min","login","formik","useFormik","initialValues","validationSchema","onSubmit","async","_ref2","actions","Promise","resolve","setTimeout","handleSubmit","autoComplete","name","type","placeholder","value","values","onChange","handleChange","onBlur","handleBlur","errors","touched","viewBox","disabled","isSubmitting","Link","to","SignInPage","dispatch","useDispatch","FormLogin","loginThunk","body","unwrap","toast","duration","position","error","message"],"sourceRoot":""}