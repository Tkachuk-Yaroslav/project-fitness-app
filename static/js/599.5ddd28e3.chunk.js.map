{"version":3,"file":"static/js/599.5ddd28e3.chunk.js","mappings":"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","sources":["components/Calendar/Calendar.styled.jsx","components/Calendar/Calendar.jsx","components/styles/Container/Container.jsx","components/DayDashboard/DayDashboard.styled.js","components/DayDashboard/DayDashboard.jsx","components/DayProducts/DayProducts.styled.js","components/DayProductsItem/DayProductsItem.styled.js","components/DayProductsItem/DayProductsItem.jsx","components/DayProducts/DayProducts.jsx","components/DayExercises/DayExercises.styled.js","components/DayExercisesItem/DayExercisesItem.styled.js","components/DayExercisesItem/DayExercisesItem.jsx","components/DayExercises/DayExercises.jsx","pages/DiaryPage/DiaryPage.styled.js","HOC/HocRedirect.js","pages/DiaryPage/DiaryPage.jsx"],"sourcesContent":["// import { createGlobalStyle, styled } from 'styled-components';\n\n// export const IconSvg = styled.svg`\n//   position: absolute;\n//   top: 14px;\n//   right: 14px;\n// `;\n\n// // export const CalendarGlobalStyles = createGlobalStyle`\n// //  .react-datepicker__wrapper {\n// //     position: relative;\n\n// //   }\n// //   .react-datepicker {\n// //     position: absolute;\n// //     left: -20px;\n// //     top: 50%;\n// //     transform: translate(-15%, 0%);\n// //     display: flex;\n// //     flex-direction: column;\n// //     align-items: center;\n// //     padding: 14px;\n// //     background-color: #ef8964;\n// //     font-family: 'Roboto', sans-serif;\n// //     border-radius: 8px;\n// //   }\n// //   .react-datepicker__month-container {\n// //     float: inherit;\n// //     box-sizing: border-box;\n// //   }\n// //   .react-datepicker__day-names {\n// //     display: flex;\n// //     justify-content: space-between;\n// //     align-items: center;\n// //     padding-top: 14px;\n// //     margin-bottom: 8px;\n// //     border-top: 1px solid rgba(239, 237, 232, 0.2);\n// //   }\n// //   .react-datepicker__header {\n// //     position: relative;\n// //     background-color: #ef8964;\n// //   }\n\n// //   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n// //     border-bottom: 0px;\n// //     padding: 0;\n// //   }\n// //   .react-datepicker__day\n// //     react-datepicker__day--018.react-datepicker__day--selected\n// //     react-datepicker__day--today {\n// //     outline: none;\n// //     border: none;\n// //   }\n// //   .react-datepicker__current-month {\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 16px;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //     margin-bottom: 14px;\n// //   }\n// //   .react-datepicker__day-name {\n// //     margin: 0;\n// //     color: rgba(239, 237, 232, 0.5);\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-style: normal;\n// //     font-weight: 500;\n// //     line-height: normal;\n// //   }\n\n// //   .react-datepicker__day--disabled {\n// //     opacity: 25%;\n// //   }\n// //   .react-datepicker__navigation {\n// //     margin-top: 14px;\n// //     color: white;\n// //   }\n// //   .react-datepicker__navigation--previous {\n// //     left: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation--next {\n// //     right: 7px;\n// //     width: 18px;\n// //     height: 18px;\n// //   }\n// //   .react-datepicker__navigation-icon::before:hover:focus {\n// //     border-color: white;\n// //   }\n// //   .react-datepicker__week {\n// //     display: flex;\n// //     align-items: center;\n// //     justify-content: space-between;\n// //     color: white;\n// //   }\n// //   .react-datepicker__day {\n// //     display: flex;\n// //     flex-direction: column;\n// //     justify-content: center;\n// //     align-items: center;\n// //     flex-shrink: 0;\n// //     margin: 0;\n// //     border-radius: 50%;\n// //     color: #efede8;\n// //     font-family: 'Roboto', sans-serif;\n// //     font-size: 14px;\n// //     font-weight: 400;\n// //     line-height: 18px;\n// //     text-align: center;\n// //     width: 24px;\n// //     height: 24px;\n// //   }\n// //   .react-datepicker__month {\n// //     display: flex;\n// //     gap: 5px;\n// //     flex-direction: column;\n// //     justify-content: space-between;\n// //     margin: 0;\n// //   }\n// //   .react-datepicker__day--selected {\n// //     background-color: #040404;\n// //     color: #efede8;\n// //     font-size: 14px;\n// //   }\n// //   .react-datepicker__day--selected:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //   }\n// //   .react-datepicker__day:hover {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--keyboard-selected {\n// //     border-radius: 50%;\n// //     background-color: white;\n// //     color: #ef8964;\n// //   }\n// //   .react-datepicker__day--outside-month {\n// //     opacity: 50%;\n// //   }\n// //   .react-datepicker__triangle {\n// //     display: none;\n// //   }\n// // `;\n// export const CalendarGlobalStyles = createGlobalStyle`\n//   .react-datepicker__wrapper {\n//     position: relative;\n\n//   }\n//   .react-datepicker {\n//     position: absolute;\n//     left: 50%;\n//     top: 50%;\n//     transform: translate(-1%, 0%);\n//     display: flex;\n//     flex-direction: column;\n//     align-items: center;\n//     width: 327px;\n//     height: 354px;\n//     padding: 9px 18px;\n//   background-color: #3e85f3;\n//     font-family: Inter;\n//     border-radius: 16px;\n//   }\n//   .react-datepicker__month-container {\n//     float: inherit;\n//     box-sizing: border-box;\n//   }\n//   .react-datepicker__header {\n//     position: relative;\n//     background-color: #3e85f3;\n//   }\n//   .react-datepicker__day-names {\n//     display: flex;\n//     justify-content: space-between;\n//     align-items: center;\n//     padding: 8px 8px;\n//     border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n//   }\n//   .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n//     border-bottom: 0px;\n//     padding: 0;\n//   }\n//   .react-datepicker__day react-datepicker__day--018.react-datepicker__day--selected react-datepicker__day--today{\n//     outline: none;\n//     border: none;\n// }\n//   .react-datepicker__current-month {\n//     font-family: Inter;\n//     font-size: 20px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 24px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__day-name {\n//     margin: 0;\n//    padding: 8px 8px;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 600;\n//     line-height: 18px;\n//     text-align: center;\n//     color: white;\n//   }\n//   .react-datepicker__navigation {\n//     margin-top: 24px;\n//     color: white;\n//   }\n//   .react-datepicker__navigation--previous {\n//     left: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation--next {\n//     right: 7px;\n//     width: 18px;\n//     height: 18px;\n//   }\n//   .react-datepicker__navigation-icon::before:hover:focus {\n//     border-color: white;\n//   }\n//   .react-datepicker__week {\n//     display: flex;\n//     align-items: center;\n//     justify-content: space-between;\n//     color: white;\n//   }\n//   .react-datepicker__day {\n//     display: flex;\n//     flex-direction: column;\n//     justify-content: center;\n//     align-items: center;\n//     gap: 8px;\n//     flex-shrink: 0;\n//     margin: 0;\n//     width: 32px;\n//     height: 32px;\n//     border-radius: 50%;\n//     color: white;\n//     font-family: Inter;\n//     font-size: 14px;\n//     font-style: normal;\n//     font-weight: 400;\n//     line-height: 18px;\n//     text-align: center;\n//   }\n//   .react-datepicker__month {\n//     display: flex;\n//     gap: 7px;\n//     flex-direction: column;\n//     justify-content: space-between;\n//     padding-top: 16px;\n//     margin: 0;\n//   }\n//   .react-datepicker__day--selected {\n//     background-color:white;\n//     color:#3e85f3;\n//     font-size: 14px;\n//   }\n//   .react-datepicker__day--selected:hover {\n//     border-radius: 50%;\n//   background-color:white;\n//   }\n//   .react-datepicker__day:hover {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--keyboard-selected {\n//     border-radius: 50%;\n//     background-color:white;\n//     color:#3e85f3;\n//   }\n//   .react-datepicker__day--weekend {\n//     opacity: 50%;\n//   }\n// .react-datepicker__day--outside-month {\n//     background-color: transparent;\n//     pointer-events: none;\n//     opacity: 0;\n//   }\n//   .react-datepicker__view-calendar-icon input {\n//     padding: 6px 10px 5px 13px;\n//   }\n//   .react-datepicker__triangle {\n//     visibility: hidden;\n//   }\n// `;\n\n// export const TitleWrapper = styled.button`\n//   width: 195px;\n//   color: #ffffff;\n//   background: #3e85f3;\n//   border-radius: 8px;\n//   font-weight: 700;\n//   line-height: 18px;\n//   text-align: center;\n//   text-transform: uppercase;\n//   padding: 8px 12px;\n//   font-size: 16px;\n//   justify-content: space-around;\n//   align-items: center;\n// `;\n\n//-------------------------------\nimport { createGlobalStyle, styled } from 'styled-components';\n\nexport const IconSvg = styled.svg`\n  position: absolute;\n  top: 36px;\n  right: 14px;\n`;\n\nexport const CalendarGlobalStyles = createGlobalStyle`\n .react-datepicker__wrapper {\n    position: relative;\n    \n  }\n  .react-datepicker {\n    position: absolute;\n    left: -20px;\n    top: 50%;\n    transform: translate(-15%, 0%);\n    display: flex;\n    flex-direction: column;\n    align-items: center;    \n    padding: 14px;\n    background-color: #ef8964;\n    font-family: 'Roboto', sans-serif;\n    border-radius: 8px;\n  }\n  .react-datepicker__month-container {\n    float: inherit;\n    box-sizing: border-box;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 14px;\n    margin-bottom: 8px;\n    border-top: 1px solid rgba(239, 237, 232, 0.2);\n  }\n  .react-datepicker__header {\n    position: relative;\n    background-color: #ef8964;    \n  }\n\n  .react-datepicker__header:not(.react-datepicker__header--has-time-select) {\n    border-bottom: 0px;\n    padding: 0;\n  }\n  .react-datepicker__day\n    react-datepicker__day--018.react-datepicker__day--selected\n    react-datepicker__day--today {\n    outline: none;\n    border: none;\n  }\n  .react-datepicker__current-month {\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n    font-weight: 500;\n    line-height: normal;\n    margin-bottom: 14px;\n  }\n  .react-datepicker__day-name {\n    margin: 0;\n    color: rgba(239, 237, 232, 0.5);\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n  }\n\n  .react-datepicker__day--disabled {\n    opacity: 25%;\n  }\n  .react-datepicker__navigation {\n    margin-top: 14px;\n    color: white;\n  }\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation--next {\n    right: 7px;\n    width: 18px;\n    height: 18px;\n  }\n  .react-datepicker__navigation-icon::before:hover:focus {\n    border-color: white;\n  }\n  .react-datepicker__week {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: white;\n  }\n  .react-datepicker__day {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    flex-shrink: 0;\n    margin: 0;\n    border-radius: 50%;\n    color: #efede8;\n    font-family: 'Roboto', sans-serif;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 18px;\n    text-align: center;\n    width: 24px;\n    height: 24px;\n  }\n  .react-datepicker__month {\n    display: flex;\n    gap: 5px;\n    flex-direction: column;\n    justify-content: space-between;\n    margin: 0;\n  }\n  .react-datepicker__day--selected {\n    background-color: #040404;\n    color: #efede8;\n    font-size: 14px;\n  }\n  .react-datepicker__day--selected:hover {\n    border-radius: 50%;\n    background-color: white;\n  }\n  .react-datepicker__day:hover {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n    background-color: white;\n    color: #ef8964;\n  }\n  .react-datepicker__day--outside-month {\n    opacity: 50%;\n  }\n  .react-datepicker__triangle {\n    display: none;\n  }\n`;\n\nexport const InputField = styled.input`\n  width: 100%;\n  padding: 14px;\n  align-items: center;\n  gap: 10px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  background-color: transparent;\n  color: #efede8;\n\n  &:hover {\n    border-color: #e6533c; /* Змінюємо колір бордера на червоний при ховері */\n  }\n`;\n","import DatePicker from 'react-datepicker';\nimport { CalendarGlobalStyles, IconSvg, InputField } from './Calendar.styled';\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nimport sprite from '../../images/sprite.svg';\nimport { useState, useEffect } from 'react';\nimport { useField } from 'formik';\n\nconst Calendar = ({ name }) => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [field, , { setValue }] = useField(name);\n  useEffect(() => {\n    handleDateChange(new Date(field.value));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleDateChange = async date => {\n    setSelectedDate(date);\n    setValue(date);\n    console.log(field);\n  };\n  return (\n    <>\n      <div style={{ width: 150, position: 'relative', paddingTop: 22 }}>\n        <IconSvg width=\"18\" height=\"18\">\n          <use href={`${sprite}#icon-calendar-white`}></use>\n        </IconSvg>\n\n        <DatePicker\n          {...field}\n          selected={selectedDate}\n          onChange={handleDateChange}\n          customInput={<InputField name={name} style={{ cursor: 'pointer' }} />}\n          dateFormat={'dd/MM/yyyy'}\n          calendarStartDay={1}\n          formatWeekDay={day => day.substring(0, 1)}\n          placeholderText={selectedDate === null ? 'Birthday' : null}\n        />\n\n        <CalendarGlobalStyles />\n      </div>\n    </>\n  );\n};\n\nexport default Calendar;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 96px;\n    padding-right: 96px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const DashboardSection = styled.section`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  width: 100%;\n  width: 335px;\n  /* padding-bottom: 40px; */\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n    width: 593px;\n  }\n  @media screen and (min-width: 1440px) {\n    gap: 48px;\n    width: 390px;\n  }\n`;\n\nexport const DashboardList = styled.ul`\n  display: flex;\n  column-gap: 13px;\n  row-gap: 20px;\n  flex-wrap: wrap;\n  li:nth-child(1),\n  li:nth-child(2) {\n    background-color: var(--orange-color);\n  }\n  @media screen and (max-width: 767px) {\n    li:nth-child(1),\n    li:nth-child(3),\n    li:nth-child(5) {\n      width: 157px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 593px;\n    height: 248px;\n    flex-direction: column;\n    gap: 16px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 390px;\n    height: 380px;\n    flex-direction: row;\n  }\n`;\n\n// export const DashboardItems = styled.li`\n//   /* position: relative; */\n//   width: 165px;\n//   height: 96px;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-between;\n//   border-radius: 12px;\n//   border: 1px solid rgba(239, 237, 232, 0.2);\n//   background-color: rgba(239, 237, 232, 0.05);\n//   padding: 14px;\n//   font-size: 12px;\n//   line-height: calc(16 / 12);\n//   && > h3 {\n//       color: ${props => {\n//         if (props.index === 0 || props.index === 1)\n//           return 'rgba(239, 237, 232, 0.8)';\n//         if (props.index === 2) return 'rgba(239, 237, 232, 0.4)';\n//       }};\n//   /* flex-basis: calc((100% - 1 * 45px) / 2); */\n//   @media screen and (min-width: 768px) {\n//     flex-basis: auto;\n//     width: 187px;\n//     height: 116px;\n//     padding: 18px;\n//   };\n// `;\n// export const DashboardItems = styled.li`\n//   /* position: relative; */\n//   width: 165px;\n//   height: 96px;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-between;\n//   border-radius: 12px;\n//   border: 1px solid rgba(239, 237, 232, 0.2);\n//   background-color: rgba(239, 237, 232, 0.05);\n//   padding: 14px;\n//   font-size: 12px;\n//   line-height: calc(16 / 12);\n//   && > h3 {\n//     color: ${props => {\n//       if (props.$index === 1) return 'rgba(239, 237, 232, 0.8)';\n//       return 'rgba(239, 237, 232, 0.4)';\n//     }};\n//   }\n\n//   @media screen and (min-width: 768px) {\n//     flex-basis: auto;\n//     width: 187px;\n//     height: 116px;\n//     padding: 18px;\n//   }\n// `;\n\nexport const DashboardItems = styled.li`\n  /* position: relative; */\n  width: 165px;\n  height: 96px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 12px;\n  border: 1px solid ${props =>\n    props.$sportsRemaining < 0 ? '#3CBF61' : props.$caloriesRemaining < 0 ? '#E9101D' : 'rgba(239, 237, 232, 0.2)'};\n  background-color: rgba(239, 237, 232, 0.05);\n  padding: 14px;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n\n  && > h3 {\n    color: ${props => {\n      if (props.$index === 1) return 'rgba(239, 237, 232, 0.8)';\n      return 'rgba(239, 237, 232, 0.4)';\n    }};\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-basis: auto;\n    width: 187px;\n    height: 116px;\n    padding: 18px;\n  }\n`;\n\n\nexport const DashboardTitle = styled.h3`\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  /* color: rgba(239, 237, 232, 0.4); */\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(16 / 12);\n  @media screen and (min-width: 768px) {\n    line-height: calc(18 / 12);\n  }\n`;\n\nexport const DashboardData = styled.p`\n  color: var(--white-color);\n  font-size: 18px;\n  font-weight: 700;\n  line-height: calc(20 / 18);\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: calc(32 / 24);\n  }\n`;\n\nexport const DashboardTextContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const DashboardText = styled.p`\n  display: flex;\n  max-width: 300px;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n    max-width: 558px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 358px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid var(--beige-color);\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  background: var(--beige-color);\n`;\n","import React, { useEffect, useState } from 'react';\nimport {\n  DashboardSection,\n  DashboardList,\n  DashboardItems,\n  DashboardTitle,\n  DashboardData,\n  DashboardText,\n  IconWrap,\n  DashboardTextContainer,\n} from './DayDashboard.styled';\nimport sprite from '../../images/sprite.svg';\nimport { useSelector } from 'react-redux';\n\nimport { getDiaryData } from 'api/dairy';\n\nconst DayDashboard = () => {\n  const { user } = useSelector(state => state.auth);\n  const [dashboardData, setDashboardData] = useState(null);\n  const dailyPhysicalActivity = 110;\n  const caloriesRemaining = Math.round(\n    user.bmr - (dashboardData && dashboardData.consumedCalories)\n  );\n  const sportsRemaining = Math.round(\n    dailyPhysicalActivity - (dashboardData && dashboardData.consumedBurned / 60)\n  );\n\n  // user.bmr - (dashboardData && dashboardData.consumedCalories)\n  // (dashboardData && dashboardData.consumedBurned)\n  //   const params = {\n  //     // date: '2024-01-17T13:57:32.000Z',\n  //     date: '24/01/2024',\n  //   };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // const response = await axios.get(apiUrl, { params });\n        const response = await getDiaryData();\n        setDashboardData(response);\n        // console.log(response.data);\n      } catch (error) {\n        console.error('error:', error);\n      }\n    };\n\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div>\n      <DashboardSection>\n        <DashboardList>\n          <DashboardItems $index={1}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-fork-knife`} />\n              </svg>\n              Daily calorie intake\n            </DashboardTitle>\n            <DashboardData>{user.bmr}</DashboardData>\n          </DashboardItems>\n          <DashboardItems $index={1}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-dumbbell`} />\n              </svg>\n              Daily physical activity\n            </DashboardTitle>\n            <DashboardData>{dailyPhysicalActivity} min</DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-apple`} />\n              </svg>\n              Сalories consumed\n            </DashboardTitle>\n            <DashboardData>\n              {Math.round(dashboardData && dashboardData.consumedCalories)}\n            </DashboardData>\n          </DashboardItems>\n          <DashboardItems>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-fire`} />\n              </svg>\n              Сalories burned\n            </DashboardTitle>\n            <DashboardData>\n              {dashboardData && dashboardData.consumedBurned}\n            </DashboardData>\n          </DashboardItems>\n          <DashboardItems $caloriesRemaining={caloriesRemaining}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-bubble`} />\n              </svg>\n              Calories remaining\n            </DashboardTitle>\n            <DashboardData $index={1}>{caloriesRemaining}</DashboardData>\n          </DashboardItems>\n          <DashboardItems $sportsRemaining={sportsRemaining}>\n            <DashboardTitle>\n              <svg width={20} height={20}>\n                <use xlinkHref={`${sprite}#icon-running-figure`} />\n              </svg>\n              Sports remaining\n            </DashboardTitle>\n            <DashboardData>\n              {sportsRemaining < 0 ? `+${-sportsRemaining}` : sportsRemaining}{' '}\n              min\n            </DashboardData>{' '}\n          </DashboardItems>\n        </DashboardList>\n        <DashboardTextContainer>\n          <IconWrap>\n            <svg width={20} height={20}>\n              <use xlinkHref={`${sprite}#icon-attention`} />\n            </svg>\n          </IconWrap>\n          <DashboardText>\n            Record all your meals in the calorie diary every day. This will help\n            you be aware of your nutrition and make informed choices.\n          </DashboardText>\n        </DashboardTextContainer>\n      </DashboardSection>\n    </div>\n  );\n};\n\nexport default DayDashboard;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ProductsSection = styled.section`\n  width: 335px;\n  max-height: 842px;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 4px 16px 16px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  overflow: auto;\n  @media screen and (max-width: 767px) {\n    min-height: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 238px;\n    /* gap: 19px; */\n  }\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n    height: 238px;\n  }\n`;\n\nexport const SvgExercise = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--orange-color);\n  margin-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.5;\n  }\n`;\n\nexport const ProductsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 22px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 19px;\n  }\n`;\n\nexport const ProductsTitle = styled.h3`\n  color: rgba(239, 237, 232, 0.5);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n`;\n\nexport const ProductsLink = styled(Link)`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  color: var(--orange-color);\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(18 / 14);\n  margin-right: 12px;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n  &:hover,\n  &:focus {\n    color: var(--white-color);\n    ${SvgExercise} {\n      stroke: var(--white-color);\n    }\n  }\n`;\n\nexport const NoDataTitle = styled.p`\n  color: rgba(239, 237, 232, 0.3);\n  /* font-family: Roboto; */\n  font-size: 14px;\n  font-style: normal;\n  line-height: calc(18 / 14);\n`;\n\nexport const NoDataWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 96px;\n`;\n\nexport const ProductsTitleList = styled.ul`\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  display: flex;\n  @media screen and (min-width: 1440px) {\n    margin-left: 16px;\n  }\n`;\n\nexport const ProductsTitleItem = styled.li`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  margin-right: ${props => {\n    if (props.$index === 0) return '190px';\n    if (props.$index === 1) return '86px';\n    if (props.$index === 2) return '56px';\n    if (props.$index === 3) return '62px';\n  }};\n  @media screen and (min-width: 1440px) {\n    margin-right: ${props => {\n      if (props.$index === 0) return '198px';\n      if (props.$index === 1) return '124px';\n      if (props.$index === 2) return '70px';\n      if (props.$index === 3) return '74px';\n    }};\n  }\n`;\n","import styled from 'styled-components';\nexport const ProductsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  &:not(:last-child) {\n    margin-bottom: 40px;\n  }\n  @media screen and (min-width: 768px) {\n    &:not(:last-child) {\n      margin-bottom: 8px;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    margin-left: 16px;\n  }\n`;\n\nexport const ProductsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3 1fr);\n  gap: 16px;\n  :nth-child(1),\n  :nth-child(2) {\n    grid-column: span 5;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 8px;\n  }\n`;\n\nexport const ProductsItem = styled.li`\n  && > p {\n    width: ${props => {\n      if (props.$index === 0 || props.$index === 1) return '298px';\n      if (props.$index === 2) return '80px';\n      if (props.$index === 3) return '80px';\n      if (props.$index === 4) return '76px';\n    }};\n  }\n  @media screen and (min-width: 768px) {\n    && > p {\n      width: ${props => {\n        if (props.$index === 0) return '204px';\n        if (props.$index === 1) return '128px';\n        if (props.$index === 2 || props.$index === 3) return '90px';\n        if (props.$index === 4) return '80px';\n      }};\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    && > p {\n      width: ${props => {\n        if (props.$index === 0) return '212px';\n        if (props.$index === 1) return '166px';\n        if (props.$index === 2 || props.$index === 3) return '105px';\n        if (props.$index === 4) return '110px';\n      }};\n    }\n  }\n  && > p {\n    display: ${props => {\n      if (props.$index === 4) return 'flex';\n    }};\n    gap: ${props => {\n      if (props.$index === 4) return '8px';\n    }};\n  }\n`;\n\nexport const ProductsTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n  @media screen and (max-width: 1439px) {\n    max-width: 78px;\n  }\n  @media screen and (max-width: 767px) {\n    max-width: 80px;\n  }\n`;\n\nexport const ProductsData = styled.p`\n  align-items: center;\n  padding: 10px 14px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  color: var(--white-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  &::first-letter {\n    text-transform: uppercase;\n  }\n\n`;\n\nexport const IndicatorIcon = styled.span`\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  background: var(--success-color);\n`;\n\nexport const TrashBtn = styled.button`\n  background-color: transparent;\n  position: absolute;\n  top: 198px;\n  right: 6px;\n  @media screen and (min-width: 768px) {\n    top: 10px;\n    right: 16px;\n  }\n  @media screen and (min-width: 1440px) {\n    right: 20px;\n  }\n`;\n","import 'overlayscrollbars/overlayscrollbars.css';\nimport React, { useContext } from 'react';\n\nimport {\n  ProductsContainer,\n  ProductsList,\n  ProductsItem,\n  ProductsTitle,\n  ProductsData,\n  TrashBtn,\n  IndicatorIcon,\n} from './DayProductsItem.styled';\nimport sprite from '../../images/sprite.svg';\nimport axios from 'axios';\nimport { getDiaryData } from 'api/dairy';\nimport { ParentContext } from '../DayProducts/DayProducts';\n\nconst DayProductsItem = product => {\n  console.log(product, 'пропс в DayProductsItem');\n\n  const { setDiaryProdData } = useContext(ParentContext);\n  const handleDelete = async () => {\n    try {\n      // Викликаємо API для видалення вправи\n      await axios.delete(\n        `https://project-fitness-app-back.onrender.com/api/dairy/delProduct/${product.product._id}`\n      );\n      // Викликаємо функцію оновлення стану в компоненті, що містить список продуктів\n      const data = await getDiaryData();\n      setDiaryProdData(data.consumedProducts);\n    } catch (error) {\n      console.error('Error deleting produts:', error);\n    }\n  };\n  return (\n    <ProductsContainer>\n      <ProductsList>\n        <ProductsItem $index={0}>\n          <ProductsTitle>Title</ProductsTitle>\n          <ProductsData>{product.product.product.title}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={1}>\n          <ProductsTitle>Category</ProductsTitle>\n          <ProductsData>{product.product.product.category}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={2}>\n          <ProductsTitle>Calories</ProductsTitle>\n          <ProductsData>{Math.round(product.product.calories)}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={3}>\n          <ProductsTitle>Weight</ProductsTitle>\n          <ProductsData>{product.product.amount}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={4}>\n          <ProductsTitle>Recommend</ProductsTitle>\n          <ProductsData>\n            <IndicatorIcon />\n            Yes\n          </ProductsData>\n        </ProductsItem>\n      </ProductsList>\n      <TrashBtn onClick={handleDelete}>\n        <svg width={20} height={20}>\n          <use xlinkHref={`${sprite}#icon-trash`} />\n        </svg>\n      </TrashBtn>\n    </ProductsContainer>\n  );\n};\n\nexport default DayProductsItem;\n","import React, { useEffect, useState } from 'react';\nimport 'overlayscrollbars/overlayscrollbars.css';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport '../../components/styles/ScrollbarStyled/scrollbarStyled.css'; \nimport {\n  ProductsSection,\n  ProductsTitle,\n  ProductsLink,\n  ProductsContainer,\n  SvgExercise,\n  NoDataTitle, \n  NoDataWrap, \n  ProductsTitleList, \n  ProductsTitleItem,\n} from './DayProducts.styled';\nimport DayProductsItem from 'components/DayProductsItem/DayProductsItem';\nimport sprite from '../../images/sprite.svg';\nimport { getDiaryData } from 'api/dairy';\n\nexport const ParentContext = React.createContext();\nconst DayProducts = () => {\n  const [diaryProdData, setDiaryProdData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getDiaryData();\n        setDiaryProdData(data.consumedProducts);\n      } catch (error) {}\n    };\n\n    fetchData();\n  }, []);\n  console.log(diaryProdData, 'diareProdData');\n  return (\n    <>\n      <ProductsSection>\n        <ProductsContainer>\n          <ProductsTitle>Products</ProductsTitle>\n          <ProductsLink to={'/products'}>\n            Add product\n            <SvgExercise width={16} height={16}>\n              <use xlinkHref={`${sprite}#icon-arrow-right`} />\n            </SvgExercise>\n          </ProductsLink>\n        </ProductsContainer>\n          <ProductsTitleList>\n            <ProductsTitleItem $index={0}>Title</ProductsTitleItem>\n            <ProductsTitleItem $index={1}>Category</ProductsTitleItem>\n            <ProductsTitleItem $index={2}>Calories</ProductsTitleItem>\n            <ProductsTitleItem $index={3}>Weight</ProductsTitleItem>\n            <ProductsTitleItem>Recommend</ProductsTitleItem>\n          </ProductsTitleList>\n          <OverlayScrollbarsComponent defer>\n        {diaryProdData.length > 0\n          ? diaryProdData.map(product => {\n              console.log(product, 'Один продукт');\n              return (\n                <ParentContext.Provider\n                  key={product._id}\n                  value={{ diaryProdData, setDiaryProdData }}\n                >\n                  <DayProductsItem product={product} />\n                </ParentContext.Provider>\n              );\n            })\n          : <NoDataWrap><NoDataTitle>Not found products</NoDataTitle></NoDataWrap> }\n        </OverlayScrollbarsComponent>\n      </ProductsSection>\n    </>\n  );\n};\n\nexport default DayProducts;\n","import { Link } from 'react-router-dom';\nimport { createGlobalStyle, styled } from 'styled-components';\n\nexport const ExercisesSection = styled.section`\n  width: 335px;\n  max-height: 1088px;\n  display: flex;\n  flex-direction: column;\n  padding: 16px 4px 16px 16px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n  overflow: auto;\n  @media screen and (max-width: 767px) {\n    min-height: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n    height: 238px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 826px;\n    height: 238px;\n  }\n`;\n\nexport const ProductsContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 22px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 19px;\n  }\n`;\n\nexport const ExercisesTitle = styled.h3`\n  color: rgba(239, 237, 232, 0.5);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n`;\n\nexport const SvgExercise = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--orange-color);\n  margin-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.5;\n  }\n`;\n\nexport const ExercisesLink = styled(Link)`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  color: var(--orange-color);\n  font-size: 14px;\n  font-weight: 500;\n  line-height: calc(18 / 14);\n  margin-right: 12px;\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: calc(24 / 16);\n  }\n  &:hover,\n  &:focus {\n    color: var(--white-color);\n    ${SvgExercise} {\n      stroke: var(--white-color);\n    }\n  }\n`;\n\nexport const NoDataTitle = styled.p`\n  color: rgba(239, 237, 232, 0.3);\n  /* font-family: Roboto; */\n  font-size: 14px;\n  font-style: normal;\n  line-height: calc(18 / 14);\n`;\n\nexport const NoDataWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 96px;\n`;\n\nexport const StyledScrollbar = createGlobalStyle`\n.os-scrollbar {\n    --os-track-border-radius: 0;\n    --os-handle-bg: rgba(239, 237, 232, 0.10);\n    --os-handle-bg-hover: #EF8964;\n    --os-handle-bg-active: #E6533C;\n}`;\n\nexport const ExercisesTitleList = styled.ul`\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n  display: flex;\n  @media screen and (min-width: 1440px) {\n    margin-left: 16px;\n  }\n`;\n\nexport const ExercisesTitleItem = styled.li`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  \n  margin-right: ${props => {\n    if (props.$index === 0) return '76px';\n    if (props.$index === 1) return '84px';\n    if (props.$index === 2) return '100px';\n    if (props.$index === 3) return '62px';\n    if (props.$index === 4) return '10px';\n    \n  }};\n  @media screen and (min-width: 1440px) {\n    margin-right: ${props => {\n      if (props.$index === 0) return '100px';\n      if (props.$index === 1) return '108px';\n      if (props.$index === 2) return '106px';\n      if (props.$index === 3) return '80px';\n      if (props.$index === 4) return '16px';\n    }};\n  }\n  @media screen and (max-width: 1439px) {\n    width: ${props => {\n    if (props.$index === 4) return '74px';\n  }};\n  }\n  `;\n","import styled from 'styled-components';\nexport const ProductsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  &:not(:last-child) {\n    margin-bottom: 40px; \n  }\n  @media screen and (min-width: 768px) {\n    &:not(:last-child) {\n    margin-bottom: 8px; \n  }\n  }\n  @media screen and (min-width: 1440px) {\n    margin-left: 16px;\n  }\n`;\n\nexport const ProductsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 16px;\n  :nth-child(1),\n  :nth-child(2),\n  :nth-child(3) {\n    grid-column: span 5;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 8px;\n  }\n`;\n\nexport const ProductsItem = styled.li`\n  && > p {\n    width: ${props => {\n      if (props.$index === 0 || props.$index === 1 || props.$index === 2) return '298px';\n      if (props.$index === 3) return '80px';\n      if (props.$index === 4) return '80px';\n      if (props.$index === 5) return '76px';\n    }};\n  }\n  @media screen and (min-width: 768px) {\n    && > p {\n      width: ${props => {\n        if (props.$index === 0) return '90px';\n        if (props.$index === 1) return '132px';\n        if (props.$index === 2) return '128px';\n        if (props.$index === 3) return '84px';\n        if (props.$index === 4) return '78px';\n        if (props.$index === 5) return '72px';\n      }};\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    && > p {\n      width: ${props => {\n        if (props.$index === 0) return '115px';\n        if (props.$index === 1) return '157px';\n        if (props.$index === 2) return '131px';\n        if (props.$index === 3) return '106px';\n        if (props.$index === 4) return '91px';\n        if (props.$index === 5) return '82px';\n      }};\n    }\n  }\n`;\n\nexport const ProductsTitle = styled.h4`\n  margin-bottom: 8px;\n  color: var(--light-orange-color);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(18 / 12);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  @media screen and (min-width: 768px) {\n    display:none;\n  }\n  @media screen and (max-width: 1439px) {\n    max-width: 78px;\n  }\n  @media screen and (max-width: 767px) {\n    max-width: 80px;\n  }\n`;\n\nexport const ProductsData = styled.p`\n  padding: 10px 14px;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  color: var(--white-color);\n  font-size: 14px;\n  font-weight: 400;\n  line-height: calc(18 / 14);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n    &::first-letter {\n    text-transform: uppercase;\n  }\n`;\n\nexport const TrashBtn = styled.button`\n  background-color: transparent;\n  position: absolute;\n  top: 280px;\n  right: 6px;\n  @media screen and (min-width: 768px) {\n    top: 10px;\n    right: 16px;\n  }\n  @media screen and (min-width: 1440px) {\n    right: 20px;\n  }\n`;\n","import React, { useContext } from 'react';\nimport './styles.css';\n\nimport {\n  ProductsContainer,\n  ProductsList,\n  ProductsItem,\n  ProductsTitle,\n  ProductsData,\n  TrashBtn,\n} from './DayExercisesItem.styled';\nimport sprite from '../../images/sprite.svg';\nimport axios from 'axios';\nimport { getDiaryData } from 'api/dairy';\n\nimport { ParentContext } from '../DayExercises/DayExercises';\n\nconst DayExercisesItem = exercise => {\n  console.log(exercise.exercise._id, 'exercse');\n  const { setDiaryData } = useContext(ParentContext);\n  const handleDelete = async () => {\n    try {\n      // Викликаємо API для видалення вправи\n      await axios.delete(\n        `https://project-fitness-app-back.onrender.com/api/dairy/delExercise/${exercise.exercise._id}`\n      );\n      // Викликаємо функцію оновлення стану в компоненті, що містить список вправ\n      const data = await getDiaryData();\n      setDiaryData(data.exercisesDone);\n    } catch (error) {\n      console.error('Error deleting exercise:', error);\n    }\n  };\n\n  return (\n    <ProductsContainer>\n      <ProductsList>\n        <ProductsItem $index={0}>\n          <ProductsTitle>Part</ProductsTitle>\n          <ProductsData>{exercise.exercise.exercise.bodyPart}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={1}>\n          <ProductsTitle>Equipment</ProductsTitle>\n          <ProductsData>{exercise.exercise.exercise.equipment}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={2}>\n          <ProductsTitle>Name</ProductsTitle>\n          <ProductsData>{exercise.exercise.exercise.name}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={3}>\n          <ProductsTitle>Target</ProductsTitle>\n          <ProductsData>{exercise.exercise.exercise.target}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={4}>\n          <ProductsTitle>Burned Calories</ProductsTitle>\n          <ProductsData>{exercise.exercise.calories}</ProductsData>\n        </ProductsItem>\n        <ProductsItem $index={5}>\n          <ProductsTitle>Time</ProductsTitle>\n          <ProductsData>{exercise.time}</ProductsData>\n        </ProductsItem>\n      </ProductsList>\n      <TrashBtn onClick={handleDelete}>\n        <svg width={20} height={20}>\n          <use xlinkHref={`${sprite}#icon-trash`} />\n        </svg>\n      </TrashBtn>\n    </ProductsContainer>\n  );\n};\n\nexport default DayExercisesItem;\n","import React, { useEffect, useState } from 'react';\nimport 'overlayscrollbars/overlayscrollbars.css';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport '../../components/styles/ScrollbarStyled/scrollbarStyled.css'; \nimport {\n  ExercisesSection,\n  ExercisesTitle,\n  ExercisesLink,\n  ProductsContainer,\n  SvgExercise,\n  NoDataTitle, \n   NoDataWrap, ExercisesTitleList, ExercisesTitleItem\n} from './DayExercises.styled';\nimport DayExercisesItem from 'components/DayExercisesItem/DayExercisesItem';\nimport sprite from '../../images/sprite.svg';\n\nimport { getDiaryData } from 'api/dairy';\n\nexport const ParentContext = React.createContext();\n\nconst DayExercises = () => {\n  const [diaryData, setDiaryData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getDiaryData();\n        setDiaryData(data.exercisesDone);\n      } catch (error) {}\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <ExercisesSection>\n        <ProductsContainer>\n          <ExercisesTitle>Exercises</ExercisesTitle>\n          <ExercisesLink to={'/exercises'}>\n            Add exercise\n            <SvgExercise width={16} height={16}>\n              <use xlinkHref={`${sprite}#icon-arrow-right`} />\n            </SvgExercise>\n          </ExercisesLink>\n        </ProductsContainer>\n        <ExercisesTitleList>\n            <ExercisesTitleItem $index={0}>Part</ExercisesTitleItem>\n            <ExercisesTitleItem $index={1}>Equipment</ExercisesTitleItem>\n            <ExercisesTitleItem $index={2}>Name</ExercisesTitleItem>\n            <ExercisesTitleItem $index={3}>Target</ExercisesTitleItem>\n            <ExercisesTitleItem $index={4}>Burned Calories</ExercisesTitleItem>\n            <ExercisesTitleItem>Time</ExercisesTitleItem>\n          </ExercisesTitleList>\n\n          <OverlayScrollbarsComponent defer>\n          {diaryData.length > 0\n            ? diaryData.map(exercise => {\n                return (\n                  <ParentContext.Provider\n                    key={exercise._id}\n                    value={{ diaryData, setDiaryData }}\n                  >\n                    <DayExercisesItem\n                      key={exercise._id}\n                      exercise={exercise}\n                      time={exercise.time}\n                    />\n                  </ParentContext.Provider>\n                );\n              })\n            : <NoDataWrap><NoDataTitle>Not found exercises</NoDataTitle></NoDataWrap>}\n        </OverlayScrollbarsComponent>\n      </ExercisesSection>\n    </>\n  );\n};\n\nexport default DayExercises;\n","import styled from 'styled-components';\n\nexport const DiaryContainer = styled.div`\n  /* width: 100%; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 40px;\n  @media screen and (min-width: 768px) {\n    flex-direction: column-reverse;\n    gap: 64px;\n  }\n  @media screen and (min-width: 1440px) {\n    flex-direction: row-reverse;\n    gap: 32px;\n  }\n`;\n\nexport const DiaryInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n  }\n`;\n","import { Navigate } from \"react-router-dom\"\n\nconst WithDataRedirect = (Component) => {\n    return (props) => {\n        const {user: {bmr}} = props\n    return bmr ? <Component {...props} /> : <Navigate to='/profile' />\n}} \nexport default WithDataRedirect","import React from 'react';\nimport DayDashboard from 'components/DayDashboard/DayDashboard';\nimport DayProducts from 'components/DayProducts/DayProducts';\nimport DayExercises from 'components/DayExercises/DayExercises';\nimport { DiaryContainer, DiaryInfoContainer } from './DiaryPage.styled';\nimport { Container } from 'components/styles/Container/Container';\nimport Calendar from 'components/Calendar/Calendar';\nimport { Formik } from 'formik';\nimport WithDataRedirect from 'HOC/HocRedirect';\n\nconst DiaryPage = () => {\n  return (\n    <Container>\n      <Formik\n        initialValues={{\n          day: new Date(),\n        }}\n      >\n        {() => (\n          <form>\n            <Calendar name=\"day\" />\n          </form>\n        )}\n      </Formik>\n\n      <DiaryContainer>\n        <DayDashboard />\n        <DiaryInfoContainer>\n          <DayProducts />\n          <DayExercises />\n        </DiaryInfoContainer>\n      </DiaryContainer>\n    </Container>\n  );\n};\nconst WrapedDiaryPage = WithDataRedirect(DiaryPage);\nexport default WrapedDiaryPage;\n"],"names":["IconSvg","styled","_templateObject","_taggedTemplateLiteral","CalendarGlobalStyles","createGlobalStyle","_templateObject2","InputField","_templateObject3","_ref","name","selectedDate","setSelectedDate","useState","field","setValue","useField","useEffect","handleDateChange","Date","value","async","date","console","log","_jsx","_Fragment","children","_jsxs","style","width","position","paddingTop","height","href","concat","sprite","DatePicker","selected","onChange","customInput","cursor","dateFormat","calendarStartDay","formatWeekDay","day","substring","placeholderText","Container","DashboardSection","DashboardList","DashboardItems","props","$sportsRemaining","$caloriesRemaining","$index","DashboardTitle","_templateObject4","DashboardData","_templateObject5","DashboardTextContainer","_templateObject6","DashboardText","_templateObject7","IconWrap","_templateObject8","DayDashboard","user","useSelector","state","auth","dashboardData","setDashboardData","caloriesRemaining","Math","round","bmr","consumedCalories","sportsRemaining","consumedBurned","response","getDiaryData","error","fetchData","xlinkHref","ProductsSection","SvgExercise","ProductsContainer","ProductsTitle","ProductsLink","Link","NoDataTitle","NoDataWrap","ProductsTitleList","ProductsTitleItem","_templateObject9","ProductsList","ProductsItem","ProductsData","IndicatorIcon","TrashBtn","product","setDiaryProdData","useContext","ParentContext","title","category","calories","amount","onClick","axios","_id","data","consumedProducts","React","DayProducts","diaryProdData","to","OverlayScrollbarsComponent","defer","length","map","Provider","DayProductsItem","ExercisesSection","ExercisesTitle","ExercisesLink","ExercisesTitleList","ExercisesTitleItem","_templateObject10","exercise","setDiaryData","bodyPart","equipment","target","time","exercisesDone","DayExercises","diaryData","DayExercisesItem","DiaryContainer","DiaryInfoContainer","Component","Navigate","WithDataRedirect","DiaryPage","Formik","initialValues","Calendar"],"sourceRoot":""}