{"version":3,"file":"static/js/975.e1e0f02d.chunk.js","mappings":"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","sources":["components/styles/Container/Container.jsx","api/productsListApi.js","components/Filters/Filters.styled.jsx","components/Filters/Filters.jsx","components/ProductsListItem/ProductsListItem.styled.jsx","components/ExercisesMain/ModalProducts/ModalProducts.styled.js","api/addProductApi.js","components/ExercisesMain/ModalProducts/ModalProducts.jsx","components/ModalWindow/ProductsWellDoneModal/ModalWindowDiaryWellDone.styled.js","components/ModalWindow/ProductsWellDoneModal/ModalWindowDiaryWellDone.jsx","components/ProductsListItem/ProductsListItem.jsx","components/ProductsList/ProductsList.styled.jsx","components/ProductsList/ProductsList.jsx","components/PageBgWrapperCont/PageBgWrapperCont.styled.jsx","pages/ProductsPage/ProductsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-left: 96px;\n    padding-right: 96px;\n  }\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://project-fitness-app-back.onrender.com/api/';\n\nexport const getProducts = async (allowed, category, query) => {\n  let allowedValue;\n\n  if (allowed === 'All') {\n    allowedValue = 'all';\n  } else if (allowed === 'Not recommended') {\n    allowedValue = 'false';\n  } else if (allowed === 'Recommended') {\n    allowedValue = 'true';\n  }\n\n  const { data } = await axios.get('products/blood', {\n    params: {\n      allowed: allowedValue || 'all',\n      category,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getAllCategories = async () => {\n  const { data } = await axios.get('categories');\n  return data;\n};\n","import styled from 'styled-components';\n\nconst FiltersWrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-top: 40px;\n  margin-bottom: 28px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    justify-content: start;\n    margin-top: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 68px;\n    justify-content: end;\n  }\n`;\n\nexport { FiltersWrap };\n","import React, { useCallback, useEffect, useState } from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport SearchIcon from '@mui/icons-material/Search';\nimport IconButton from '@mui/material/IconButton';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { debounce } from 'lodash';\n\nimport { getAllCategories } from 'api/productsListApi';\nimport { FiltersWrap } from './Filters.styled';\nimport { InputLabel } from '@mui/material';\n\nconst recommendationOptions = ['All', 'Recommended', 'Not recommended'];\n\nconst CustomSelect = ({ label, id, value, onChange, options }) => (\n  <FormControl\n    sx={{\n      '.MuiInputLabel-root': {\n        color: 'rgba(255, 255, 255, 0.8)',\n        '&.Mui-focused': {\n          color: '#E6533C',\n        },\n      },\n      '.MuiOutlinedInput-notchedOutline': {\n        borderColor: 'rgba(239, 237, 232, 0.30)',\n        borderRadius: '12px',\n      },\n      '.MuiOutlinedInput-input': {\n        color: 'rgba(255, 255, 255, 0.8)',\n        fontSize: '16px',\n        fontWeight: 400,\n        lineHeight: '24px',\n      },\n      '.MuiSelect-icon': {\n        color: 'rgba(255, 255, 255, 0.8)',\n      },\n      '&:hover .MuiOutlinedInput-notchedOutline': {\n        borderColor: 'rgba(239, 237, 232, 0.30)',\n      },\n      '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n        borderColor: 'rgba(239, 237, 232, 0.30)',\n      },\n    }}\n  >\n    <InputLabel id={`${id}-label`}>{label}</InputLabel>\n    <Select\n      labelId={`${id}-label`}\n      id={id}\n      value={value}\n      label={label}\n      onChange={onChange}\n      IconComponent={KeyboardArrowDownIcon}\n      MenuProps={{\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left',\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'left',\n        },\n        PaperProps: {\n          style: {\n            maxHeight: 276,\n            maxWidth: 164,\n            marginTop: 2,\n            borderRadius: 12,\n            background: '#1C1C1C',\n            color: 'rgba(255, 255, 255, 0.8)',\n          },\n        },\n      }}\n      sx={{\n        width: 194,\n        height: 52,\n        '&:hover': {\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'rgba(239, 237, 232, 0.30)',\n          },\n        },\n      }}\n    >\n      {options?.map(item => (\n        <MenuItem\n          key={item}\n          sx={{\n            fontSize: '16px',\n            fontWeight: '400',\n            lineHeight: '24px',\n            textTransform: 'capitalize',\n          }}\n          value={item}\n        >\n          {item}\n        </MenuItem>\n      ))}\n    </Select>\n  </FormControl>\n);\n\nconst Filters = ({ filters, onChangeFilters }) => {\n  const [query, setQuery] = useState(filters.query);\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    const fetchAllProducts = async () => {\n      try {\n        const data = await getAllCategories();\n        setCategories(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchAllProducts();\n  }, []);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedSearch = useCallback(\n    debounce(value => {\n      onChangeFilters(prevFilters => ({\n        ...prevFilters,\n        query: value,\n      }));\n    }, 500),\n    []\n  );\n\n  const handleSearchChange = event => {\n    setQuery(event.target.value);\n    debouncedSearch(event.target.value);\n  };\n\n  const handleCategoryChange = event => {\n    onChangeFilters(prevFilters => ({\n      ...prevFilters,\n      category: event.target.value,\n    }));\n  };\n\n  const handleRecommendationChange = event => {\n    onChangeFilters(prevFilters => ({\n      ...prevFilters,\n      allowed: event.target.value,\n    }));\n  };\n\n  const clearFilters = () => {\n    setQuery('');\n    onChangeFilters(prevFilters => ({\n      ...prevFilters,\n      query: '',\n    }));\n  };\n\n  return (\n    <FiltersWrap>\n      <TextField\n        placeholder=\"Search\"\n        variant=\"outlined\"\n        value={query}\n        onChange={handleSearchChange}\n        sx={{\n          width: '335px',\n          '@media (min-width: 768px)': {\n            width: '235px',\n          },\n          '.MuiInputLabel-root': {\n            color: 'rgba(255, 255, 255, 0.8)',\n            '&.Mui-focused': {\n              color: '#E6533C',\n            },\n          },\n          '.MuiOutlinedInput-notchedOutline': {\n            borderColor: 'rgba(239, 237, 232, 0.30)',\n            borderRadius: '12px',\n          },\n          '.MuiOutlinedInput-root': {\n            color: 'rgba(255, 255, 255, 0.8)',\n            borderRadius: '12px',\n            '&:hover fieldset': {\n              borderColor: 'rgba(239, 237, 232, 0.30)',\n            },\n            '&.Mui-focused fieldset': {\n              borderColor: '#E6533C',\n            },\n          },\n          '& .MuiInputAdornment-root': {\n            color: 'rgba(239, 237, 232, 0.30)',\n          },\n        }}\n        size=\"small\"\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              {filters.query && (\n                <IconButton\n                  edge=\"end\"\n                  onClick={clearFilters}\n                  sx={{ color: '#E6533C' }}\n                >\n                  <ClearIcon />\n                </IconButton>\n              )}\n              <InputAdornment position=\"end\">\n                <SearchIcon sx={{ color: 'rgba(239, 237, 232, 0.30)' }} />\n              </InputAdornment>\n            </InputAdornment>\n          ),\n          style: {\n            height: 52,\n          },\n        }}\n      />\n\n      <CustomSelect\n        value={filters.category}\n        onChange={handleCategoryChange}\n        options={categories}\n        label=\"Category\"\n        id=\"category-select\"\n      />\n      <CustomSelect\n        value={filters.allowed}\n        onChange={handleRecommendationChange}\n        options={recommendationOptions}\n        label=\"Recommendation\"\n        id=\"recommendation-select\"\n      />\n    </FiltersWrap>\n  );\n};\n\nexport default Filters;\n","import styled from 'styled-components';\n\nexport const ProductsCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 98%;\n  height: 141px;\n  padding: 16px;\n  justify-content: center;\n  align-items: flex-start;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  background: rgba(239, 237, 232, 0.05);\n\n  @media screen and (min-width: 768px) {\n    max-width: 335px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 405px;\n  }\n`;\nexport const ProductsCardStatus = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 27px;\n  justify-content: space-between;\n`;\nexport const ProductsCardDiet = styled.span`\n  display: inline-flex;\n  padding: 5px 7.5px;\n  border-radius: 4px;\n  background: rgba(239, 237, 232, 0.05);\n  max-width: 90px;\n`;\nexport const ProductsCardDietText = styled.p`\n  color: var(--white-color);\n  font-size: 12px;\n  font-weight: 700;\n  line-height: normal;\n  text-transform: uppercase;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const ProductsCardStatusCount = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProductsCardStatusCountTrue = styled.p`\n  color: var(--white-color);\n  font-size: 12px;\n  line-height: 18px;\n  display: flex;\n  margin-right: 16px;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: block;\n    width: 14px;\n    height: 14px;\n    border-radius: 10px;\n    background: ${props => (props.$recommended ? '#419b09' : '#E9101D')};\n    margin-right: 8px;\n  }\n`;\n\nexport const SvgExercise = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--orange-color);\n  margin-left: 8px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1.5;\n  }\n`;\n\nexport const ProductsCardStatusAdd = styled.button`\n  background: transparent;\n  border: none;\n  color: var(--orange-color);\n  font-size: 16px;\n  line-height: 24px;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: var(--white-color);\n    ${SvgExercise} {\n      stroke: var(--white-color);\n    }\n  }\n`;\n\nexport const ProductsCardTitle = styled.h4`\n  font-size: 24px;\n  line-height: 1.3;\n  color: var(--white-color);\n  text-transform: capitalize;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 240px;\n`;\n\nexport const ProductsCardInfoList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  width: 100%;\n`;\n\nexport const ProductsCardInfoItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  max-width: 130px;\n  gap: 4px;\n  color: rgba(239, 237, 232, 0.4);\n  font-size: 12px;\n  line-height: 18px;\n`;\n\nexport const ProductsCardInfoValue = styled.p`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  color: var(--white);\n  font-size: 12px;\n  line-height: 18px;\n  text-transform: capitalize;\n`;\n\nexport const Value = styled.span`\n  color: var(--white-color);\n  margin-left: 4px;\n`;\n","import { Field } from 'formik';\nimport styled from 'styled-components';\nimport { ErrorMessage } from 'formik';\n\nexport const Container = styled.div``;\n\nexport const ModalStyles = {\n  overlay: {\n    backgroundColor: 'rgba(4, 4, 4, 0.4)',\n  },\n  content: {\n    maxWidth: '479px',\n    height: '280px',\n    padding: 0,\n\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: '#10100F',\n    border: '1px solid #efede833',\n    borderRadius: '12px',\n  },\n};\n\nexport const InputsContainer = styled.div`\n  margin-bottom: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const InputEl = styled(Field)`\n  box-sizing: border-box;\n\n  width: 100%;\n  padding: 8px 14px;\n  background-color: transparent;\n  font-size: 14px;\n  line-height: 1.28;\n  color: white;\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: var(--orange-color);\n  }\n\n  &::placeholder {\n    color: white;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.5;\n  }\n`;\n\nexport const ProductInput = styled.input`\n  cursor: unset;\n  width: 100%;\n  border-radius: 12px;\n  padding: 8px 14px;\n  border: 1px solid #e6533c;\n  background-color: transparent;\n  color: rgba(239, 237, 232, 0.3);\n  outline: none;\n\n  @media screen and (min-width: 768px) {\n    width: 244px;\n  }\n`;\n\nexport const WeightInputLabel = styled.label`\n  display: block;\n  position: relative;\n`;\n\nexport const WeightInput = styled.input`\n  width: 100%;\n  border-radius: 12px;\n  padding: 8px 14px;\n  border: 1px solid #e6533c;\n  background-color: transparent;\n  color: white;\n\n  @media screen and (min-width: 768px) {\n    width: 155px;\n  }\n`;\n\nexport const FieldLabel = styled.span`\n  position: absolute;\n  top: 50%;\n  right: 14px;\n  color: rgba(239, 237, 232, 0.4);\n  transform: translate(0, -50%);\n  /* color:; */\n  display: flex;\n  align-items: center;\n`;\n\nexport const Calories = styled.p`\n  margin-bottom: 24px;\n  text-align: left;\n  line-height: 1.5; /* 150% */\n  color: rgba(239, 237, 232, 0.4);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 64px;\n  }\n`;\n\nexport const CaloriesValue = styled.span`\n  color: white;\n`;\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const PFButton = styled.button`\n  display: block;\n\n  padding: 12px 32px;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5; /* 150% */\n  color: white;\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 32px;\n  }\n`;\n\nexport const PFPrimaryBtn = styled(PFButton)`\n  background-color: var(--orange-color);\n  border: 1px solid var(--orange-color);\n\n  &:hover,\n  &:focus {\n    background-color: var(--light-orange-color);\n    border: 1px solid var(--light-orange-color);\n  }\n`;\n\nexport const PFOutlinedBtn = styled(PFButton)`\n  width: 121px;\n  background-color: transparent;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n\n  &:hover,\n  &:focus {\n    border: 1px solid var(--orange-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 142px;\n  }\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  color: white;\n  margin-top: 4px;\n  line-height: 1.5;\n  letter-spacing: 0.12px;\n  @media screen and (min-width: 768px) {\n    width: 155px;\n  }\n`;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://project-fitness-app-back.onrender.com/api/\";\n\nexport const addProduct= async (body) => {\n  try {\n    const { data } = await axios.post('dairy/addProduct', body);\n    return data;\n  } catch (error) {\n    \n    console.error(\"Error in addProduct:\", error);\n    throw error;\n  }\n};","import React, { useState } from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { format } from 'date-fns';\nimport {\n  Container,\n  ModalStyles,\n  InputsContainer,\n  Calories,\n  CaloriesValue,\n  ButtonsContainer,\n  PFPrimaryBtn,\n  PFOutlinedBtn,\n  ProductInput,\n  WeightInput,\n  FieldLabel,\n  WeightInputLabel,\n  ErrorMessageStyled,\n} from './ModalProducts.styled';\nimport { ButtonCloseModal, Svg } from '../ModalWaist/ModalWaist.styled';\nimport Modal from 'react-modal';\nimport sprite from '../../../images/sprite.svg';\nimport 'overlayscrollbars/overlayscrollbars.css';\nimport { addProduct } from 'api/addProductApi';\nimport toast from 'react-hot-toast';\n\nconst ModalProducts = ({\n  id,\n  title,\n  calories,\n  onClick,\n  isOpen,\n  onClose,\n  setProductsWellDoneIsModalOpen,\n  onStateChange,\n}) => {\n  const [calculatedCalories, setCalculatedCalories] = useState(0);\n\n  const initialValues = {\n    productId: id,\n    date: format(new Date(), 'dd/MM/yyyy'),\n    amount: '',\n  };\n\n  const handleAddToDiaryClick = values => {\n    const { productId, amount } = values;\n    const calculatedCalories = calculateCalories(amount);\n\n    if (typeof onClick === 'function') {\n      onClick({\n        productId,\n        amount,\n        calories: calculatedCalories,\n      });\n    }\n  };\n\n  const schema = Yup.object().shape({\n    amount: Yup.number()\n      .max(999, 'Weight should not exceed 999 grams')\n      .required('Weight is required'),\n  });\n\n  const calculateCalories = amount => {\n    const calculated = (calories * amount) / 100;\n    onStateChange(calculated);\n    return parseFloat(calculated);\n  };\n\n  const handleWeightChange = (event, setFieldValue) => {\n    const amount = event.target.value.slice(0, 3);\n    const calories = calculateCalories(amount);\n    setCalculatedCalories(calories);\n    setFieldValue('amount', Number(amount));\n    setFieldValue('calories', calories);\n  };\n\n  const handleSubmit = (values, actions) => {\n    actions.resetForm();\n    handleAddToDiaryClick(values);\n    console.log('string', values);\n    addProduct(values)\n      .then(response => {\n        console.log('Product added successfully:', response);\n        onClose();\n        setProductsWellDoneIsModalOpen(true);\n      })\n      .catch(error => {\n        console.error('Error adding product:', error);\n        toast.error('Error adding product', {\n          duration: 3000,\n          position: 'top-center',\n        });\n      });\n  };\n\n  return (\n    <Modal style={ModalStyles} isOpen={isOpen} onRequestClose={onClose}>\n      <ButtonCloseModal onClick={onClose}>\n        <Svg>\n          <use href={`${sprite}#icon-x-modal`} />\n        </Svg>\n      </ButtonCloseModal>\n      {isOpen && (\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          {({ values, errors, touched, setFieldValue }) => (\n            <Form autoComplete=\"off\">\n              <Container>\n                <InputsContainer>\n                  <div>\n                    <label htmlFor=\"product\">\n                      <ProductInput\n                        name=\"product\"\n                        type=\"text\"\n                        value={title}\n                        readOnly\n                      />\n                    </label>\n                  </div>\n\n                  <div>\n                    <WeightInputLabel htmlFor=\"amount\">\n                      <WeightInput\n                        name=\"amount\"\n                        type=\"text\"\n                        onChange={e => handleWeightChange(e, setFieldValue)}\n                        onKeyPress={e => {\n                          const onlyDigits = /^[0-9\\b]+$/;\n                          if (!onlyDigits.test(e.key)) {\n                            e.preventDefault();\n                          }\n                        }}\n                        value={values.amount}\n                        $border={\n                          errors.amount && touched.amount && '1px solid #D80027'\n                        }\n                      />\n                      <FieldLabel>grams</FieldLabel>\n                    </WeightInputLabel>\n                    <ErrorMessageStyled name=\"amount\" component=\"p\" />\n                  </div>\n                </InputsContainer>\n\n                <Calories>\n                  Calories:\n                  <CaloriesValue>{calculatedCalories}</CaloriesValue>\n                </Calories>\n\n                <ButtonsContainer>\n                  <PFPrimaryBtn type=\"submit\">Add to diary</PFPrimaryBtn>\n                  <PFOutlinedBtn type=\"button\" onClick={onClose}>\n                    Cancel\n                  </PFOutlinedBtn>\n                </ButtonsContainer>\n              </Container>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </Modal>\n  );\n};\n\nexport default ModalProducts;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const SvgArrow = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--white-color);\n`;\n\nexport const SvgIconX = styled.svg`\n  width: 22px;\n  height: 22px;\n  stroke: var(--white-color);\n  position: absolute;\n  top: 16px;\n  right: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: 26px;\n    height: 26px;\n  }\n`;\n\nexport const LinkToDiary = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-top: 20px;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n`;\n\nexport const NextProductBtn = styled.button`\n  margin-top: 24px;\n  padding: 12px 32px;\n  background-color: var(--orange-color);\n  border-radius: 12px;\n  border: 1px solid rgba(239, 237, 232, 0.3);\n  color: var(--white-color);\n  font-size: 16px;\n  line-height: 1.1;\n\n  &:hover {\n    background-color: var(--light-orange-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    line-height: 1.2;\n    margin-top: 32px;\n    padding: 14px 32px;\n  }\n`;\n\nexport const WellDoneText = styled.h2`\n  font-size: 24px;\n  line-height: 1.3;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 32px;\n  }\n`;\n\nexport const CaloriesWrapp = styled.div`\n  margin-top: 16px;\n  color: rgba(239, 237, 232, 0.3);\n  font-size: 14px;\n`;\n\nexport const ModalStyle = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--black-color);\n  border: 1px solid rgba(239, 237, 232, 0.2);\n  box-shadow: 24px;\n  border-radius: 12px;\n  padding: 48px 80px;\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 430px;\n  }\n`;\n\nexport const CustomColor = styled.div`\n  color: var(--orange-color);\n`;\n\nexport const CustomWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n","import * as React from 'react';\n// import Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport sprite from '../../../images/sprite.svg';\nimport {\n  CaloriesWrapp,\n  CustomColor,\n  CustomWrapper,\n  LinkToDiary,\n  ModalStyle,\n  NextProductBtn,\n  SvgArrow,\n  SvgIconX,\n  WellDoneText,\n} from './ModalWindowDiaryWellDone.styled';\nimport avocado from '../../../images/avocado.png';\n\nexport default function BasicModalDiaryWellDone({\n  isProductsWellDoneModalOpen,\n  setProductsWellDoneIsModalOpen,\n  numberOfCalories,\n}) {\n  return (\n    <Modal\n      open={isProductsWellDoneModalOpen}\n      onClose={setProductsWellDoneIsModalOpen}\n    >\n      <ModalStyle>\n        <div onClick={() => setProductsWellDoneIsModalOpen(false)}>\n          <SvgIconX>\n            <use href={`${sprite}#icon-x`}></use>\n          </SvgIconX>\n        </div>\n\n        <div>\n          <img src={avocado} alt=\"avocado\" />\n        </div>\n\n        <WellDoneText>Well Done</WellDoneText>\n\n        <CaloriesWrapp>\n          <CustomWrapper>\n            Calories: <CustomColor>{numberOfCalories}</CustomColor>\n          </CustomWrapper>\n        </CaloriesWrapp>\n\n        <NextProductBtn\n          type=\"button\"\n          onClick={() => setProductsWellDoneIsModalOpen(false)}\n        >\n          <p>Next product</p>\n        </NextProductBtn>\n\n        <LinkToDiary to=\"/diary\">\n          To the diary\n          <SvgArrow>\n            <use href={`${sprite}#arrow-white`}></use>\n          </SvgArrow>\n        </LinkToDiary>\n      </ModalStyle>\n    </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport { StyleSheetManager } from 'styled-components';\nimport {\n  ProductsCard,\n  ProductsCardStatus,\n  ProductsCardDiet,\n  ProductsCardDietText,\n  ProductsCardStatusCount,\n  ProductsCardStatusCountTrue,\n  ProductsCardStatusAdd,\n  ProductsCardTitle,\n  ProductsCardInfoList,\n  ProductsCardInfoItem,\n  ProductsCardInfoValue,\n  SvgExercise,\n  Value,\n} from './ProductsListItem.styled';\nimport {\n  IconTitleDiv,\n  SpanIconRun,\n  SvgIconRun,\n} from 'components/ExercisesMain/Waist/ExercisesItem/ExercisesItem.styled';\nimport sprite from '../../images/sprite.svg';\nimport ModalProducts from 'components/ExercisesMain/ModalProducts';\nimport BasicModalDiaryWellDone from 'components/ModalWindow/ProductsWellDoneModal/ModalWindowDiaryWellDone';\n\nconst ProductsListItem = ({\n  id,\n  title,\n  calories,\n  category,\n  weight,\n  groupBloodNotAllowed,\n}) => {\n  const firstValue = Boolean(groupBloodNotAllowed['1']);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [isProductsWellDoneModalOpen, setProductsWellDoneIsModalOpen] =\n    useState(false);\n\n  const [calculatedCalories, setCalculatedCalories] = useState(0);\n\n  const handleChildStateChange = newState => {\n    setCalculatedCalories(newState);\n  };\n\n  const openModalToggle = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n  return (\n    <>\n      <ProductsCard>\n        <ProductsCardStatus>\n          <ProductsCardDiet>\n            <ProductsCardDietText>{category}</ProductsCardDietText>\n          </ProductsCardDiet>\n          <ProductsCardStatusCount>\n            <StyleSheetManager>\n              <ProductsCardStatusCountTrue $recommended={firstValue}>\n                {firstValue ? 'Recommended' : 'Not recommended'}\n              </ProductsCardStatusCountTrue>\n            </StyleSheetManager>\n            <ProductsCardStatusAdd onClick={openModalToggle} type=\"button\">\n              Add\n              <SvgExercise>\n                <use href={`${sprite}#icon-arrow-right`}></use>\n              </SvgExercise>\n            </ProductsCardStatusAdd>\n          </ProductsCardStatusCount>\n        </ProductsCardStatus>\n        <IconTitleDiv>\n          <SpanIconRun>\n            <SvgIconRun width={24} height={24}>\n              <use href={`${sprite}#icon-run-exercises`}></use>\n            </SvgIconRun>\n          </SpanIconRun>\n          <ProductsCardTitle>{title ? title : 'title'}</ProductsCardTitle>\n        </IconTitleDiv>\n\n        <ProductsCardInfoList>\n          <ProductsCardInfoItem>\n            <ProductsCardInfoValue>\n              Calories:<Value>{calories}</Value>\n            </ProductsCardInfoValue>\n          </ProductsCardInfoItem>\n          <ProductsCardInfoItem>\n            <ProductsCardInfoValue>\n              Category:<Value> {category}</Value>\n            </ProductsCardInfoValue>\n          </ProductsCardInfoItem>\n          <ProductsCardInfoItem>\n            <ProductsCardInfoValue>\n              Weight:<Value>{weight}</Value>\n            </ProductsCardInfoValue>\n          </ProductsCardInfoItem>\n        </ProductsCardInfoList>\n      </ProductsCard>\n      <ModalProducts\n        id={id}\n        title={title}\n        calories={calories}\n        isOpen={isModalOpen}\n        onClose={openModalToggle}\n        setProductsWellDoneIsModalOpen={setProductsWellDoneIsModalOpen}\n        onStateChange={handleChildStateChange}\n      />\n      <BasicModalDiaryWellDone\n        isProductsWellDoneModalOpen={isProductsWellDoneModalOpen}\n        setProductsWellDoneIsModalOpen={setProductsWellDoneIsModalOpen}\n        numberOfCalories={calculatedCalories}\n        closeModalProductsToggle={openModalToggle}\n      />\n    </>\n  );\n};\n\nexport default ProductsListItem;\n","import styled from 'styled-components';\n\nexport const ProductsListWrap = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n  overflow-y: auto;\n  max-height: 65vh;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: 16px;\n    row-gap: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 850px;\n  }\n\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: #ef8964;\n    border-radius: 4px;\n    height: 153px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: #efede81a;\n  }\n`;\n","import ProductsListItem from 'components/ProductsListItem/ProductsListItem';\nimport { ProductsListWrap } from './ProductsList.styled';\n\nconst ProductsList = ({ products }) => {\n  return (\n    <ProductsListWrap>\n      {products.map(\n        ({ _id, groupBloodNotAllowed, weight, calories, category, title }) => (\n          <ProductsListItem\n            key={_id}\n            id={_id}\n            weight={weight}\n            calories={calories}\n            category={category}\n            title={title}\n            groupBloodNotAllowed={groupBloodNotAllowed}\n          />\n        )\n      )}\n    </ProductsListWrap>\n  );\n};\n\nexport default ProductsList;\n","import styled from 'styled-components';\n\nimport imagePathDesktopAndTablet from '../../images/products-1x.jpg';\nimport imagePathDesktopAndTablet2x from '../../images/products-2x.jpg';\n\nexport const PageBgWrapperCont = styled.div`\n  overflow: hidden;\n  &::before {\n    content: '';\n    position: fixed;\n    top: 0;\n    left: 100%;\n    z-index: -10;\n    background: no-repeat;\n  }\n  @media screen and (min-width: 1440px) {\n    &::before {\n      width: 670px;\n      height: 1005px;\n      background-image: url(${imagePathDesktopAndTablet});\n      transform: translate(-30vw, 85px);\n    }\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      &::before {\n        width: 670px;\n        height: 1005px;\n        background-image: url(${imagePathDesktopAndTablet2x});\n      }\n    }\n  }\n\n  @media screen and (min-width: 2560px) {\n    &::before {\n      transform: translate(-43vw, 85px);\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport Filters from 'components/Filters/Filters';\nimport ProductsList from 'components/ProductsList/ProductsList';\nimport { PageBgWrapperCont } from 'components/PageBgWrapperCont/PageBgWrapperCont.styled';\nimport { Container } from 'components/styles/Container/Container';\nimport { getProducts } from 'api/productsListApi';\n\nconst ProductsPage = () => {\n  const [filters, setFilters] = React.useState({\n    query: '',\n    category: '',\n    allowed: '',\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleChangeFilters = newFilters => {\n    setFilters(newFilters);\n  };\n\n  const [products, setProducts] = useState([]);\n  React.useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getProducts(\n          filters.allowed,\n          filters.category,\n          filters.query\n        );\n        setProducts(data.result);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchProducts();\n  }, [filters]);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      <PageBgWrapperCont>\n        <Filters filters={filters} onChangeFilters={handleChangeFilters} />\n        <ProductsList products={products} />\n      </PageBgWrapperCont>\n    </Container>\n  );\n};\n\nexport default ProductsPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","axios","FiltersWrap","recommendationOptions","CustomSelect","_ref","label","id","value","onChange","options","_jsxs","FormControl","sx","color","borderColor","borderRadius","fontSize","fontWeight","lineHeight","children","_jsx","InputLabel","concat","Select","labelId","IconComponent","KeyboardArrowDownIcon","MenuProps","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","style","maxHeight","maxWidth","marginTop","background","width","height","map","item","MenuItem","textTransform","_ref2","filters","onChangeFilters","query","setQuery","useState","categories","setCategories","useEffect","async","data","getAllCategories","error","console","log","fetchAllProducts","debouncedSearch","useCallback","debounce","prevFilters","TextField","placeholder","variant","event","target","size","InputProps","endAdornment","InputAdornment","position","IconButton","edge","onClick","clearFilters","ClearIcon","SearchIcon","category","allowed","ProductsCard","ProductsCardStatus","_templateObject2","ProductsCardDiet","_templateObject3","ProductsCardDietText","_templateObject4","ProductsCardStatusCount","_templateObject5","ProductsCardStatusCountTrue","_templateObject6","props","$recommended","SvgExercise","_templateObject7","ProductsCardStatusAdd","_templateObject8","ProductsCardTitle","_templateObject9","ProductsCardInfoList","_templateObject10","ProductsCardInfoItem","_templateObject11","ProductsCardInfoValue","_templateObject12","Value","_templateObject13","ModalStyles","overlay","backgroundColor","content","padding","top","left","transform","border","InputsContainer","ProductInput","Field","WeightInputLabel","WeightInput","FieldLabel","Calories","CaloriesValue","ButtonsContainer","PFButton","PFPrimaryBtn","PFOutlinedBtn","ErrorMessageStyled","ErrorMessage","_templateObject14","title","calories","isOpen","onClose","setProductsWellDoneIsModalOpen","onStateChange","calculatedCalories","setCalculatedCalories","initialValues","productId","date","format","Date","amount","schema","Yup","shape","max","required","calculateCalories","calculated","parseFloat","Modal","onRequestClose","ButtonCloseModal","Svg","href","sprite","Formik","validationSchema","onSubmit","handleSubmit","values","actions","resetForm","handleAddToDiaryClick","body","addProduct","then","response","catch","toast","duration","errors","touched","setFieldValue","Form","autoComplete","htmlFor","name","type","readOnly","e","handleWeightChange","slice","Number","onKeyPress","test","key","preventDefault","$border","component","SvgArrow","SvgIconX","LinkToDiary","Link","NextProductBtn","WellDoneText","CaloriesWrapp","ModalStyle","CustomColor","CustomWrapper","BasicModalDiaryWellDone","isProductsWellDoneModalOpen","numberOfCalories","open","src","avocado","alt","to","weight","groupBloodNotAllowed","firstValue","Boolean","isModalOpen","setIsModalOpen","openModalToggle","_Fragment","StyleSheetManager","IconTitleDiv","SpanIconRun","SvgIconRun","ModalProducts","newState","closeModalProductsToggle","ProductsListWrap","products","_id","ProductsListItem","PageBgWrapperCont","imagePathDesktopAndTablet","imagePathDesktopAndTablet2x","ProductsPage","setFilters","React","isLoading","setIsLoading","setProducts","allowedValue","params","getProducts","result","fetchProducts","Loader","Filters","newFilters","ProductsList"],"sourceRoot":""}